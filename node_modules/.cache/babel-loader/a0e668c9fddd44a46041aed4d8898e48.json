{"ast":null,"code":"var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n/**\n * Based on https://github.com/jsstyles/css-vendor, but without having to\n * convert between different cases all the time.\n *\n * \n */\n\nimport createStaticPrefixer from 'inline-style-prefixer/static/createPrefixer';\nimport createDynamicPrefixer from 'inline-style-prefixer/dynamic/createPrefixer';\nimport ExecutionEnvironment from 'exenv';\nimport staticData from './prefix-data/static';\nimport dynamicData from './prefix-data/dynamic';\nimport { camelCaseToDashCase } from './camel-case-props-to-dash-case';\nvar prefixAll = createStaticPrefixer(staticData);\nvar InlineStylePrefixer = createDynamicPrefixer(dynamicData, prefixAll);\nfunction transformValues(style) {\n  return Object.keys(style).reduce(function (newStyle, key) {\n    var value = style[key];\n    if (Array.isArray(value)) {\n      value = value.join(';' + key + ':');\n    } else if (value && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && typeof value.toString === 'function') {\n      value = value.toString();\n    }\n    newStyle[key] = value;\n    return newStyle;\n  }, {});\n}\n\n// Flatten prefixed values that are arrays to strings.\n//\n// We get prefixed styles back in the form of:\n// - `display: \"flex\"` OR\n// - `display: \"-webkit-flex\"` OR\n// - `display: [/* ... */, \"-webkit-flex\", \"flex\"]\n//\n// The last form is problematic for eventual use in the browser and server\n// render. More confusingly, we have to do **different** things on the\n// browser and server (noted inline below).\n//\n// https://github.com/FormidableLabs/radium/issues/958\nfunction flattenStyleValues(style) {\n  return Object.keys(style).reduce(function (newStyle, key) {\n    var val = style[key];\n    if (Array.isArray(val)) {\n      if (ExecutionEnvironment.canUseDOM) {\n        // For the **browser**, when faced with multiple values, we just take\n        // the **last** one, which is the original passed in value before\n        // prefixing. This _should_ work, because `inline-style-prefixer`\n        // we're just passing through what would happen without ISP.\n\n        val = val[val.length - 1].toString();\n      } else {\n        // For the **server**, we just concatenate things together and convert\n        // the style object values into a hacked-up string of like `display:\n        // \"-webkit-flex;display:flex\"` that will SSR render correctly to like\n        // `\"display:-webkit-flex;display:flex\"` but would otherwise be\n        // totally invalid values.\n\n        // We convert keys to dash-case only for the serialize values and\n        // leave the real key camel-cased so it's as expected to React and\n        // other parts of the processing chain.\n        val = val.join(';' + camelCaseToDashCase(key) + ':');\n      }\n    }\n    newStyle[key] = val;\n    return newStyle;\n  }, {});\n}\nvar _hasWarnedAboutUserAgent = false;\nvar _lastUserAgent = void 0;\nvar _cachedPrefixer = void 0;\nfunction getPrefixer(userAgent) {\n  var actualUserAgent = userAgent || global && global.navigator && global.navigator.userAgent;\n  if (process.env.NODE_ENV !== 'production') {\n    if (!actualUserAgent && !_hasWarnedAboutUserAgent) {\n      /* eslint-disable no-console */\n      console.warn('Radium: userAgent should be supplied for server-side rendering. See ' + 'https://github.com/FormidableLabs/radium/tree/master/docs/api#radium ' + 'for more information.');\n      /* eslint-enable no-console */\n      _hasWarnedAboutUserAgent = true;\n    }\n  }\n  if (process.env.NODE_ENV === 'test' || !_cachedPrefixer || actualUserAgent !== _lastUserAgent) {\n    if (actualUserAgent === 'all') {\n      _cachedPrefixer = {\n        prefix: prefixAll,\n        prefixedKeyframes: 'keyframes'\n      };\n    } else {\n      _cachedPrefixer = new InlineStylePrefixer({\n        userAgent: actualUserAgent\n      });\n    }\n    _lastUserAgent = actualUserAgent;\n  }\n  return _cachedPrefixer;\n}\nexport function getPrefixedKeyframes(userAgent) {\n  return getPrefixer(userAgent).prefixedKeyframes || 'keyframes';\n}\n\n// Returns a new style object with vendor prefixes added to property names and\n// values.\nexport function getPrefixedStyle(style, userAgent) {\n  var styleWithFallbacks = transformValues(style);\n  var prefixer = getPrefixer(userAgent);\n  var prefixedStyle = prefixer.prefix(styleWithFallbacks);\n  var flattenedStyle = flattenStyleValues(prefixedStyle);\n  return flattenedStyle;\n}","map":{"version":3,"names":["_typeof","Symbol","iterator","obj","constructor","prototype","createStaticPrefixer","createDynamicPrefixer","ExecutionEnvironment","staticData","dynamicData","camelCaseToDashCase","prefixAll","InlineStylePrefixer","transformValues","style","Object","keys","reduce","newStyle","key","value","Array","isArray","join","toString","flattenStyleValues","val","canUseDOM","length","_hasWarnedAboutUserAgent","_lastUserAgent","_cachedPrefixer","getPrefixer","userAgent","actualUserAgent","global","navigator","process","env","NODE_ENV","console","warn","prefix","prefixedKeyframes","getPrefixedKeyframes","getPrefixedStyle","styleWithFallbacks","prefixer","prefixedStyle","flattenedStyle"],"sources":["C:/Users/prana/OneDrive/Desktop/Misc/officialwebsite/node_modules/radium/es/prefixer.js"],"sourcesContent":["var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\n * Based on https://github.com/jsstyles/css-vendor, but without having to\n * convert between different cases all the time.\n *\n * \n */\n\nimport createStaticPrefixer from 'inline-style-prefixer/static/createPrefixer';\nimport createDynamicPrefixer from 'inline-style-prefixer/dynamic/createPrefixer';\nimport ExecutionEnvironment from 'exenv';\n\nimport staticData from './prefix-data/static';\nimport dynamicData from './prefix-data/dynamic';\n\nimport { camelCaseToDashCase } from './camel-case-props-to-dash-case';\n\nvar prefixAll = createStaticPrefixer(staticData);\nvar InlineStylePrefixer = createDynamicPrefixer(dynamicData, prefixAll);\n\nfunction transformValues(style) {\n  return Object.keys(style).reduce(function (newStyle, key) {\n    var value = style[key];\n    if (Array.isArray(value)) {\n      value = value.join(';' + key + ':');\n    } else if (value && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && typeof value.toString === 'function') {\n      value = value.toString();\n    }\n\n    newStyle[key] = value;\n    return newStyle;\n  }, {});\n}\n\n// Flatten prefixed values that are arrays to strings.\n//\n// We get prefixed styles back in the form of:\n// - `display: \"flex\"` OR\n// - `display: \"-webkit-flex\"` OR\n// - `display: [/* ... */, \"-webkit-flex\", \"flex\"]\n//\n// The last form is problematic for eventual use in the browser and server\n// render. More confusingly, we have to do **different** things on the\n// browser and server (noted inline below).\n//\n// https://github.com/FormidableLabs/radium/issues/958\nfunction flattenStyleValues(style) {\n  return Object.keys(style).reduce(function (newStyle, key) {\n    var val = style[key];\n    if (Array.isArray(val)) {\n      if (ExecutionEnvironment.canUseDOM) {\n        // For the **browser**, when faced with multiple values, we just take\n        // the **last** one, which is the original passed in value before\n        // prefixing. This _should_ work, because `inline-style-prefixer`\n        // we're just passing through what would happen without ISP.\n\n        val = val[val.length - 1].toString();\n      } else {\n        // For the **server**, we just concatenate things together and convert\n        // the style object values into a hacked-up string of like `display:\n        // \"-webkit-flex;display:flex\"` that will SSR render correctly to like\n        // `\"display:-webkit-flex;display:flex\"` but would otherwise be\n        // totally invalid values.\n\n        // We convert keys to dash-case only for the serialize values and\n        // leave the real key camel-cased so it's as expected to React and\n        // other parts of the processing chain.\n        val = val.join(';' + camelCaseToDashCase(key) + ':');\n      }\n    }\n\n    newStyle[key] = val;\n    return newStyle;\n  }, {});\n}\n\nvar _hasWarnedAboutUserAgent = false;\nvar _lastUserAgent = void 0;\nvar _cachedPrefixer = void 0;\n\nfunction getPrefixer(userAgent) {\n  var actualUserAgent = userAgent || global && global.navigator && global.navigator.userAgent;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (!actualUserAgent && !_hasWarnedAboutUserAgent) {\n      /* eslint-disable no-console */\n      console.warn('Radium: userAgent should be supplied for server-side rendering. See ' + 'https://github.com/FormidableLabs/radium/tree/master/docs/api#radium ' + 'for more information.');\n      /* eslint-enable no-console */\n      _hasWarnedAboutUserAgent = true;\n    }\n  }\n\n  if (process.env.NODE_ENV === 'test' || !_cachedPrefixer || actualUserAgent !== _lastUserAgent) {\n    if (actualUserAgent === 'all') {\n      _cachedPrefixer = {\n        prefix: prefixAll,\n        prefixedKeyframes: 'keyframes'\n      };\n    } else {\n      _cachedPrefixer = new InlineStylePrefixer({ userAgent: actualUserAgent });\n    }\n    _lastUserAgent = actualUserAgent;\n  }\n\n  return _cachedPrefixer;\n}\n\nexport function getPrefixedKeyframes(userAgent) {\n  return getPrefixer(userAgent).prefixedKeyframes || 'keyframes';\n}\n\n// Returns a new style object with vendor prefixes added to property names and\n// values.\nexport function getPrefixedStyle(style, userAgent) {\n  var styleWithFallbacks = transformValues(style);\n  var prefixer = getPrefixer(userAgent);\n  var prefixedStyle = prefixer.prefix(styleWithFallbacks);\n  var flattenedStyle = flattenStyleValues(prefixedStyle);\n  return flattenedStyle;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}