{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/prana/OneDrive/Desktop/Misc/officialwebsite/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/prana/OneDrive/Desktop/Misc/officialwebsite/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"C:/Users/prana/OneDrive/Desktop/Misc/officialwebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/prana/OneDrive/Desktop/Misc/officialwebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Absorber } from \"./Options/Classes/Absorber\";\nimport { Absorbers } from \"./Absorbers\";\nimport { isInArray } from \"../../Utils/Utils\";\nvar AbsorbersPlugin = /*#__PURE__*/function () {\n  function AbsorbersPlugin() {\n    _classCallCheck(this, AbsorbersPlugin);\n    this.id = \"absorbers\";\n  }\n  _createClass(AbsorbersPlugin, [{\n    key: \"getPlugin\",\n    value: function getPlugin(container) {\n      return new Absorbers(container);\n    }\n  }, {\n    key: \"needsPlugin\",\n    value: function needsPlugin(options) {\n      var _a, _b, _c;\n      if (options === undefined) {\n        return false;\n      }\n      var absorbers = options.absorbers;\n      if (absorbers instanceof Array) {\n        return !!absorbers.length;\n      } else if (absorbers) {\n        return true;\n      } else if (((_c = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.events) === null || _b === void 0 ? void 0 : _b.onClick) === null || _c === void 0 ? void 0 : _c.mode) && isInArray(\"absorber\", options.interactivity.events.onClick.mode)) {\n        return true;\n      }\n      return false;\n    }\n  }, {\n    key: \"loadOptions\",\n    value: function loadOptions(options, source) {\n      var _a, _b;\n      if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n        return;\n      }\n      var optionsCast = options;\n      if (source === null || source === void 0 ? void 0 : source.absorbers) {\n        if ((source === null || source === void 0 ? void 0 : source.absorbers) instanceof Array) {\n          optionsCast.absorbers = source === null || source === void 0 ? void 0 : source.absorbers.map(function (s) {\n            var tmp = new Absorber();\n            tmp.load(s);\n            return tmp;\n          });\n        } else {\n          var absorberOptions = optionsCast.absorbers;\n          if ((absorberOptions === null || absorberOptions === void 0 ? void 0 : absorberOptions.load) === undefined) {\n            optionsCast.absorbers = absorberOptions = new Absorber();\n          }\n          absorberOptions.load(source === null || source === void 0 ? void 0 : source.absorbers);\n        }\n      }\n      var interactivityAbsorbers = (_b = (_a = source === null || source === void 0 ? void 0 : source.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.absorbers;\n      if (interactivityAbsorbers) {\n        if (interactivityAbsorbers instanceof Array) {\n          optionsCast.interactivity.modes.absorbers = interactivityAbsorbers.map(function (s) {\n            var tmp = new Absorber();\n            tmp.load(s);\n            return tmp;\n          });\n        } else {\n          var _absorberOptions = optionsCast.interactivity.modes.absorbers;\n          if ((_absorberOptions === null || _absorberOptions === void 0 ? void 0 : _absorberOptions.load) === undefined) {\n            optionsCast.interactivity.modes.absorbers = _absorberOptions = new Absorber();\n          }\n          _absorberOptions.load(interactivityAbsorbers);\n        }\n      }\n    }\n  }]);\n  return AbsorbersPlugin;\n}();\nexport function loadAbsorbersPlugin(_x) {\n  return _loadAbsorbersPlugin.apply(this, arguments);\n}\nfunction _loadAbsorbersPlugin() {\n  _loadAbsorbersPlugin = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(engine) {\n    var plugin;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          plugin = new AbsorbersPlugin();\n          _context.next = 3;\n          return engine.addPlugin(plugin);\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _loadAbsorbersPlugin.apply(this, arguments);\n}\nexport * from \"./Enums/AbsorberClickMode\";\nexport * from \"./Options/Interfaces/IAbsorberOptions\";","map":{"version":3,"names":["Absorber","Absorbers","isInArray","AbsorbersPlugin","_classCallCheck","id","_createClass","key","value","getPlugin","container","needsPlugin","options","_a","_b","_c","undefined","absorbers","Array","length","interactivity","events","onClick","mode","loadOptions","source","optionsCast","map","s","tmp","load","absorberOptions","interactivityAbsorbers","modes","loadAbsorbersPlugin","_x","_loadAbsorbersPlugin","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","engine","plugin","wrap","_callee$","_context","prev","next","addPlugin","stop"],"sources":["C:/Users/prana/OneDrive/Desktop/Misc/officialwebsite/node_modules/tsparticles/esm/Plugins/Absorbers/index.js"],"sourcesContent":["import { Absorber } from \"./Options/Classes/Absorber\";\nimport { Absorbers } from \"./Absorbers\";\nimport { isInArray } from \"../../Utils/Utils\";\nclass AbsorbersPlugin {\n    constructor() {\n        this.id = \"absorbers\";\n    }\n    getPlugin(container) {\n        return new Absorbers(container);\n    }\n    needsPlugin(options) {\n        var _a, _b, _c;\n        if (options === undefined) {\n            return false;\n        }\n        const absorbers = options.absorbers;\n        if (absorbers instanceof Array) {\n            return !!absorbers.length;\n        }\n        else if (absorbers) {\n            return true;\n        }\n        else if (((_c = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.events) === null || _b === void 0 ? void 0 : _b.onClick) === null || _c === void 0 ? void 0 : _c.mode) &&\n            isInArray(\"absorber\", options.interactivity.events.onClick.mode)) {\n            return true;\n        }\n        return false;\n    }\n    loadOptions(options, source) {\n        var _a, _b;\n        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n            return;\n        }\n        const optionsCast = options;\n        if (source === null || source === void 0 ? void 0 : source.absorbers) {\n            if ((source === null || source === void 0 ? void 0 : source.absorbers) instanceof Array) {\n                optionsCast.absorbers = source === null || source === void 0 ? void 0 : source.absorbers.map((s) => {\n                    const tmp = new Absorber();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                let absorberOptions = optionsCast.absorbers;\n                if ((absorberOptions === null || absorberOptions === void 0 ? void 0 : absorberOptions.load) === undefined) {\n                    optionsCast.absorbers = absorberOptions = new Absorber();\n                }\n                absorberOptions.load(source === null || source === void 0 ? void 0 : source.absorbers);\n            }\n        }\n        const interactivityAbsorbers = (_b = (_a = source === null || source === void 0 ? void 0 : source.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.absorbers;\n        if (interactivityAbsorbers) {\n            if (interactivityAbsorbers instanceof Array) {\n                optionsCast.interactivity.modes.absorbers = interactivityAbsorbers.map((s) => {\n                    const tmp = new Absorber();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                let absorberOptions = optionsCast.interactivity.modes.absorbers;\n                if ((absorberOptions === null || absorberOptions === void 0 ? void 0 : absorberOptions.load) === undefined) {\n                    optionsCast.interactivity.modes.absorbers = absorberOptions = new Absorber();\n                }\n                absorberOptions.load(interactivityAbsorbers);\n            }\n        }\n    }\n}\nexport async function loadAbsorbersPlugin(engine) {\n    const plugin = new AbsorbersPlugin();\n    await engine.addPlugin(plugin);\n}\nexport * from \"./Enums/AbsorberClickMode\";\nexport * from \"./Options/Interfaces/IAbsorberOptions\";\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}