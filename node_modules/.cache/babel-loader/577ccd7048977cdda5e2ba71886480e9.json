{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/prana/OneDrive/Desktop/Misc/officialwebsite/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _createForOfIteratorHelper from \"C:/Users/prana/OneDrive/Desktop/Misc/officialwebsite/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _asyncToGenerator from \"C:/Users/prana/OneDrive/Desktop/Misc/officialwebsite/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { TextDrawer, validTypes } from \"./TextDrawer\";\nexport function loadTextShape(_x) {\n  return _loadTextShape.apply(this, arguments);\n}\nfunction _loadTextShape() {\n  _loadTextShape = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(engine) {\n    var drawer, _iterator, _step, type;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          drawer = new TextDrawer();\n          _iterator = _createForOfIteratorHelper(validTypes);\n          _context.prev = 2;\n          _iterator.s();\n        case 4:\n          if ((_step = _iterator.n()).done) {\n            _context.next = 10;\n            break;\n          }\n          type = _step.value;\n          _context.next = 8;\n          return engine.addShape(type, drawer);\n        case 8:\n          _context.next = 4;\n          break;\n        case 10:\n          _context.next = 15;\n          break;\n        case 12:\n          _context.prev = 12;\n          _context.t0 = _context[\"catch\"](2);\n          _iterator.e(_context.t0);\n        case 15:\n          _context.prev = 15;\n          _iterator.f();\n          return _context.finish(15);\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[2, 12, 15, 18]]);\n  }));\n  return _loadTextShape.apply(this, arguments);\n}","map":{"version":3,"names":["TextDrawer","validTypes","loadTextShape","_x","_loadTextShape","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","engine","drawer","_iterator","_step","type","wrap","_callee$","_context","prev","next","_createForOfIteratorHelper","s","n","done","value","addShape","t0","e","f","finish","stop"],"sources":["C:/Users/prana/OneDrive/Desktop/Misc/officialwebsite/node_modules/tsparticles/esm/Shapes/Text/index.js"],"sourcesContent":["import { TextDrawer, validTypes } from \"./TextDrawer\";\nexport async function loadTextShape(engine) {\n    const drawer = new TextDrawer();\n    for (const type of validTypes) {\n        await engine.addShape(type, drawer);\n    }\n}\n"],"mappings":";;;AAAA,SAASA,UAAU,EAAEC,UAAU,QAAQ,cAAc;AACrD,gBAAsBC,aAAaA,CAAAC,EAAA;EAAA,OAAAC,cAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAKlC,SAAAF,eAAA;EAAAA,cAAA,GAAAG,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CALM,SAAAC,QAA6BC,MAAM;IAAA,IAAAC,MAAA,EAAAC,SAAA,EAAAC,KAAA,EAAAC,IAAA;IAAA,OAAAP,mBAAA,GAAAQ,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAChCR,MAAM,GAAG,IAAIZ,UAAU,EAAE;UAAAa,SAAA,GAAAQ,0BAAA,CACZpB,UAAU;UAAAiB,QAAA,CAAAC,IAAA;UAAAN,SAAA,CAAAS,CAAA;QAAA;UAAA,KAAAR,KAAA,GAAAD,SAAA,CAAAU,CAAA,IAAAC,IAAA;YAAAN,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAlBL,IAAI,GAAAD,KAAA,CAAAW,KAAA;UAAAP,QAAA,CAAAE,IAAA;UAAA,OACLT,MAAM,CAACe,QAAQ,CAACX,IAAI,EAAEH,MAAM,CAAC;QAAA;UAAAM,QAAA,CAAAE,IAAA;UAAA;QAAA;UAAAF,QAAA,CAAAE,IAAA;UAAA;QAAA;UAAAF,QAAA,CAAAC,IAAA;UAAAD,QAAA,CAAAS,EAAA,GAAAT,QAAA;UAAAL,SAAA,CAAAe,CAAA,CAAAV,QAAA,CAAAS,EAAA;QAAA;UAAAT,QAAA,CAAAC,IAAA;UAAAN,SAAA,CAAAgB,CAAA;UAAA,OAAAX,QAAA,CAAAY,MAAA;QAAA;QAAA;UAAA,OAAAZ,QAAA,CAAAa,IAAA;MAAA;IAAA,GAAArB,OAAA;EAAA,CAE1C;EAAA,OAAAN,cAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"module"}