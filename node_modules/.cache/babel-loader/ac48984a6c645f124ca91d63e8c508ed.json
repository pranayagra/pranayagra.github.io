{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/prana/OneDrive/Desktop/Misc/officialwebsite/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/prana/OneDrive/Desktop/Misc/officialwebsite/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"C:/Users/prana/OneDrive/Desktop/Misc/officialwebsite/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"C:/Users/prana/OneDrive/Desktop/Misc/officialwebsite/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"C:/Users/prana/OneDrive/Desktop/Misc/officialwebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/prana/OneDrive/Desktop/Misc/officialwebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Particles_engine;\nimport { calcPositionFromSize, getRangeMax, getRangeMin, getRangeValue, randomInRange, setRangeValue } from \"../Utils/NumberUtils\";\nimport { InteractionManager } from \"./Utils/InteractionManager\";\nimport { Particle } from \"./Particle\";\nimport { ParticlesOptions } from \"../Options/Classes/Particles/ParticlesOptions\";\nimport { Point } from \"./Utils/Point\";\nimport { QuadTree } from \"./Utils/QuadTree\";\nimport { Rectangle } from \"./Utils/Rectangle\";\nexport var Particles = /*#__PURE__*/function () {\n  function Particles(engine, container) {\n    _classCallCheck(this, Particles);\n    this.container = container;\n    _Particles_engine.set(this, void 0);\n    __classPrivateFieldSet(this, _Particles_engine, engine, \"f\");\n    this.nextId = 0;\n    this.array = [];\n    this.zArray = [];\n    this.limit = 0;\n    this.needsSort = false;\n    this.lastZIndex = 0;\n    this.freqs = {\n      links: new Map(),\n      triangles: new Map()\n    };\n    this.interactionManager = new InteractionManager(__classPrivateFieldGet(this, _Particles_engine, \"f\"), container);\n    var canvasSize = this.container.canvas.size;\n    this.linksColors = new Map();\n    this.quadTree = new QuadTree(new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, canvasSize.width * 3 / 2, canvasSize.height * 3 / 2), 4);\n    this.movers = __classPrivateFieldGet(this, _Particles_engine, \"f\").plugins.getMovers(container, true);\n    this.updaters = __classPrivateFieldGet(this, _Particles_engine, \"f\").plugins.getUpdaters(container, true);\n  }\n  _createClass(Particles, [{\n    key: \"count\",\n    get: function get() {\n      return this.array.length;\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      var _a;\n      var container = this.container,\n        options = container.actualOptions;\n      this.lastZIndex = 0;\n      this.needsSort = false;\n      this.freqs.links = new Map();\n      this.freqs.triangles = new Map();\n      var handled = false;\n      this.updaters = __classPrivateFieldGet(this, _Particles_engine, \"f\").plugins.getUpdaters(container, true);\n      this.interactionManager.init();\n      var _iterator = _createForOfIteratorHelper(container.plugins),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _step$value = _slicedToArray(_step.value, 2),\n            plugin = _step$value[1];\n          if (plugin.particlesInitialization !== undefined) {\n            handled = plugin.particlesInitialization();\n          }\n          if (handled) {\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      this.addManualParticles();\n      if (!handled) {\n        for (var group in options.particles.groups) {\n          var groupOptions = options.particles.groups[group];\n          for (var i = this.count, j = 0; j < ((_a = groupOptions.number) === null || _a === void 0 ? void 0 : _a.value) && i < options.particles.number.value; i++, j++) {\n            this.addParticle(undefined, groupOptions, group);\n          }\n        }\n        for (var _i = this.count; _i < options.particles.number.value; _i++) {\n          this.addParticle();\n        }\n      }\n      container.pathGenerator.init(container);\n    }\n  }, {\n    key: \"redraw\",\n    value: function () {\n      var _redraw = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              this.clear();\n              this.init();\n              _context.next = 4;\n              return this.draw({\n                value: 0,\n                factor: 0\n              });\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function redraw() {\n        return _redraw.apply(this, arguments);\n      }\n      return redraw;\n    }()\n  }, {\n    key: \"removeAt\",\n    value: function removeAt(index) {\n      var quantity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      var group = arguments.length > 2 ? arguments[2] : undefined;\n      var override = arguments.length > 3 ? arguments[3] : undefined;\n      if (!(index >= 0 && index <= this.count)) {\n        return;\n      }\n      var deleted = 0;\n      for (var i = index; deleted < quantity && i < this.count; i++) {\n        var particle = this.array[i];\n        if (!particle || particle.group !== group) {\n          continue;\n        }\n        particle.destroy(override);\n        this.array.splice(i--, 1);\n        var zIdx = this.zArray.indexOf(particle);\n        this.zArray.splice(zIdx, 1);\n        deleted++;\n      }\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(particle, group, override) {\n      this.removeAt(this.array.indexOf(particle), undefined, group, override);\n    }\n  }, {\n    key: \"update\",\n    value: function () {\n      var _update = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(delta) {\n        var container, particlesToDelete, _iterator2, _step2, _step2$value, plugin, _iterator3, _step3, _particle, resizeFactor, _iterator5, _step5, _step5$value, _plugin, _iterator6, _step6, mover, _i2, _particlesToDelete, particle, _iterator4, _step4, _particle2, _iterator7, _step7, updater;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              container = this.container, particlesToDelete = [];\n              container.pathGenerator.update();\n              _iterator2 = _createForOfIteratorHelper(container.plugins);\n              try {\n                for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                  _step2$value = _slicedToArray(_step2.value, 2), plugin = _step2$value[1];\n                  if (plugin.update !== undefined) {\n                    plugin.update(delta);\n                  }\n                }\n              } catch (err) {\n                _iterator2.e(err);\n              } finally {\n                _iterator2.f();\n              }\n              _iterator3 = _createForOfIteratorHelper(this.array);\n              _context2.prev = 5;\n              _iterator3.s();\n            case 7:\n              if ((_step3 = _iterator3.n()).done) {\n                _context2.next = 39;\n                break;\n              }\n              _particle = _step3.value;\n              resizeFactor = container.canvas.resizeFactor;\n              if (resizeFactor && !_particle.ignoresResizeRatio) {\n                _particle.position.x *= resizeFactor.width;\n                _particle.position.y *= resizeFactor.height;\n              }\n              _particle.ignoresResizeRatio = false;\n              _particle.bubble.inRange = false;\n              _iterator5 = _createForOfIteratorHelper(this.container.plugins);\n              _context2.prev = 14;\n              _iterator5.s();\n            case 16:\n              if ((_step5 = _iterator5.n()).done) {\n                _context2.next = 23;\n                break;\n              }\n              _step5$value = _slicedToArray(_step5.value, 2), _plugin = _step5$value[1];\n              if (!_particle.destroyed) {\n                _context2.next = 20;\n                break;\n              }\n              return _context2.abrupt(\"break\", 23);\n            case 20:\n              if (_plugin.particleUpdate) {\n                _plugin.particleUpdate(_particle, delta);\n              }\n            case 21:\n              _context2.next = 16;\n              break;\n            case 23:\n              _context2.next = 28;\n              break;\n            case 25:\n              _context2.prev = 25;\n              _context2.t0 = _context2[\"catch\"](14);\n              _iterator5.e(_context2.t0);\n            case 28:\n              _context2.prev = 28;\n              _iterator5.f();\n              return _context2.finish(28);\n            case 31:\n              _iterator6 = _createForOfIteratorHelper(this.movers);\n              try {\n                for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n                  mover = _step6.value;\n                  if (mover.isEnabled(_particle)) {\n                    mover.move(_particle, delta);\n                  }\n                }\n              } catch (err) {\n                _iterator6.e(err);\n              } finally {\n                _iterator6.f();\n              }\n              if (!_particle.destroyed) {\n                _context2.next = 36;\n                break;\n              }\n              particlesToDelete.push(_particle);\n              return _context2.abrupt(\"continue\", 37);\n            case 36:\n              this.quadTree.insert(new Point(_particle.getPosition(), _particle));\n            case 37:\n              _context2.next = 7;\n              break;\n            case 39:\n              _context2.next = 44;\n              break;\n            case 41:\n              _context2.prev = 41;\n              _context2.t1 = _context2[\"catch\"](5);\n              _iterator3.e(_context2.t1);\n            case 44:\n              _context2.prev = 44;\n              _iterator3.f();\n              return _context2.finish(44);\n            case 47:\n              for (_i2 = 0, _particlesToDelete = particlesToDelete; _i2 < _particlesToDelete.length; _i2++) {\n                particle = _particlesToDelete[_i2];\n                this.remove(particle);\n              }\n              _context2.next = 50;\n              return this.interactionManager.externalInteract(delta);\n            case 50:\n              _iterator4 = _createForOfIteratorHelper(container.particles.array);\n              _context2.prev = 51;\n              _iterator4.s();\n            case 53:\n              if ((_step4 = _iterator4.n()).done) {\n                _context2.next = 62;\n                break;\n              }\n              _particle2 = _step4.value;\n              _iterator7 = _createForOfIteratorHelper(this.updaters);\n              try {\n                for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n                  updater = _step7.value;\n                  updater.update(_particle2, delta);\n                }\n              } catch (err) {\n                _iterator7.e(err);\n              } finally {\n                _iterator7.f();\n              }\n              if (!(!_particle2.destroyed && !_particle2.spawning)) {\n                _context2.next = 60;\n                break;\n              }\n              _context2.next = 60;\n              return this.interactionManager.particlesInteract(_particle2, delta);\n            case 60:\n              _context2.next = 53;\n              break;\n            case 62:\n              _context2.next = 67;\n              break;\n            case 64:\n              _context2.prev = 64;\n              _context2.t2 = _context2[\"catch\"](51);\n              _iterator4.e(_context2.t2);\n            case 67:\n              _context2.prev = 67;\n              _iterator4.f();\n              return _context2.finish(67);\n            case 70:\n              delete container.canvas.resizeFactor;\n            case 71:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[5, 41, 44, 47], [14, 25, 28, 31], [51, 64, 67, 70]]);\n      }));\n      function update(_x) {\n        return _update.apply(this, arguments);\n      }\n      return update;\n    }()\n  }, {\n    key: \"draw\",\n    value: function () {\n      var _draw = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(delta) {\n        var container, canvasSize, _iterator8, _step8, _step8$value, plugin, _iterator9, _step9, p;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              container = this.container, canvasSize = this.container.canvas.size;\n              this.quadTree = new QuadTree(new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, canvasSize.width * 3 / 2, canvasSize.height * 3 / 2), 4);\n              container.canvas.clear();\n              _context3.next = 5;\n              return this.update(delta);\n            case 5:\n              if (this.needsSort) {\n                this.zArray.sort(function (a, b) {\n                  return b.position.z - a.position.z || a.id - b.id;\n                });\n                this.lastZIndex = this.zArray[this.zArray.length - 1].position.z;\n                this.needsSort = false;\n              }\n              _iterator8 = _createForOfIteratorHelper(container.plugins);\n              try {\n                for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n                  _step8$value = _slicedToArray(_step8.value, 2), plugin = _step8$value[1];\n                  container.canvas.drawPlugin(plugin, delta);\n                }\n              } catch (err) {\n                _iterator8.e(err);\n              } finally {\n                _iterator8.f();\n              }\n              _iterator9 = _createForOfIteratorHelper(this.zArray);\n              try {\n                for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n                  p = _step9.value;\n                  p.draw(delta);\n                }\n              } catch (err) {\n                _iterator9.e(err);\n              } finally {\n                _iterator9.f();\n              }\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function draw(_x2) {\n        return _draw.apply(this, arguments);\n      }\n      return draw;\n    }()\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.array = [];\n      this.zArray = [];\n    }\n  }, {\n    key: \"push\",\n    value: function push(nb, mouse, overrideOptions, group) {\n      this.pushing = true;\n      for (var i = 0; i < nb; i++) {\n        this.addParticle(mouse === null || mouse === void 0 ? void 0 : mouse.position, overrideOptions, group);\n      }\n      this.pushing = false;\n    }\n  }, {\n    key: \"addParticle\",\n    value: function addParticle(position, overrideOptions, group) {\n      var container = this.container,\n        options = container.actualOptions,\n        limit = options.particles.number.limit * container.density;\n      if (limit > 0) {\n        var countToRemove = this.count + 1 - limit;\n        if (countToRemove > 0) {\n          this.removeQuantity(countToRemove);\n        }\n      }\n      return this.pushParticle(position, overrideOptions, group);\n    }\n  }, {\n    key: \"addSplitParticle\",\n    value: function addSplitParticle(parent) {\n      var splitOptions = parent.options.destroy.split,\n        options = new ParticlesOptions();\n      options.load(parent.options);\n      var factor = getRangeValue(splitOptions.factor.value);\n      options.color.load({\n        value: {\n          hsl: parent.getFillColor()\n        }\n      });\n      if (typeof options.size.value === \"number\") {\n        options.size.value /= factor;\n      } else {\n        options.size.value.min /= factor;\n        options.size.value.max /= factor;\n      }\n      options.load(splitOptions.particles);\n      var offset = splitOptions.sizeOffset ? setRangeValue(-parent.size.value, parent.size.value) : 0,\n        position = {\n          x: parent.position.x + randomInRange(offset),\n          y: parent.position.y + randomInRange(offset)\n        };\n      return this.pushParticle(position, options, parent.group, function (particle) {\n        if (particle.size.value < 0.5) {\n          return false;\n        }\n        particle.velocity.length = randomInRange(setRangeValue(parent.velocity.length, particle.velocity.length));\n        particle.splitCount = parent.splitCount + 1;\n        particle.unbreakable = true;\n        setTimeout(function () {\n          particle.unbreakable = false;\n        }, 500);\n        return true;\n      });\n    }\n  }, {\n    key: \"removeQuantity\",\n    value: function removeQuantity(quantity, group) {\n      this.removeAt(0, quantity, group);\n    }\n  }, {\n    key: \"getLinkFrequency\",\n    value: function getLinkFrequency(p1, p2) {\n      var range = setRangeValue(p1.id, p2.id),\n        key = \"\".concat(getRangeMin(range), \"_\").concat(getRangeMax(range));\n      var res = this.freqs.links.get(key);\n      if (res === undefined) {\n        res = Math.random();\n        this.freqs.links.set(key, res);\n      }\n      return res;\n    }\n  }, {\n    key: \"getTriangleFrequency\",\n    value: function getTriangleFrequency(p1, p2, p3) {\n      var _ref = [p1.id, p2.id, p3.id],\n        id1 = _ref[0],\n        id2 = _ref[1],\n        id3 = _ref[2];\n      if (id1 > id2) {\n        var _ref2 = [id1, id2];\n        id2 = _ref2[0];\n        id1 = _ref2[1];\n      }\n      if (id2 > id3) {\n        var _ref3 = [id2, id3];\n        id3 = _ref3[0];\n        id2 = _ref3[1];\n      }\n      if (id1 > id3) {\n        var _ref4 = [id1, id3];\n        id3 = _ref4[0];\n        id1 = _ref4[1];\n      }\n      var key = \"\".concat(id1, \"_\").concat(id2, \"_\").concat(id3);\n      var res = this.freqs.triangles.get(key);\n      if (res === undefined) {\n        res = Math.random();\n        this.freqs.triangles.set(key, res);\n      }\n      return res;\n    }\n  }, {\n    key: \"addManualParticles\",\n    value: function addManualParticles() {\n      var container = this.container,\n        options = container.actualOptions;\n      var _iterator10 = _createForOfIteratorHelper(options.manualParticles),\n        _step10;\n      try {\n        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n          var particle = _step10.value;\n          this.addParticle(calcPositionFromSize({\n            size: container.canvas.size,\n            position: particle.position\n          }), particle.options);\n        }\n      } catch (err) {\n        _iterator10.e(err);\n      } finally {\n        _iterator10.f();\n      }\n    }\n  }, {\n    key: \"setDensity\",\n    value: function setDensity() {\n      var options = this.container.actualOptions;\n      for (var group in options.particles.groups) {\n        this.applyDensity(options.particles.groups[group], 0, group);\n      }\n      this.applyDensity(options.particles, options.manualParticles.length);\n    }\n  }, {\n    key: \"handleClickMode\",\n    value: function handleClickMode(mode) {\n      this.interactionManager.handleClickMode(mode);\n    }\n  }, {\n    key: \"applyDensity\",\n    value: function applyDensity(options, manualCount, group) {\n      var _a;\n      if (!((_a = options.number.density) === null || _a === void 0 ? void 0 : _a.enable)) {\n        return;\n      }\n      var numberOptions = options.number,\n        densityFactor = this.initDensityFactor(numberOptions.density),\n        optParticlesNumber = numberOptions.value,\n        optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber,\n        particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount,\n        particlesCount = Math.min(this.count, this.array.filter(function (t) {\n          return t.group === group;\n        }).length);\n      this.limit = numberOptions.limit * densityFactor;\n      if (particlesCount < particlesNumber) {\n        this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n      } else if (particlesCount > particlesNumber) {\n        this.removeQuantity(particlesCount - particlesNumber, group);\n      }\n    }\n  }, {\n    key: \"initDensityFactor\",\n    value: function initDensityFactor(densityOptions) {\n      var container = this.container;\n      if (!container.canvas.element || !densityOptions.enable) {\n        return 1;\n      }\n      var canvas = container.canvas.element,\n        pxRatio = container.retina.pixelRatio;\n      return canvas.width * canvas.height / (densityOptions.factor * Math.pow(pxRatio, 2) * densityOptions.area);\n    }\n  }, {\n    key: \"pushParticle\",\n    value: function pushParticle(position, overrideOptions, group, initializer) {\n      try {\n        var particle = new Particle(__classPrivateFieldGet(this, _Particles_engine, \"f\"), this.nextId, this.container, position, overrideOptions, group);\n        var canAdd = true;\n        if (initializer) {\n          canAdd = initializer(particle);\n        }\n        if (!canAdd) {\n          return;\n        }\n        this.array.push(particle);\n        this.zArray.push(particle);\n        this.nextId++;\n        return particle;\n      } catch (e) {\n        console.warn(\"error adding particle: \".concat(e));\n        return;\n      }\n    }\n  }]);\n  return Particles;\n}();\n_Particles_engine = new WeakMap();","map":{"version":3,"names":["__classPrivateFieldSet","receiver","state","value","kind","f","TypeError","has","call","set","__classPrivateFieldGet","get","_Particles_engine","calcPositionFromSize","getRangeMax","getRangeMin","getRangeValue","randomInRange","setRangeValue","InteractionManager","Particle","ParticlesOptions","Point","QuadTree","Rectangle","Particles","engine","container","_classCallCheck","nextId","array","zArray","limit","needsSort","lastZIndex","freqs","links","Map","triangles","interactionManager","canvasSize","canvas","size","linksColors","quadTree","width","height","movers","plugins","getMovers","updaters","getUpdaters","_createClass","key","length","init","_a","options","actualOptions","handled","_iterator","_createForOfIteratorHelper","_step","s","n","done","_step$value","_slicedToArray","plugin","particlesInitialization","undefined","err","e","addManualParticles","group","particles","groups","groupOptions","i","count","j","number","addParticle","pathGenerator","_redraw","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","clear","draw","factor","stop","redraw","apply","arguments","removeAt","index","quantity","override","deleted","particle","destroy","splice","zIdx","indexOf","remove","_update","_callee2","delta","particlesToDelete","_iterator2","_step2","_step2$value","_iterator3","_step3","_particle","resizeFactor","_iterator5","_step5","_step5$value","_plugin","_iterator6","_step6","mover","_i2","_particlesToDelete","_iterator4","_step4","_particle2","_iterator7","_step7","updater","_callee2$","_context2","update","ignoresResizeRatio","position","x","y","bubble","inRange","destroyed","abrupt","particleUpdate","t0","finish","isEnabled","move","push","insert","getPosition","t1","externalInteract","spawning","particlesInteract","t2","_x","_draw","_callee3","_iterator8","_step8","_step8$value","_iterator9","_step9","p","_callee3$","_context3","sort","a","b","z","id","drawPlugin","_x2","nb","mouse","overrideOptions","pushing","density","countToRemove","removeQuantity","pushParticle","addSplitParticle","parent","splitOptions","split","load","color","hsl","getFillColor","min","max","offset","sizeOffset","velocity","splitCount","unbreakable","setTimeout","getLinkFrequency","p1","p2","range","concat","res","Math","random","getTriangleFrequency","p3","_ref","id1","id2","id3","_ref2","_ref3","_ref4","_iterator10","manualParticles","_step10","setDensity","applyDensity","handleClickMode","mode","manualCount","enable","numberOptions","densityFactor","initDensityFactor","optParticlesNumber","optParticlesLimit","particlesNumber","particlesCount","filter","t","abs","densityOptions","element","pxRatio","retina","pixelRatio","pow","area","initializer","canAdd","console","warn","WeakMap"],"sources":["C:/Users/prana/OneDrive/Desktop/Misc/officialwebsite/node_modules/tsparticles/esm/Core/Particles.js"],"sourcesContent":["var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Particles_engine;\nimport { calcPositionFromSize, getRangeMax, getRangeMin, getRangeValue, randomInRange, setRangeValue, } from \"../Utils/NumberUtils\";\nimport { InteractionManager } from \"./Utils/InteractionManager\";\nimport { Particle } from \"./Particle\";\nimport { ParticlesOptions } from \"../Options/Classes/Particles/ParticlesOptions\";\nimport { Point } from \"./Utils/Point\";\nimport { QuadTree } from \"./Utils/QuadTree\";\nimport { Rectangle } from \"./Utils/Rectangle\";\nexport class Particles {\n    constructor(engine, container) {\n        this.container = container;\n        _Particles_engine.set(this, void 0);\n        __classPrivateFieldSet(this, _Particles_engine, engine, \"f\");\n        this.nextId = 0;\n        this.array = [];\n        this.zArray = [];\n        this.limit = 0;\n        this.needsSort = false;\n        this.lastZIndex = 0;\n        this.freqs = {\n            links: new Map(),\n            triangles: new Map(),\n        };\n        this.interactionManager = new InteractionManager(__classPrivateFieldGet(this, _Particles_engine, \"f\"), container);\n        const canvasSize = this.container.canvas.size;\n        this.linksColors = new Map();\n        this.quadTree = new QuadTree(new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2), 4);\n        this.movers = __classPrivateFieldGet(this, _Particles_engine, \"f\").plugins.getMovers(container, true);\n        this.updaters = __classPrivateFieldGet(this, _Particles_engine, \"f\").plugins.getUpdaters(container, true);\n    }\n    get count() {\n        return this.array.length;\n    }\n    init() {\n        var _a;\n        const container = this.container, options = container.actualOptions;\n        this.lastZIndex = 0;\n        this.needsSort = false;\n        this.freqs.links = new Map();\n        this.freqs.triangles = new Map();\n        let handled = false;\n        this.updaters = __classPrivateFieldGet(this, _Particles_engine, \"f\").plugins.getUpdaters(container, true);\n        this.interactionManager.init();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particlesInitialization !== undefined) {\n                handled = plugin.particlesInitialization();\n            }\n            if (handled) {\n                break;\n            }\n        }\n        this.addManualParticles();\n        if (!handled) {\n            for (const group in options.particles.groups) {\n                const groupOptions = options.particles.groups[group];\n                for (let i = this.count, j = 0; j < ((_a = groupOptions.number) === null || _a === void 0 ? void 0 : _a.value) && i < options.particles.number.value; i++, j++) {\n                    this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < options.particles.number.value; i++) {\n                this.addParticle();\n            }\n        }\n        container.pathGenerator.init(container);\n    }\n    async redraw() {\n        this.clear();\n        this.init();\n        await this.draw({ value: 0, factor: 0 });\n    }\n    removeAt(index, quantity = 1, group, override) {\n        if (!(index >= 0 && index <= this.count)) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            const particle = this.array[i];\n            if (!particle || particle.group !== group) {\n                continue;\n            }\n            particle.destroy(override);\n            this.array.splice(i--, 1);\n            const zIdx = this.zArray.indexOf(particle);\n            this.zArray.splice(zIdx, 1);\n            deleted++;\n        }\n    }\n    remove(particle, group, override) {\n        this.removeAt(this.array.indexOf(particle), undefined, group, override);\n    }\n    async update(delta) {\n        const container = this.container, particlesToDelete = [];\n        container.pathGenerator.update();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.update !== undefined) {\n                plugin.update(delta);\n            }\n        }\n        for (const particle of this.array) {\n            const resizeFactor = container.canvas.resizeFactor;\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            particle.bubble.inRange = false;\n            for (const [, plugin] of this.container.plugins) {\n                if (particle.destroyed) {\n                    break;\n                }\n                if (plugin.particleUpdate) {\n                    plugin.particleUpdate(particle, delta);\n                }\n            }\n            for (const mover of this.movers) {\n                if (mover.isEnabled(particle)) {\n                    mover.move(particle, delta);\n                }\n            }\n            if (particle.destroyed) {\n                particlesToDelete.push(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        for (const particle of particlesToDelete) {\n            this.remove(particle);\n        }\n        await this.interactionManager.externalInteract(delta);\n        for (const particle of container.particles.array) {\n            for (const updater of this.updaters) {\n                updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                await this.interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete container.canvas.resizeFactor;\n    }\n    async draw(delta) {\n        const container = this.container, canvasSize = this.container.canvas.size;\n        this.quadTree = new QuadTree(new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2), 4);\n        container.canvas.clear();\n        await this.update(delta);\n        if (this.needsSort) {\n            this.zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            this.lastZIndex = this.zArray[this.zArray.length - 1].position.z;\n            this.needsSort = false;\n        }\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this.zArray) {\n            p.draw(delta);\n        }\n    }\n    clear() {\n        this.array = [];\n        this.zArray = [];\n    }\n    push(nb, mouse, overrideOptions, group) {\n        this.pushing = true;\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse === null || mouse === void 0 ? void 0 : mouse.position, overrideOptions, group);\n        }\n        this.pushing = false;\n    }\n    addParticle(position, overrideOptions, group) {\n        const container = this.container, options = container.actualOptions, limit = options.particles.number.limit * container.density;\n        if (limit > 0) {\n            const countToRemove = this.count + 1 - limit;\n            if (countToRemove > 0) {\n                this.removeQuantity(countToRemove);\n            }\n        }\n        return this.pushParticle(position, overrideOptions, group);\n    }\n    addSplitParticle(parent) {\n        const splitOptions = parent.options.destroy.split, options = new ParticlesOptions();\n        options.load(parent.options);\n        const factor = getRangeValue(splitOptions.factor.value);\n        options.color.load({\n            value: {\n                hsl: parent.getFillColor(),\n            },\n        });\n        if (typeof options.size.value === \"number\") {\n            options.size.value /= factor;\n        }\n        else {\n            options.size.value.min /= factor;\n            options.size.value.max /= factor;\n        }\n        options.load(splitOptions.particles);\n        const offset = splitOptions.sizeOffset ? setRangeValue(-parent.size.value, parent.size.value) : 0, position = {\n            x: parent.position.x + randomInRange(offset),\n            y: parent.position.y + randomInRange(offset),\n        };\n        return this.pushParticle(position, options, parent.group, (particle) => {\n            if (particle.size.value < 0.5) {\n                return false;\n            }\n            particle.velocity.length = randomInRange(setRangeValue(parent.velocity.length, particle.velocity.length));\n            particle.splitCount = parent.splitCount + 1;\n            particle.unbreakable = true;\n            setTimeout(() => {\n                particle.unbreakable = false;\n            }, 500);\n            return true;\n        });\n    }\n    removeQuantity(quantity, group) {\n        this.removeAt(0, quantity, group);\n    }\n    getLinkFrequency(p1, p2) {\n        const range = setRangeValue(p1.id, p2.id), key = `${getRangeMin(range)}_${getRangeMax(range)}`;\n        let res = this.freqs.links.get(key);\n        if (res === undefined) {\n            res = Math.random();\n            this.freqs.links.set(key, res);\n        }\n        return res;\n    }\n    getTriangleFrequency(p1, p2, p3) {\n        let [id1, id2, id3] = [p1.id, p2.id, p3.id];\n        if (id1 > id2) {\n            [id2, id1] = [id1, id2];\n        }\n        if (id2 > id3) {\n            [id3, id2] = [id2, id3];\n        }\n        if (id1 > id3) {\n            [id3, id1] = [id1, id3];\n        }\n        const key = `${id1}_${id2}_${id3}`;\n        let res = this.freqs.triangles.get(key);\n        if (res === undefined) {\n            res = Math.random();\n            this.freqs.triangles.set(key, res);\n        }\n        return res;\n    }\n    addManualParticles() {\n        const container = this.container, options = container.actualOptions;\n        for (const particle of options.manualParticles) {\n            this.addParticle(calcPositionFromSize({\n                size: container.canvas.size,\n                position: particle.position,\n            }), particle.options);\n        }\n    }\n    setDensity() {\n        const options = this.container.actualOptions;\n        for (const group in options.particles.groups) {\n            this.applyDensity(options.particles.groups[group], 0, group);\n        }\n        this.applyDensity(options.particles, options.manualParticles.length);\n    }\n    handleClickMode(mode) {\n        this.interactionManager.handleClickMode(mode);\n    }\n    applyDensity(options, manualCount, group) {\n        var _a;\n        if (!((_a = options.number.density) === null || _a === void 0 ? void 0 : _a.enable)) {\n            return;\n        }\n        const numberOptions = options.number, densityFactor = this.initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.array.filter((t) => t.group === group).length);\n        this.limit = numberOptions.limit * densityFactor;\n        if (particlesCount < particlesNumber) {\n            this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n        }\n        else if (particlesCount > particlesNumber) {\n            this.removeQuantity(particlesCount - particlesNumber, group);\n        }\n    }\n    initDensityFactor(densityOptions) {\n        const container = this.container;\n        if (!container.canvas.element || !densityOptions.enable) {\n            return 1;\n        }\n        const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n        return (canvas.width * canvas.height) / (densityOptions.factor * pxRatio ** 2 * densityOptions.area);\n    }\n    pushParticle(position, overrideOptions, group, initializer) {\n        try {\n            const particle = new Particle(__classPrivateFieldGet(this, _Particles_engine, \"f\"), this.nextId, this.container, position, overrideOptions, group);\n            let canAdd = true;\n            if (initializer) {\n                canAdd = initializer(particle);\n            }\n            if (!canAdd) {\n                return;\n            }\n            this.array.push(particle);\n            this.zArray.push(particle);\n            this.nextId++;\n            return particle;\n        }\n        catch (e) {\n            console.warn(`error adding particle: ${e}`);\n            return;\n        }\n    }\n}\n_Particles_engine = new WeakMap();\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}