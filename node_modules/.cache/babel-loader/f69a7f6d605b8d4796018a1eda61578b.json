{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/Users/prana/OneDrive/Desktop/Misc/officialwebsite/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"C:/Users/prana/OneDrive/Desktop/Misc/officialwebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/prana/OneDrive/Desktop/Misc/officialwebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Absorber } from \"./Options/Classes/Absorber\";\nimport { AbsorberInstance } from \"./AbsorberInstance\";\nimport { itemFromArray } from \"../../Utils/Utils\";\nexport var Absorbers = /*#__PURE__*/function () {\n  function Absorbers(container) {\n    var _this = this;\n    _classCallCheck(this, Absorbers);\n    this.container = container;\n    this.array = [];\n    this.absorbers = [];\n    this.interactivityAbsorbers = [];\n    var overridableContainer = container;\n    overridableContainer.getAbsorber = function (idxOrName) {\n      return idxOrName === undefined || typeof idxOrName === \"number\" ? _this.array[idxOrName || 0] : _this.array.find(function (t) {\n        return t.name === idxOrName;\n      });\n    };\n    overridableContainer.addAbsorber = function (options, position) {\n      return _this.addAbsorber(options, position);\n    };\n  }\n  _createClass(Absorbers, [{\n    key: \"init\",\n    value: function init(options) {\n      var _a, _b;\n      if (!options) {\n        return;\n      }\n      if (options.absorbers) {\n        if (options.absorbers instanceof Array) {\n          this.absorbers = options.absorbers.map(function (s) {\n            var tmp = new Absorber();\n            tmp.load(s);\n            return tmp;\n          });\n        } else {\n          if (this.absorbers instanceof Array) {\n            this.absorbers = new Absorber();\n          }\n          this.absorbers.load(options.absorbers);\n        }\n      }\n      var interactivityAbsorbers = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.absorbers;\n      if (interactivityAbsorbers) {\n        if (interactivityAbsorbers instanceof Array) {\n          this.interactivityAbsorbers = interactivityAbsorbers.map(function (s) {\n            var tmp = new Absorber();\n            tmp.load(s);\n            return tmp;\n          });\n        } else {\n          if (this.interactivityAbsorbers instanceof Array) {\n            this.interactivityAbsorbers = new Absorber();\n          }\n          this.interactivityAbsorbers.load(interactivityAbsorbers);\n        }\n      }\n      if (this.absorbers instanceof Array) {\n        var _iterator = _createForOfIteratorHelper(this.absorbers),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var absorberOptions = _step.value;\n            this.addAbsorber(absorberOptions);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      } else {\n        this.addAbsorber(this.absorbers);\n      }\n    }\n  }, {\n    key: \"particleUpdate\",\n    value: function particleUpdate(particle) {\n      var _iterator2 = _createForOfIteratorHelper(this.array),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var absorber = _step2.value;\n          absorber.attract(particle);\n          if (particle.destroyed) {\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(context) {\n      var _iterator3 = _createForOfIteratorHelper(this.array),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var absorber = _step3.value;\n          context.save();\n          absorber.draw(context);\n          context.restore();\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.array = [];\n    }\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      var _iterator4 = _createForOfIteratorHelper(this.array),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var absorber = _step4.value;\n          absorber.resize();\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n    }\n  }, {\n    key: \"handleClickMode\",\n    value: function handleClickMode(mode) {\n      var absorberOptions = this.absorbers,\n        modeAbsorbers = this.interactivityAbsorbers;\n      if (mode === \"absorber\") {\n        var absorbersModeOptions;\n        if (modeAbsorbers instanceof Array) {\n          if (modeAbsorbers.length > 0) {\n            absorbersModeOptions = itemFromArray(modeAbsorbers);\n          }\n        } else {\n          absorbersModeOptions = modeAbsorbers;\n        }\n        var absorbersOptions = absorbersModeOptions !== null && absorbersModeOptions !== void 0 ? absorbersModeOptions : absorberOptions instanceof Array ? itemFromArray(absorberOptions) : absorberOptions,\n          aPosition = this.container.interactivity.mouse.clickPosition;\n        this.addAbsorber(absorbersOptions, aPosition);\n      }\n    }\n  }, {\n    key: \"addAbsorber\",\n    value: function addAbsorber(options, position) {\n      var absorber = new AbsorberInstance(this, this.container, options, position);\n      this.array.push(absorber);\n      return absorber;\n    }\n  }, {\n    key: \"removeAbsorber\",\n    value: function removeAbsorber(absorber) {\n      var index = this.array.indexOf(absorber);\n      if (index >= 0) {\n        this.array.splice(index, 1);\n      }\n    }\n  }]);\n  return Absorbers;\n}();","map":{"version":3,"names":["Absorber","AbsorberInstance","itemFromArray","Absorbers","container","_this","_classCallCheck","array","absorbers","interactivityAbsorbers","overridableContainer","getAbsorber","idxOrName","undefined","find","t","name","addAbsorber","options","position","_createClass","key","value","init","_a","_b","Array","map","s","tmp","load","interactivity","modes","_iterator","_createForOfIteratorHelper","_step","n","done","absorberOptions","err","e","f","particleUpdate","particle","_iterator2","_step2","absorber","attract","destroyed","draw","context","_iterator3","_step3","save","restore","stop","resize","_iterator4","_step4","handleClickMode","mode","modeAbsorbers","absorbersModeOptions","length","absorbersOptions","aPosition","mouse","clickPosition","push","removeAbsorber","index","indexOf","splice"],"sources":["C:/Users/prana/OneDrive/Desktop/Misc/officialwebsite/node_modules/tsparticles/esm/Plugins/Absorbers/Absorbers.js"],"sourcesContent":["import { Absorber } from \"./Options/Classes/Absorber\";\nimport { AbsorberInstance } from \"./AbsorberInstance\";\nimport { itemFromArray } from \"../../Utils/Utils\";\nexport class Absorbers {\n    constructor(container) {\n        this.container = container;\n        this.array = [];\n        this.absorbers = [];\n        this.interactivityAbsorbers = [];\n        const overridableContainer = container;\n        overridableContainer.getAbsorber = (idxOrName) => idxOrName === undefined || typeof idxOrName === \"number\"\n            ? this.array[idxOrName || 0]\n            : this.array.find((t) => t.name === idxOrName);\n        overridableContainer.addAbsorber = (options, position) => this.addAbsorber(options, position);\n    }\n    init(options) {\n        var _a, _b;\n        if (!options) {\n            return;\n        }\n        if (options.absorbers) {\n            if (options.absorbers instanceof Array) {\n                this.absorbers = options.absorbers.map((s) => {\n                    const tmp = new Absorber();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                if (this.absorbers instanceof Array) {\n                    this.absorbers = new Absorber();\n                }\n                this.absorbers.load(options.absorbers);\n            }\n        }\n        const interactivityAbsorbers = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.absorbers;\n        if (interactivityAbsorbers) {\n            if (interactivityAbsorbers instanceof Array) {\n                this.interactivityAbsorbers = interactivityAbsorbers.map((s) => {\n                    const tmp = new Absorber();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                if (this.interactivityAbsorbers instanceof Array) {\n                    this.interactivityAbsorbers = new Absorber();\n                }\n                this.interactivityAbsorbers.load(interactivityAbsorbers);\n            }\n        }\n        if (this.absorbers instanceof Array) {\n            for (const absorberOptions of this.absorbers) {\n                this.addAbsorber(absorberOptions);\n            }\n        }\n        else {\n            this.addAbsorber(this.absorbers);\n        }\n    }\n    particleUpdate(particle) {\n        for (const absorber of this.array) {\n            absorber.attract(particle);\n            if (particle.destroyed) {\n                break;\n            }\n        }\n    }\n    draw(context) {\n        for (const absorber of this.array) {\n            context.save();\n            absorber.draw(context);\n            context.restore();\n        }\n    }\n    stop() {\n        this.array = [];\n    }\n    resize() {\n        for (const absorber of this.array) {\n            absorber.resize();\n        }\n    }\n    handleClickMode(mode) {\n        const absorberOptions = this.absorbers, modeAbsorbers = this.interactivityAbsorbers;\n        if (mode === \"absorber\") {\n            let absorbersModeOptions;\n            if (modeAbsorbers instanceof Array) {\n                if (modeAbsorbers.length > 0) {\n                    absorbersModeOptions = itemFromArray(modeAbsorbers);\n                }\n            }\n            else {\n                absorbersModeOptions = modeAbsorbers;\n            }\n            const absorbersOptions = absorbersModeOptions !== null && absorbersModeOptions !== void 0 ? absorbersModeOptions : (absorberOptions instanceof Array ? itemFromArray(absorberOptions) : absorberOptions), aPosition = this.container.interactivity.mouse.clickPosition;\n            this.addAbsorber(absorbersOptions, aPosition);\n        }\n    }\n    addAbsorber(options, position) {\n        const absorber = new AbsorberInstance(this, this.container, options, position);\n        this.array.push(absorber);\n        return absorber;\n    }\n    removeAbsorber(absorber) {\n        const index = this.array.indexOf(absorber);\n        if (index >= 0) {\n            this.array.splice(index, 1);\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}