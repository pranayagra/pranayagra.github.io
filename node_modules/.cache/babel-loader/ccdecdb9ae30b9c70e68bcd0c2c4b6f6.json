{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\nimport appendImportantToEachValue from './append-important-to-each-value';\nimport cssRuleSetToString from './css-rule-set-to-string';\nimport getState from './get-state';\nimport getStateKey from './get-state-key';\nimport cleanStateKey from './clean-state-key';\nimport getRadiumStyleState from './get-radium-style-state';\nimport hash from './hash';\nimport { isNestedStyle, mergeStyles } from './merge-styles';\nimport Plugins from './plugins/';\nimport ExecutionEnvironment from 'exenv';\nimport React from 'react';\nvar DEFAULT_CONFIG = {\n  plugins: [Plugins.mergeStyleArray, Plugins.checkProps, Plugins.resolveMediaQueries, Plugins.resolveInteractionStyles, Plugins.keyframes, Plugins.visited, Plugins.removeNestedStyles, Plugins.prefix, Plugins.checkProps]\n};\n\n// Gross\nvar globalState = {};\n\n// Declare early for recursive helpers.\nvar _resolveStyles5 = null;\nvar _shouldResolveStyles = function _shouldResolveStyles(component) {\n  return component.type && !component.type._isRadiumEnhanced;\n};\nvar _resolveChildren = function _resolveChildren(_ref) {\n  var children = _ref.children,\n    component = _ref.component,\n    config = _ref.config,\n    existingKeyMap = _ref.existingKeyMap,\n    extraStateKeyMap = _ref.extraStateKeyMap;\n  if (!children) {\n    return children;\n  }\n  var childrenType = typeof children === 'undefined' ? 'undefined' : _typeof(children);\n  if (childrenType === 'string' || childrenType === 'number') {\n    // Don't do anything with a single primitive child\n    return children;\n  }\n  if (childrenType === 'function') {\n    // Wrap the function, resolving styles on the result\n    return function () {\n      var result = children.apply(this, arguments);\n      if (React.isValidElement(result)) {\n        var _key = getStateKey(result);\n        delete extraStateKeyMap[_key];\n        var _resolveStyles = _resolveStyles5(component, result, config, existingKeyMap, true, extraStateKeyMap),\n          _element = _resolveStyles.element;\n        return _element;\n      }\n      return result;\n    };\n  }\n  if (React.Children.count(children) === 1 && children.type) {\n    // If a React Element is an only child, don't wrap it in an array for\n    // React.Children.map() for React.Children.only() compatibility.\n    var onlyChild = React.Children.only(children);\n    var _key2 = getStateKey(onlyChild);\n    delete extraStateKeyMap[_key2];\n    var _resolveStyles2 = _resolveStyles5(component, onlyChild, config, existingKeyMap, true, extraStateKeyMap),\n      _element2 = _resolveStyles2.element;\n    return _element2;\n  }\n  return React.Children.map(children, function (child) {\n    if (React.isValidElement(child)) {\n      var _key3 = getStateKey(child);\n      delete extraStateKeyMap[_key3];\n      var _resolveStyles3 = _resolveStyles5(component, child, config, existingKeyMap, true, extraStateKeyMap),\n        _element3 = _resolveStyles3.element;\n      return _element3;\n    }\n    return child;\n  });\n};\n\n// Recurse over props, just like children\nvar _resolveProps = function _resolveProps(_ref2) {\n  var component = _ref2.component,\n    config = _ref2.config,\n    existingKeyMap = _ref2.existingKeyMap,\n    props = _ref2.props,\n    extraStateKeyMap = _ref2.extraStateKeyMap;\n  var newProps = props;\n  Object.keys(props).forEach(function (prop) {\n    // We already recurse over children above\n    if (prop === 'children') {\n      return;\n    }\n    var propValue = props[prop];\n    if (React.isValidElement(propValue)) {\n      var _key4 = getStateKey(propValue);\n      delete extraStateKeyMap[_key4];\n      newProps = _extends({}, newProps);\n      var _resolveStyles4 = _resolveStyles5(component, propValue, config, existingKeyMap, true, extraStateKeyMap),\n        _element4 = _resolveStyles4.element;\n      newProps[prop] = _element4;\n    }\n  });\n  return newProps;\n};\nvar _buildGetKey = function _buildGetKey(_ref3) {\n  var componentName = _ref3.componentName,\n    existingKeyMap = _ref3.existingKeyMap,\n    renderedElement = _ref3.renderedElement;\n\n  // We need a unique key to correlate state changes due to user interaction\n  // with the rendered element, so we know to apply the proper interactive\n  // styles.\n  var originalKey = getStateKey(renderedElement);\n  var key = cleanStateKey(originalKey);\n  var alreadyGotKey = false;\n  var getKey = function getKey() {\n    if (alreadyGotKey) {\n      return key;\n    }\n    alreadyGotKey = true;\n    if (existingKeyMap[key]) {\n      var elementName = void 0;\n      if (typeof renderedElement.type === 'string') {\n        elementName = renderedElement.type;\n      } else if (renderedElement.type.constructor) {\n        elementName = renderedElement.type.constructor.displayName || renderedElement.type.constructor.name;\n      }\n      throw new Error('Radium requires each element with interactive styles to have a unique ' + 'key, set using either the ref or key prop. ' + (originalKey ? 'Key \"' + originalKey + '\" is a duplicate.' : 'Multiple elements have no key specified.') + ' ' + 'Component: \"' + componentName + '\". ' + (elementName ? 'Element: \"' + elementName + '\".' : ''));\n    }\n    existingKeyMap[key] = true;\n    return key;\n  };\n  return getKey;\n};\nvar _setStyleState = function _setStyleState(component, key, stateKey, value) {\n  if (!component._radiumIsMounted) {\n    return;\n  }\n  var existing = getRadiumStyleState(component);\n  var state = {\n    _radiumStyleState: _extends({}, existing)\n  };\n  state._radiumStyleState[key] = _extends({}, state._radiumStyleState[key]);\n  state._radiumStyleState[key][stateKey] = value;\n  component._lastRadiumState = state._radiumStyleState;\n  component.setState(state);\n};\nvar _runPlugins = function _runPlugins(_ref4) {\n  var component = _ref4.component,\n    config = _ref4.config,\n    existingKeyMap = _ref4.existingKeyMap,\n    props = _ref4.props,\n    renderedElement = _ref4.renderedElement;\n\n  // Don't run plugins if renderedElement is not a simple ReactDOMElement or has\n  // no style.\n  if (!React.isValidElement(renderedElement) || typeof renderedElement.type !== 'string' || !props.style) {\n    return props;\n  }\n  var newProps = props;\n  var plugins = config.plugins || DEFAULT_CONFIG.plugins;\n  var componentName = component.constructor.displayName || component.constructor.name;\n  var getKey = _buildGetKey({\n    renderedElement: renderedElement,\n    existingKeyMap: existingKeyMap,\n    componentName: componentName\n  });\n  var getComponentField = function getComponentField(key) {\n    return component[key];\n  };\n  var getGlobalState = function getGlobalState(key) {\n    return globalState[key];\n  };\n  var componentGetState = function componentGetState(stateKey, elementKey) {\n    return getState(component.state, elementKey || getKey(), stateKey);\n  };\n  var setState = function setState(stateKey, value, elementKey) {\n    return _setStyleState(component, elementKey || getKey(), stateKey, value);\n  };\n  var addCSS = function addCSS(css) {\n    var styleKeeper = component._radiumStyleKeeper || component.context._radiumStyleKeeper;\n    if (!styleKeeper) {\n      if (__isTestModeEnabled) {\n        return {\n          remove: function remove() {}\n        };\n      }\n      throw new Error('To use plugins requiring `addCSS` (e.g. keyframes, media queries), ' + 'please wrap your application in the StyleRoot component. Component ' + 'name: `' + componentName + '`.');\n    }\n    return styleKeeper.addCSS(css);\n  };\n  var newStyle = props.style;\n  plugins.forEach(function (plugin) {\n    var result = plugin({\n      ExecutionEnvironment: ExecutionEnvironment,\n      addCSS: addCSS,\n      appendImportantToEachValue: appendImportantToEachValue,\n      componentName: componentName,\n      config: config,\n      cssRuleSetToString: cssRuleSetToString,\n      getComponentField: getComponentField,\n      getGlobalState: getGlobalState,\n      getState: componentGetState,\n      hash: hash,\n      mergeStyles: mergeStyles,\n      props: newProps,\n      setState: setState,\n      isNestedStyle: isNestedStyle,\n      style: newStyle\n    }) || {};\n    newStyle = result.style || newStyle;\n    newProps = result.props && Object.keys(result.props).length ? _extends({}, newProps, result.props) : newProps;\n    var newComponentFields = result.componentFields || {};\n    Object.keys(newComponentFields).forEach(function (fieldName) {\n      component[fieldName] = newComponentFields[fieldName];\n    });\n    var newGlobalState = result.globalState || {};\n    Object.keys(newGlobalState).forEach(function (key) {\n      globalState[key] = newGlobalState[key];\n    });\n  });\n  if (newStyle !== props.style) {\n    newProps = _extends({}, newProps, {\n      style: newStyle\n    });\n  }\n  return newProps;\n};\n\n// Wrapper around React.cloneElement. To avoid processing the same element\n// twice, whenever we clone an element add a special prop to make sure we don't\n// process this element again.\nvar _cloneElement = function _cloneElement(renderedElement, newProps, newChildren) {\n  // Only add flag if this is a normal DOM element\n  if (typeof renderedElement.type === 'string') {\n    newProps = _extends({}, newProps, {\n      'data-radium': true\n    });\n  }\n  return React.cloneElement(renderedElement, newProps, newChildren);\n};\n\n//\n// The nucleus of Radium. resolveStyles is called on the rendered elements\n// before they are returned in render. It iterates over the elements and\n// children, rewriting props to add event handlers required to capture user\n// interactions (e.g. mouse over). It also replaces the style prop because it\n// adds in the various interaction styles (e.g. :hover).\n//\n/* eslint-disable max-params */\n_resolveStyles5 = function resolveStyles(component,\n// ReactComponent, flow+eslint complaining\nrenderedElement) {\n  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_CONFIG;\n  var existingKeyMap = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var shouldCheckBeforeResolve = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  var extraStateKeyMap = arguments[5];\n\n  // The extraStateKeyMap is for determining which keys should be erased from\n  // the state (i.e. which child components are unmounted and should no longer\n  // have a style state).\n  if (!extraStateKeyMap) {\n    var state = getRadiumStyleState(component);\n    extraStateKeyMap = Object.keys(state).reduce(function (acc, key) {\n      // 'main' is the auto-generated key when there is only one element with\n      // interactive styles and if a custom key is not assigned. Because of\n      // this, it is impossible to know which child is 'main', so we won't\n      // count this key when generating our extraStateKeyMap.\n      if (key !== 'main') {\n        acc[key] = true;\n      }\n      return acc;\n    }, {});\n  }\n  if (Array.isArray(renderedElement) && !renderedElement.props) {\n    var elements = renderedElement.map(function (element) {\n      // element is in-use, so remove from the extraStateKeyMap\n      if (extraStateKeyMap) {\n        var _key5 = getStateKey(element);\n        delete extraStateKeyMap[_key5];\n      }\n\n      // this element is an array of elements,\n      // so return an array of elements with resolved styles\n      return _resolveStyles5(component, element, config, existingKeyMap, shouldCheckBeforeResolve, extraStateKeyMap).element;\n    });\n    return {\n      extraStateKeyMap: extraStateKeyMap,\n      element: elements\n    };\n  }\n\n  // ReactElement\n  if (!renderedElement ||\n  // Bail if we've already processed this element. This ensures that only the\n  // owner of an element processes that element, since the owner's render\n  // function will be called first (which will always be the case, since you\n  // can't know what else to render until you render the parent component).\n  renderedElement.props && renderedElement.props['data-radium'] ||\n  // Bail if this element is a radium enhanced element, because if it is,\n  // then it will take care of resolving its own styles.\n  shouldCheckBeforeResolve && !_shouldResolveStyles(renderedElement)) {\n    return {\n      extraStateKeyMap: extraStateKeyMap,\n      element: renderedElement\n    };\n  }\n  var children = renderedElement.props.children;\n  var newChildren = _resolveChildren({\n    children: children,\n    component: component,\n    config: config,\n    existingKeyMap: existingKeyMap,\n    extraStateKeyMap: extraStateKeyMap\n  });\n  var newProps = _resolveProps({\n    component: component,\n    config: config,\n    existingKeyMap: existingKeyMap,\n    extraStateKeyMap: extraStateKeyMap,\n    props: renderedElement.props\n  });\n  newProps = _runPlugins({\n    component: component,\n    config: config,\n    existingKeyMap: existingKeyMap,\n    props: newProps,\n    renderedElement: renderedElement\n  });\n\n  // If nothing changed, don't bother cloning the element. Might be a bit\n  // wasteful, as we add the sentinel to stop double-processing when we clone.\n  // Assume benign double-processing is better than unneeded cloning.\n  if (newChildren === children && newProps === renderedElement.props) {\n    return {\n      extraStateKeyMap: extraStateKeyMap,\n      element: renderedElement\n    };\n  }\n  var element = _cloneElement(renderedElement, newProps !== renderedElement.props ? newProps : {}, newChildren);\n  return {\n    extraStateKeyMap: extraStateKeyMap,\n    element: element\n  };\n};\n/* eslint-enable max-params */\n\n// Only for use by tests\nvar __isTestModeEnabled = false;\nif (process.env.NODE_ENV !== 'production') {\n  _resolveStyles5.__clearStateForTests = function () {\n    globalState = {};\n  };\n  _resolveStyles5.__setTestMode = function (isEnabled) {\n    __isTestModeEnabled = isEnabled;\n  };\n}\nexport default _resolveStyles5;","map":{"version":3,"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_typeof","Symbol","iterator","obj","constructor","appendImportantToEachValue","cssRuleSetToString","getState","getStateKey","cleanStateKey","getRadiumStyleState","hash","isNestedStyle","mergeStyles","Plugins","ExecutionEnvironment","React","DEFAULT_CONFIG","plugins","mergeStyleArray","checkProps","resolveMediaQueries","resolveInteractionStyles","keyframes","visited","removeNestedStyles","prefix","globalState","_resolveStyles5","_shouldResolveStyles","component","type","_isRadiumEnhanced","_resolveChildren","_ref","children","config","existingKeyMap","extraStateKeyMap","childrenType","result","apply","isValidElement","_key","_resolveStyles","_element","element","Children","count","onlyChild","only","_key2","_resolveStyles2","_element2","map","child","_key3","_resolveStyles3","_element3","_resolveProps","_ref2","props","newProps","keys","forEach","prop","propValue","_key4","_resolveStyles4","_element4","_buildGetKey","_ref3","componentName","renderedElement","originalKey","alreadyGotKey","getKey","elementName","displayName","name","Error","_setStyleState","stateKey","value","_radiumIsMounted","existing","state","_radiumStyleState","_lastRadiumState","setState","_runPlugins","_ref4","style","getComponentField","getGlobalState","componentGetState","elementKey","addCSS","css","styleKeeper","_radiumStyleKeeper","context","__isTestModeEnabled","remove","newStyle","plugin","newComponentFields","componentFields","fieldName","newGlobalState","_cloneElement","newChildren","cloneElement","resolveStyles","undefined","shouldCheckBeforeResolve","reduce","acc","Array","isArray","elements","_key5","process","env","NODE_ENV","__clearStateForTests","__setTestMode","isEnabled"],"sources":["C:/Users/prana/OneDrive/Desktop/Misc/officialwebsite/node_modules/radium/es/resolve-styles.js"],"sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nimport appendImportantToEachValue from './append-important-to-each-value';\n\nimport cssRuleSetToString from './css-rule-set-to-string';\nimport getState from './get-state';\nimport getStateKey from './get-state-key';\nimport cleanStateKey from './clean-state-key';\nimport getRadiumStyleState from './get-radium-style-state';\nimport hash from './hash';\nimport { isNestedStyle, mergeStyles } from './merge-styles';\nimport Plugins from './plugins/';\n\nimport ExecutionEnvironment from 'exenv';\nimport React from 'react';\n\nvar DEFAULT_CONFIG = {\n  plugins: [Plugins.mergeStyleArray, Plugins.checkProps, Plugins.resolveMediaQueries, Plugins.resolveInteractionStyles, Plugins.keyframes, Plugins.visited, Plugins.removeNestedStyles, Plugins.prefix, Plugins.checkProps]\n};\n\n// Gross\nvar globalState = {};\n\n// Declare early for recursive helpers.\nvar _resolveStyles5 = null;\n\nvar _shouldResolveStyles = function _shouldResolveStyles(component) {\n  return component.type && !component.type._isRadiumEnhanced;\n};\n\nvar _resolveChildren = function _resolveChildren(_ref) {\n  var children = _ref.children,\n      component = _ref.component,\n      config = _ref.config,\n      existingKeyMap = _ref.existingKeyMap,\n      extraStateKeyMap = _ref.extraStateKeyMap;\n\n  if (!children) {\n    return children;\n  }\n\n  var childrenType = typeof children === 'undefined' ? 'undefined' : _typeof(children);\n\n  if (childrenType === 'string' || childrenType === 'number') {\n    // Don't do anything with a single primitive child\n    return children;\n  }\n\n  if (childrenType === 'function') {\n    // Wrap the function, resolving styles on the result\n    return function () {\n      var result = children.apply(this, arguments);\n\n      if (React.isValidElement(result)) {\n        var _key = getStateKey(result);\n        delete extraStateKeyMap[_key];\n\n        var _resolveStyles = _resolveStyles5(component, result, config, existingKeyMap, true, extraStateKeyMap),\n            _element = _resolveStyles.element;\n\n        return _element;\n      }\n\n      return result;\n    };\n  }\n\n  if (React.Children.count(children) === 1 && children.type) {\n    // If a React Element is an only child, don't wrap it in an array for\n    // React.Children.map() for React.Children.only() compatibility.\n    var onlyChild = React.Children.only(children);\n    var _key2 = getStateKey(onlyChild);\n    delete extraStateKeyMap[_key2];\n\n    var _resolveStyles2 = _resolveStyles5(component, onlyChild, config, existingKeyMap, true, extraStateKeyMap),\n        _element2 = _resolveStyles2.element;\n\n    return _element2;\n  }\n\n  return React.Children.map(children, function (child) {\n    if (React.isValidElement(child)) {\n      var _key3 = getStateKey(child);\n      delete extraStateKeyMap[_key3];\n\n      var _resolveStyles3 = _resolveStyles5(component, child, config, existingKeyMap, true, extraStateKeyMap),\n          _element3 = _resolveStyles3.element;\n\n      return _element3;\n    }\n\n    return child;\n  });\n};\n\n// Recurse over props, just like children\nvar _resolveProps = function _resolveProps(_ref2) {\n  var component = _ref2.component,\n      config = _ref2.config,\n      existingKeyMap = _ref2.existingKeyMap,\n      props = _ref2.props,\n      extraStateKeyMap = _ref2.extraStateKeyMap;\n\n  var newProps = props;\n\n  Object.keys(props).forEach(function (prop) {\n    // We already recurse over children above\n    if (prop === 'children') {\n      return;\n    }\n\n    var propValue = props[prop];\n    if (React.isValidElement(propValue)) {\n      var _key4 = getStateKey(propValue);\n      delete extraStateKeyMap[_key4];\n      newProps = _extends({}, newProps);\n\n      var _resolveStyles4 = _resolveStyles5(component, propValue, config, existingKeyMap, true, extraStateKeyMap),\n          _element4 = _resolveStyles4.element;\n\n      newProps[prop] = _element4;\n    }\n  });\n\n  return newProps;\n};\n\nvar _buildGetKey = function _buildGetKey(_ref3) {\n  var componentName = _ref3.componentName,\n      existingKeyMap = _ref3.existingKeyMap,\n      renderedElement = _ref3.renderedElement;\n\n  // We need a unique key to correlate state changes due to user interaction\n  // with the rendered element, so we know to apply the proper interactive\n  // styles.\n  var originalKey = getStateKey(renderedElement);\n  var key = cleanStateKey(originalKey);\n\n  var alreadyGotKey = false;\n  var getKey = function getKey() {\n    if (alreadyGotKey) {\n      return key;\n    }\n\n    alreadyGotKey = true;\n\n    if (existingKeyMap[key]) {\n      var elementName = void 0;\n      if (typeof renderedElement.type === 'string') {\n        elementName = renderedElement.type;\n      } else if (renderedElement.type.constructor) {\n        elementName = renderedElement.type.constructor.displayName || renderedElement.type.constructor.name;\n      }\n\n      throw new Error('Radium requires each element with interactive styles to have a unique ' + 'key, set using either the ref or key prop. ' + (originalKey ? 'Key \"' + originalKey + '\" is a duplicate.' : 'Multiple elements have no key specified.') + ' ' + 'Component: \"' + componentName + '\". ' + (elementName ? 'Element: \"' + elementName + '\".' : ''));\n    }\n\n    existingKeyMap[key] = true;\n\n    return key;\n  };\n\n  return getKey;\n};\n\nvar _setStyleState = function _setStyleState(component, key, stateKey, value) {\n  if (!component._radiumIsMounted) {\n    return;\n  }\n\n  var existing = getRadiumStyleState(component);\n  var state = { _radiumStyleState: _extends({}, existing) };\n\n  state._radiumStyleState[key] = _extends({}, state._radiumStyleState[key]);\n  state._radiumStyleState[key][stateKey] = value;\n\n  component._lastRadiumState = state._radiumStyleState;\n  component.setState(state);\n};\n\nvar _runPlugins = function _runPlugins(_ref4) {\n  var component = _ref4.component,\n      config = _ref4.config,\n      existingKeyMap = _ref4.existingKeyMap,\n      props = _ref4.props,\n      renderedElement = _ref4.renderedElement;\n\n  // Don't run plugins if renderedElement is not a simple ReactDOMElement or has\n  // no style.\n  if (!React.isValidElement(renderedElement) || typeof renderedElement.type !== 'string' || !props.style) {\n    return props;\n  }\n\n  var newProps = props;\n\n  var plugins = config.plugins || DEFAULT_CONFIG.plugins;\n\n  var componentName = component.constructor.displayName || component.constructor.name;\n  var getKey = _buildGetKey({\n    renderedElement: renderedElement,\n    existingKeyMap: existingKeyMap,\n    componentName: componentName\n  });\n  var getComponentField = function getComponentField(key) {\n    return component[key];\n  };\n  var getGlobalState = function getGlobalState(key) {\n    return globalState[key];\n  };\n  var componentGetState = function componentGetState(stateKey, elementKey) {\n    return getState(component.state, elementKey || getKey(), stateKey);\n  };\n  var setState = function setState(stateKey, value, elementKey) {\n    return _setStyleState(component, elementKey || getKey(), stateKey, value);\n  };\n\n  var addCSS = function addCSS(css) {\n    var styleKeeper = component._radiumStyleKeeper || component.context._radiumStyleKeeper;\n    if (!styleKeeper) {\n      if (__isTestModeEnabled) {\n        return {\n          remove: function remove() {}\n        };\n      }\n\n      throw new Error('To use plugins requiring `addCSS` (e.g. keyframes, media queries), ' + 'please wrap your application in the StyleRoot component. Component ' + 'name: `' + componentName + '`.');\n    }\n\n    return styleKeeper.addCSS(css);\n  };\n\n  var newStyle = props.style;\n\n  plugins.forEach(function (plugin) {\n    var result = plugin({\n      ExecutionEnvironment: ExecutionEnvironment,\n      addCSS: addCSS,\n      appendImportantToEachValue: appendImportantToEachValue,\n      componentName: componentName,\n      config: config,\n      cssRuleSetToString: cssRuleSetToString,\n      getComponentField: getComponentField,\n      getGlobalState: getGlobalState,\n      getState: componentGetState,\n      hash: hash,\n      mergeStyles: mergeStyles,\n      props: newProps,\n      setState: setState,\n      isNestedStyle: isNestedStyle,\n      style: newStyle\n    }) || {};\n\n    newStyle = result.style || newStyle;\n\n    newProps = result.props && Object.keys(result.props).length ? _extends({}, newProps, result.props) : newProps;\n\n    var newComponentFields = result.componentFields || {};\n    Object.keys(newComponentFields).forEach(function (fieldName) {\n      component[fieldName] = newComponentFields[fieldName];\n    });\n\n    var newGlobalState = result.globalState || {};\n    Object.keys(newGlobalState).forEach(function (key) {\n      globalState[key] = newGlobalState[key];\n    });\n  });\n\n  if (newStyle !== props.style) {\n    newProps = _extends({}, newProps, { style: newStyle });\n  }\n\n  return newProps;\n};\n\n// Wrapper around React.cloneElement. To avoid processing the same element\n// twice, whenever we clone an element add a special prop to make sure we don't\n// process this element again.\nvar _cloneElement = function _cloneElement(renderedElement, newProps, newChildren) {\n  // Only add flag if this is a normal DOM element\n  if (typeof renderedElement.type === 'string') {\n    newProps = _extends({}, newProps, { 'data-radium': true });\n  }\n\n  return React.cloneElement(renderedElement, newProps, newChildren);\n};\n\n//\n// The nucleus of Radium. resolveStyles is called on the rendered elements\n// before they are returned in render. It iterates over the elements and\n// children, rewriting props to add event handlers required to capture user\n// interactions (e.g. mouse over). It also replaces the style prop because it\n// adds in the various interaction styles (e.g. :hover).\n//\n/* eslint-disable max-params */\n_resolveStyles5 = function resolveStyles(component, // ReactComponent, flow+eslint complaining\nrenderedElement) {\n  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_CONFIG;\n  var existingKeyMap = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var shouldCheckBeforeResolve = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  var extraStateKeyMap = arguments[5];\n\n  // The extraStateKeyMap is for determining which keys should be erased from\n  // the state (i.e. which child components are unmounted and should no longer\n  // have a style state).\n  if (!extraStateKeyMap) {\n    var state = getRadiumStyleState(component);\n    extraStateKeyMap = Object.keys(state).reduce(function (acc, key) {\n      // 'main' is the auto-generated key when there is only one element with\n      // interactive styles and if a custom key is not assigned. Because of\n      // this, it is impossible to know which child is 'main', so we won't\n      // count this key when generating our extraStateKeyMap.\n      if (key !== 'main') {\n        acc[key] = true;\n      }\n      return acc;\n    }, {});\n  }\n\n  if (Array.isArray(renderedElement) && !renderedElement.props) {\n    var elements = renderedElement.map(function (element) {\n      // element is in-use, so remove from the extraStateKeyMap\n      if (extraStateKeyMap) {\n        var _key5 = getStateKey(element);\n        delete extraStateKeyMap[_key5];\n      }\n\n      // this element is an array of elements,\n      // so return an array of elements with resolved styles\n      return _resolveStyles5(component, element, config, existingKeyMap, shouldCheckBeforeResolve, extraStateKeyMap).element;\n    });\n    return {\n      extraStateKeyMap: extraStateKeyMap,\n      element: elements\n    };\n  }\n\n  // ReactElement\n  if (!renderedElement ||\n  // Bail if we've already processed this element. This ensures that only the\n  // owner of an element processes that element, since the owner's render\n  // function will be called first (which will always be the case, since you\n  // can't know what else to render until you render the parent component).\n  renderedElement.props && renderedElement.props['data-radium'] ||\n  // Bail if this element is a radium enhanced element, because if it is,\n  // then it will take care of resolving its own styles.\n  shouldCheckBeforeResolve && !_shouldResolveStyles(renderedElement)) {\n    return { extraStateKeyMap: extraStateKeyMap, element: renderedElement };\n  }\n\n  var children = renderedElement.props.children;\n\n  var newChildren = _resolveChildren({\n    children: children,\n    component: component,\n    config: config,\n    existingKeyMap: existingKeyMap,\n    extraStateKeyMap: extraStateKeyMap\n  });\n\n  var newProps = _resolveProps({\n    component: component,\n    config: config,\n    existingKeyMap: existingKeyMap,\n    extraStateKeyMap: extraStateKeyMap,\n    props: renderedElement.props\n  });\n\n  newProps = _runPlugins({\n    component: component,\n    config: config,\n    existingKeyMap: existingKeyMap,\n    props: newProps,\n    renderedElement: renderedElement\n  });\n\n  // If nothing changed, don't bother cloning the element. Might be a bit\n  // wasteful, as we add the sentinel to stop double-processing when we clone.\n  // Assume benign double-processing is better than unneeded cloning.\n  if (newChildren === children && newProps === renderedElement.props) {\n    return { extraStateKeyMap: extraStateKeyMap, element: renderedElement };\n  }\n\n  var element = _cloneElement(renderedElement, newProps !== renderedElement.props ? newProps : {}, newChildren);\n\n  return { extraStateKeyMap: extraStateKeyMap, element: element };\n};\n/* eslint-enable max-params */\n\n// Only for use by tests\nvar __isTestModeEnabled = false;\nif (process.env.NODE_ENV !== 'production') {\n  _resolveStyles5.__clearStateForTests = function () {\n    globalState = {};\n  };\n  _resolveStyles5.__setTestMode = function (isEnabled) {\n    __isTestModeEnabled = isEnabled;\n  };\n}\n\nexport default _resolveStyles5;"],"mappings":"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"},"metadata":{},"sourceType":"module"}