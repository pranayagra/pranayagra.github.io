{"ast":null,"code":"import _classCallCheck from \"C:/Users/prana/OneDrive/Desktop/Misc/officialwebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/prana/OneDrive/Desktop/Misc/officialwebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { calcPositionOrRandomFromSize, calcPositionOrRandomFromSizeRanged, getDistance, getDistances, getRangeValue } from \"../../Utils/NumberUtils\";\nimport { colorToRgb, getStyleFromRgb } from \"../../Utils/ColorUtils\";\nimport { Absorber } from \"./Options/Classes/Absorber\";\nimport { Vector } from \"../../Core/Utils/Vector\";\nimport { isPointInside } from \"../../Utils/Utils\";\nexport var AbsorberInstance = /*#__PURE__*/function () {\n  function AbsorberInstance(absorbers, container, options, position) {\n    _classCallCheck(this, AbsorberInstance);\n    var _a, _b, _c;\n    this.absorbers = absorbers;\n    this.container = container;\n    this.initialPosition = position ? Vector.create(position.x, position.y) : undefined;\n    if (options instanceof Absorber) {\n      this.options = options;\n    } else {\n      this.options = new Absorber();\n      this.options.load(options);\n    }\n    this.dragging = false;\n    this.name = this.options.name;\n    this.opacity = this.options.opacity;\n    this.size = getRangeValue(this.options.size.value) * container.retina.pixelRatio;\n    this.mass = this.size * this.options.size.density * container.retina.reduceFactor;\n    var limit = this.options.size.limit;\n    this.limit = {\n      radius: limit.radius * container.retina.pixelRatio * container.retina.reduceFactor,\n      mass: limit.mass\n    };\n    this.color = (_a = colorToRgb(this.options.color)) !== null && _a !== void 0 ? _a : {\n      b: 0,\n      g: 0,\n      r: 0\n    };\n    this.position = (_c = (_b = this.initialPosition) === null || _b === void 0 ? void 0 : _b.copy()) !== null && _c !== void 0 ? _c : this.calcPosition();\n  }\n  _createClass(AbsorberInstance, [{\n    key: \"attract\",\n    value: function attract(particle) {\n      var container = this.container,\n        options = this.options;\n      if (options.draggable) {\n        var mouse = container.interactivity.mouse;\n        if (mouse.clicking && mouse.downPosition) {\n          var mouseDist = getDistance(this.position, mouse.downPosition);\n          if (mouseDist <= this.size) {\n            this.dragging = true;\n          }\n        } else {\n          this.dragging = false;\n        }\n        if (this.dragging && mouse.position) {\n          this.position.x = mouse.position.x;\n          this.position.y = mouse.position.y;\n        }\n      }\n      var pos = particle.getPosition(),\n        _getDistances = getDistances(this.position, pos),\n        dx = _getDistances.dx,\n        dy = _getDistances.dy,\n        distance = _getDistances.distance,\n        v = Vector.create(dx, dy);\n      v.length = this.mass / Math.pow(distance, 2) * container.retina.reduceFactor;\n      if (distance < this.size + particle.getRadius()) {\n        var sizeFactor = particle.getRadius() * 0.033 * container.retina.pixelRatio;\n        if (this.size > particle.getRadius() && distance < this.size - particle.getRadius() || particle.absorberOrbit !== undefined && particle.absorberOrbit.length < 0) {\n          if (options.destroy) {\n            particle.destroy();\n          } else {\n            particle.needsNewPosition = true;\n            this.updateParticlePosition(particle, v);\n          }\n        } else {\n          if (options.destroy) {\n            particle.size.value -= sizeFactor;\n          }\n          this.updateParticlePosition(particle, v);\n        }\n        if (this.limit.radius <= 0 || this.size < this.limit.radius) {\n          this.size += sizeFactor;\n        }\n        if (this.limit.mass <= 0 || this.mass < this.limit.mass) {\n          this.mass += sizeFactor * this.options.size.density * container.retina.reduceFactor;\n        }\n      } else {\n        this.updateParticlePosition(particle, v);\n      }\n    }\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      var initialPosition = this.initialPosition;\n      this.position = initialPosition && isPointInside(initialPosition, this.container.canvas.size) ? initialPosition : this.calcPosition();\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(context) {\n      context.translate(this.position.x, this.position.y);\n      context.beginPath();\n      context.arc(0, 0, this.size, 0, Math.PI * 2, false);\n      context.closePath();\n      context.fillStyle = getStyleFromRgb(this.color, this.opacity);\n      context.fill();\n    }\n  }, {\n    key: \"calcPosition\",\n    value: function calcPosition() {\n      var exactPosition = calcPositionOrRandomFromSizeRanged({\n        size: this.container.canvas.size,\n        position: this.options.position\n      });\n      return Vector.create(exactPosition.x, exactPosition.y);\n    }\n  }, {\n    key: \"updateParticlePosition\",\n    value: function updateParticlePosition(particle, v) {\n      var _a;\n      if (particle.destroyed) {\n        return;\n      }\n      var container = this.container,\n        canvasSize = container.canvas.size;\n      if (particle.needsNewPosition) {\n        var newPosition = calcPositionOrRandomFromSize({\n          size: canvasSize\n        });\n        particle.position.setTo(newPosition);\n        particle.velocity.setTo(particle.initialVelocity);\n        particle.absorberOrbit = undefined;\n        particle.needsNewPosition = false;\n      }\n      if (this.options.orbits) {\n        if (particle.absorberOrbit === undefined) {\n          particle.absorberOrbit = Vector.create(0, 0);\n          particle.absorberOrbit.length = getDistance(particle.getPosition(), this.position);\n          particle.absorberOrbit.angle = Math.random() * Math.PI * 2;\n        }\n        if (particle.absorberOrbit.length <= this.size && !this.options.destroy) {\n          var minSize = Math.min(canvasSize.width, canvasSize.height);\n          particle.absorberOrbit.length = minSize * (1 + (Math.random() * 0.2 - 0.1));\n        }\n        if (particle.absorberOrbitDirection === undefined) {\n          particle.absorberOrbitDirection = particle.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\";\n        }\n        var orbitRadius = particle.absorberOrbit.length,\n          orbitAngle = particle.absorberOrbit.angle,\n          orbitDirection = particle.absorberOrbitDirection;\n        particle.velocity.setTo(Vector.origin);\n        var updateFunc = {\n          x: orbitDirection === \"clockwise\" ? Math.cos : Math.sin,\n          y: orbitDirection === \"clockwise\" ? Math.sin : Math.cos\n        };\n        particle.position.x = this.position.x + orbitRadius * updateFunc.x(orbitAngle);\n        particle.position.y = this.position.y + orbitRadius * updateFunc.y(orbitAngle);\n        particle.absorberOrbit.length -= v.length;\n        particle.absorberOrbit.angle += ((_a = particle.retina.moveSpeed) !== null && _a !== void 0 ? _a : 0) * container.retina.pixelRatio / 100 * container.retina.reduceFactor;\n      } else {\n        var addV = Vector.origin;\n        addV.length = v.length;\n        addV.angle = v.angle;\n        particle.velocity.addTo(addV);\n      }\n    }\n  }]);\n  return AbsorberInstance;\n}();","map":{"version":3,"names":["calcPositionOrRandomFromSize","calcPositionOrRandomFromSizeRanged","getDistance","getDistances","getRangeValue","colorToRgb","getStyleFromRgb","Absorber","Vector","isPointInside","AbsorberInstance","absorbers","container","options","position","_classCallCheck","_a","_b","_c","initialPosition","create","x","y","undefined","load","dragging","name","opacity","size","value","retina","pixelRatio","mass","density","reduceFactor","limit","radius","color","b","g","r","copy","calcPosition","_createClass","key","attract","particle","draggable","mouse","interactivity","clicking","downPosition","mouseDist","pos","getPosition","_getDistances","dx","dy","distance","v","length","Math","pow","getRadius","sizeFactor","absorberOrbit","destroy","needsNewPosition","updateParticlePosition","resize","canvas","draw","context","translate","beginPath","arc","PI","closePath","fillStyle","fill","exactPosition","destroyed","canvasSize","newPosition","setTo","velocity","initialVelocity","orbits","angle","random","minSize","min","width","height","absorberOrbitDirection","orbitRadius","orbitAngle","orbitDirection","origin","updateFunc","cos","sin","moveSpeed","addV","addTo"],"sources":["C:/Users/prana/OneDrive/Desktop/Misc/officialwebsite/node_modules/tsparticles/esm/Plugins/Absorbers/AbsorberInstance.js"],"sourcesContent":["import { calcPositionOrRandomFromSize, calcPositionOrRandomFromSizeRanged, getDistance, getDistances, getRangeValue, } from \"../../Utils/NumberUtils\";\nimport { colorToRgb, getStyleFromRgb } from \"../../Utils/ColorUtils\";\nimport { Absorber } from \"./Options/Classes/Absorber\";\nimport { Vector } from \"../../Core/Utils/Vector\";\nimport { isPointInside } from \"../../Utils/Utils\";\nexport class AbsorberInstance {\n    constructor(absorbers, container, options, position) {\n        var _a, _b, _c;\n        this.absorbers = absorbers;\n        this.container = container;\n        this.initialPosition = position ? Vector.create(position.x, position.y) : undefined;\n        if (options instanceof Absorber) {\n            this.options = options;\n        }\n        else {\n            this.options = new Absorber();\n            this.options.load(options);\n        }\n        this.dragging = false;\n        this.name = this.options.name;\n        this.opacity = this.options.opacity;\n        this.size = getRangeValue(this.options.size.value) * container.retina.pixelRatio;\n        this.mass = this.size * this.options.size.density * container.retina.reduceFactor;\n        const limit = this.options.size.limit;\n        this.limit = {\n            radius: limit.radius * container.retina.pixelRatio * container.retina.reduceFactor,\n            mass: limit.mass,\n        };\n        this.color = (_a = colorToRgb(this.options.color)) !== null && _a !== void 0 ? _a : {\n            b: 0,\n            g: 0,\n            r: 0,\n        };\n        this.position = (_c = (_b = this.initialPosition) === null || _b === void 0 ? void 0 : _b.copy()) !== null && _c !== void 0 ? _c : this.calcPosition();\n    }\n    attract(particle) {\n        const container = this.container, options = this.options;\n        if (options.draggable) {\n            const mouse = container.interactivity.mouse;\n            if (mouse.clicking && mouse.downPosition) {\n                const mouseDist = getDistance(this.position, mouse.downPosition);\n                if (mouseDist <= this.size) {\n                    this.dragging = true;\n                }\n            }\n            else {\n                this.dragging = false;\n            }\n            if (this.dragging && mouse.position) {\n                this.position.x = mouse.position.x;\n                this.position.y = mouse.position.y;\n            }\n        }\n        const pos = particle.getPosition(), { dx, dy, distance } = getDistances(this.position, pos), v = Vector.create(dx, dy);\n        v.length = (this.mass / Math.pow(distance, 2)) * container.retina.reduceFactor;\n        if (distance < this.size + particle.getRadius()) {\n            const sizeFactor = particle.getRadius() * 0.033 * container.retina.pixelRatio;\n            if ((this.size > particle.getRadius() && distance < this.size - particle.getRadius()) ||\n                (particle.absorberOrbit !== undefined && particle.absorberOrbit.length < 0)) {\n                if (options.destroy) {\n                    particle.destroy();\n                }\n                else {\n                    particle.needsNewPosition = true;\n                    this.updateParticlePosition(particle, v);\n                }\n            }\n            else {\n                if (options.destroy) {\n                    particle.size.value -= sizeFactor;\n                }\n                this.updateParticlePosition(particle, v);\n            }\n            if (this.limit.radius <= 0 || this.size < this.limit.radius) {\n                this.size += sizeFactor;\n            }\n            if (this.limit.mass <= 0 || this.mass < this.limit.mass) {\n                this.mass += sizeFactor * this.options.size.density * container.retina.reduceFactor;\n            }\n        }\n        else {\n            this.updateParticlePosition(particle, v);\n        }\n    }\n    resize() {\n        const initialPosition = this.initialPosition;\n        this.position =\n            initialPosition && isPointInside(initialPosition, this.container.canvas.size)\n                ? initialPosition\n                : this.calcPosition();\n    }\n    draw(context) {\n        context.translate(this.position.x, this.position.y);\n        context.beginPath();\n        context.arc(0, 0, this.size, 0, Math.PI * 2, false);\n        context.closePath();\n        context.fillStyle = getStyleFromRgb(this.color, this.opacity);\n        context.fill();\n    }\n    calcPosition() {\n        const exactPosition = calcPositionOrRandomFromSizeRanged({\n            size: this.container.canvas.size,\n            position: this.options.position,\n        });\n        return Vector.create(exactPosition.x, exactPosition.y);\n    }\n    updateParticlePosition(particle, v) {\n        var _a;\n        if (particle.destroyed) {\n            return;\n        }\n        const container = this.container, canvasSize = container.canvas.size;\n        if (particle.needsNewPosition) {\n            const newPosition = calcPositionOrRandomFromSize({ size: canvasSize });\n            particle.position.setTo(newPosition);\n            particle.velocity.setTo(particle.initialVelocity);\n            particle.absorberOrbit = undefined;\n            particle.needsNewPosition = false;\n        }\n        if (this.options.orbits) {\n            if (particle.absorberOrbit === undefined) {\n                particle.absorberOrbit = Vector.create(0, 0);\n                particle.absorberOrbit.length = getDistance(particle.getPosition(), this.position);\n                particle.absorberOrbit.angle = Math.random() * Math.PI * 2;\n            }\n            if (particle.absorberOrbit.length <= this.size && !this.options.destroy) {\n                const minSize = Math.min(canvasSize.width, canvasSize.height);\n                particle.absorberOrbit.length = minSize * (1 + (Math.random() * 0.2 - 0.1));\n            }\n            if (particle.absorberOrbitDirection === undefined) {\n                particle.absorberOrbitDirection =\n                    particle.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\";\n            }\n            const orbitRadius = particle.absorberOrbit.length, orbitAngle = particle.absorberOrbit.angle, orbitDirection = particle.absorberOrbitDirection;\n            particle.velocity.setTo(Vector.origin);\n            const updateFunc = {\n                x: orbitDirection === \"clockwise\" ? Math.cos : Math.sin,\n                y: orbitDirection === \"clockwise\" ? Math.sin : Math.cos,\n            };\n            particle.position.x = this.position.x + orbitRadius * updateFunc.x(orbitAngle);\n            particle.position.y = this.position.y + orbitRadius * updateFunc.y(orbitAngle);\n            particle.absorberOrbit.length -= v.length;\n            particle.absorberOrbit.angle +=\n                ((((_a = particle.retina.moveSpeed) !== null && _a !== void 0 ? _a : 0) * container.retina.pixelRatio) / 100) *\n                    container.retina.reduceFactor;\n        }\n        else {\n            const addV = Vector.origin;\n            addV.length = v.length;\n            addV.angle = v.angle;\n            particle.velocity.addTo(addV);\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}