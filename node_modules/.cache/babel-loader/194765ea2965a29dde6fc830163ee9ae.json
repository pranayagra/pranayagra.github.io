{"ast":null,"code":"import Enhancer from './enhancer';\nimport Plugins from './plugins';\nimport Style from './components/style';\nimport StyleRoot from './components/style-root';\nimport getState from './get-state';\nimport keyframes from './keyframes';\nimport resolveStyles from './resolve-styles';\nfunction Radium(ComposedComponent) {\n  return Enhancer(ComposedComponent);\n}\n\n// Legacy object support.\n//\n// Normally it would be disfavored to attach these to the `Radium` object\n// because it defeats tree-shaking, using instead the ESM exports. But,\n// the `Radium` `Enhancer` uses **all** of these, so there's no extra \"cost\"\n// to them being explicitly on the `Radium` object.\nRadium.Plugins = Plugins;\nRadium.Style = Style;\nRadium.StyleRoot = StyleRoot;\nRadium.getState = getState;\nRadium.keyframes = keyframes;\nif (process.env.NODE_ENV !== 'production') {\n  Radium.TestMode = {\n    clearState: resolveStyles.__clearStateForTests,\n    disable: resolveStyles.__setTestMode.bind(null, false),\n    enable: resolveStyles.__setTestMode.bind(null, true)\n  };\n}\nexport default Radium;\n\n// ESM re-exports\nexport { Plugins, Style, StyleRoot, getState, keyframes };","map":{"version":3,"names":["Enhancer","Plugins","Style","StyleRoot","getState","keyframes","resolveStyles","Radium","ComposedComponent","process","env","NODE_ENV","TestMode","clearState","__clearStateForTests","disable","__setTestMode","bind","enable"],"sources":["C:/Users/prana/OneDrive/Desktop/Misc/officialwebsite/node_modules/radium/es/index.js"],"sourcesContent":["import Enhancer from './enhancer';\nimport Plugins from './plugins';\nimport Style from './components/style';\nimport StyleRoot from './components/style-root';\nimport getState from './get-state';\nimport keyframes from './keyframes';\nimport resolveStyles from './resolve-styles';\n\nfunction Radium(ComposedComponent) {\n  return Enhancer(ComposedComponent);\n}\n\n// Legacy object support.\n//\n// Normally it would be disfavored to attach these to the `Radium` object\n// because it defeats tree-shaking, using instead the ESM exports. But,\n// the `Radium` `Enhancer` uses **all** of these, so there's no extra \"cost\"\n// to them being explicitly on the `Radium` object.\nRadium.Plugins = Plugins;\nRadium.Style = Style;\nRadium.StyleRoot = StyleRoot;\nRadium.getState = getState;\nRadium.keyframes = keyframes;\n\nif (process.env.NODE_ENV !== 'production') {\n  Radium.TestMode = {\n    clearState: resolveStyles.__clearStateForTests,\n    disable: resolveStyles.__setTestMode.bind(null, false),\n    enable: resolveStyles.__setTestMode.bind(null, true)\n  };\n}\n\nexport default Radium;\n\n// ESM re-exports\nexport { Plugins, Style, StyleRoot, getState, keyframes };"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,YAAY;AACjC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,QAAQ,MAAM,aAAa;AAClC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,aAAa,MAAM,kBAAkB;AAE5C,SAASC,MAAMA,CAACC,iBAAiB,EAAE;EACjC,OAAOR,QAAQ,CAACQ,iBAAiB,CAAC;AACpC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACAD,MAAM,CAACN,OAAO,GAAGA,OAAO;AACxBM,MAAM,CAACL,KAAK,GAAGA,KAAK;AACpBK,MAAM,CAACJ,SAAS,GAAGA,SAAS;AAC5BI,MAAM,CAACH,QAAQ,GAAGA,QAAQ;AAC1BG,MAAM,CAACF,SAAS,GAAGA,SAAS;AAE5B,IAAII,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;EACzCJ,MAAM,CAACK,QAAQ,GAAG;IAChBC,UAAU,EAAEP,aAAa,CAACQ,oBAAoB;IAC9CC,OAAO,EAAET,aAAa,CAACU,aAAa,CAACC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC;IACtDC,MAAM,EAAEZ,aAAa,CAACU,aAAa,CAACC,IAAI,CAAC,IAAI,EAAE,IAAI;EACrD,CAAC;AACH;AAEA,eAAeV,MAAM;;AAErB;AACA,SAASN,OAAO,EAAEC,KAAK,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,SAAS"},"metadata":{},"sourceType":"module"}