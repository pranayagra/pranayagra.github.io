{"ast":null,"code":"import _classCallCheck from \"C:/Users/prana/OneDrive/Desktop/Misc/officialwebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/prana/OneDrive/Desktop/Misc/officialwebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { colorToHsl } from \"../../Utils/ColorUtils\";\nimport { getRangeValue } from \"../../Utils/NumberUtils\";\nfunction updateRoll(particle, delta) {\n  var roll = particle.options.roll;\n  if (!particle.roll || !roll.enable) {\n    return;\n  }\n  var speed = particle.roll.speed * delta.factor;\n  var max = 2 * Math.PI;\n  particle.roll.angle += speed;\n  if (particle.roll.angle > max) {\n    particle.roll.angle -= max;\n  }\n}\nexport var RollUpdater = /*#__PURE__*/function () {\n  function RollUpdater() {\n    _classCallCheck(this, RollUpdater);\n  }\n  _createClass(RollUpdater, [{\n    key: \"init\",\n    value: function init(particle) {\n      var rollOpt = particle.options.roll;\n      if (rollOpt.enable) {\n        particle.roll = {\n          angle: Math.random() * Math.PI * 2,\n          speed: getRangeValue(rollOpt.speed) / 360\n        };\n        if (rollOpt.backColor) {\n          particle.backColor = colorToHsl(rollOpt.backColor);\n        } else if (rollOpt.darken.enable && rollOpt.enlighten.enable) {\n          var alterType = Math.random() >= 0.5 ? \"darken\" : \"enlighten\";\n          particle.roll.alter = {\n            type: alterType,\n            value: getRangeValue(alterType === \"darken\" ? rollOpt.darken.value : rollOpt.enlighten.value)\n          };\n        } else if (rollOpt.darken.enable) {\n          particle.roll.alter = {\n            type: \"darken\",\n            value: getRangeValue(rollOpt.darken.value)\n          };\n        } else if (rollOpt.enlighten.enable) {\n          particle.roll.alter = {\n            type: \"enlighten\",\n            value: getRangeValue(rollOpt.enlighten.value)\n          };\n        }\n      } else {\n        particle.roll = {\n          angle: 0,\n          speed: 0\n        };\n      }\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled(particle) {\n      var roll = particle.options.roll;\n      return !particle.destroyed && !particle.spawning && roll.enable;\n    }\n  }, {\n    key: \"update\",\n    value: function update(particle, delta) {\n      if (!this.isEnabled(particle)) {\n        return;\n      }\n      updateRoll(particle, delta);\n    }\n  }]);\n  return RollUpdater;\n}();","map":{"version":3,"names":["colorToHsl","getRangeValue","updateRoll","particle","delta","roll","options","enable","speed","factor","max","Math","PI","angle","RollUpdater","_classCallCheck","_createClass","key","value","init","rollOpt","random","backColor","darken","enlighten","alterType","alter","type","isEnabled","destroyed","spawning","update"],"sources":["C:/Users/prana/OneDrive/Desktop/Misc/officialwebsite/node_modules/tsparticles/esm/Updaters/Roll/RollUpdater.js"],"sourcesContent":["import { colorToHsl } from \"../../Utils/ColorUtils\";\nimport { getRangeValue } from \"../../Utils/NumberUtils\";\nfunction updateRoll(particle, delta) {\n    const roll = particle.options.roll;\n    if (!particle.roll || !roll.enable) {\n        return;\n    }\n    const speed = particle.roll.speed * delta.factor;\n    const max = 2 * Math.PI;\n    particle.roll.angle += speed;\n    if (particle.roll.angle > max) {\n        particle.roll.angle -= max;\n    }\n}\nexport class RollUpdater {\n    init(particle) {\n        const rollOpt = particle.options.roll;\n        if (rollOpt.enable) {\n            particle.roll = {\n                angle: Math.random() * Math.PI * 2,\n                speed: getRangeValue(rollOpt.speed) / 360,\n            };\n            if (rollOpt.backColor) {\n                particle.backColor = colorToHsl(rollOpt.backColor);\n            }\n            else if (rollOpt.darken.enable && rollOpt.enlighten.enable) {\n                const alterType = Math.random() >= 0.5 ? \"darken\" : \"enlighten\";\n                particle.roll.alter = {\n                    type: alterType,\n                    value: getRangeValue(alterType === \"darken\" ? rollOpt.darken.value : rollOpt.enlighten.value),\n                };\n            }\n            else if (rollOpt.darken.enable) {\n                particle.roll.alter = {\n                    type: \"darken\",\n                    value: getRangeValue(rollOpt.darken.value),\n                };\n            }\n            else if (rollOpt.enlighten.enable) {\n                particle.roll.alter = {\n                    type: \"enlighten\",\n                    value: getRangeValue(rollOpt.enlighten.value),\n                };\n            }\n        }\n        else {\n            particle.roll = { angle: 0, speed: 0 };\n        }\n    }\n    isEnabled(particle) {\n        const roll = particle.options.roll;\n        return !particle.destroyed && !particle.spawning && roll.enable;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateRoll(particle, delta);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}