{"ast":null,"code":"import _classCallCheck from \"C:/Users/prana/OneDrive/Desktop/Misc/officialwebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/prana/OneDrive/Desktop/Misc/officialwebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"C:/Users/prana/OneDrive/Desktop/Misc/officialwebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/prana/OneDrive/Desktop/Misc/officialwebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/prana/OneDrive/Desktop/Misc/officialwebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/prana/OneDrive/Desktop/Misc/officialwebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Circle } from \"./Circle\";\nimport { Rectangle } from \"./Rectangle\";\nexport var CircleWarp = /*#__PURE__*/function (_Circle) {\n  _inherits(CircleWarp, _Circle);\n\n  var _super = _createSuper(CircleWarp);\n\n  function CircleWarp(x, y, radius, canvasSize) {\n    var _this;\n\n    _classCallCheck(this, CircleWarp);\n\n    _this = _super.call(this, x, y, radius);\n    _this.canvasSize = canvasSize;\n    _this.canvasSize = Object.assign({}, canvasSize);\n    return _this;\n  }\n\n  _createClass(CircleWarp, [{\n    key: \"contains\",\n    value: function contains(point) {\n      if (_get(_getPrototypeOf(CircleWarp.prototype), \"contains\", this).call(this, point)) {\n        return true;\n      }\n\n      var posNE = {\n        x: point.x - this.canvasSize.width,\n        y: point.y\n      };\n\n      if (_get(_getPrototypeOf(CircleWarp.prototype), \"contains\", this).call(this, posNE)) {\n        return true;\n      }\n\n      var posSE = {\n        x: point.x - this.canvasSize.width,\n        y: point.y - this.canvasSize.height\n      };\n\n      if (_get(_getPrototypeOf(CircleWarp.prototype), \"contains\", this).call(this, posSE)) {\n        return true;\n      }\n\n      var posSW = {\n        x: point.x,\n        y: point.y - this.canvasSize.height\n      };\n      return _get(_getPrototypeOf(CircleWarp.prototype), \"contains\", this).call(this, posSW);\n    }\n  }, {\n    key: \"intersects\",\n    value: function intersects(range) {\n      if (_get(_getPrototypeOf(CircleWarp.prototype), \"intersects\", this).call(this, range)) {\n        return true;\n      }\n\n      var rect = range,\n          circle = range,\n          newPos = {\n        x: range.position.x - this.canvasSize.width,\n        y: range.position.y - this.canvasSize.height\n      };\n\n      if (circle.radius !== undefined) {\n        var biggerCircle = new Circle(newPos.x, newPos.y, circle.radius * 2);\n        return _get(_getPrototypeOf(CircleWarp.prototype), \"intersects\", this).call(this, biggerCircle);\n      } else if (rect.size !== undefined) {\n        var rectSW = new Rectangle(newPos.x, newPos.y, rect.size.width * 2, rect.size.height * 2);\n        return _get(_getPrototypeOf(CircleWarp.prototype), \"intersects\", this).call(this, rectSW);\n      }\n\n      return false;\n    }\n  }]);\n\n  return CircleWarp;\n}(Circle);","map":{"version":3,"sources":["C:/Users/prana/OneDrive/Desktop/Misc/officialwebsite/node_modules/tsparticles/esm/Core/Utils/CircleWarp.js"],"names":["Circle","Rectangle","CircleWarp","x","y","radius","canvasSize","Object","assign","point","posNE","width","posSE","height","posSW","range","rect","circle","newPos","position","undefined","biggerCircle","size","rectSW"],"mappings":";;;;;;AAAA,SAASA,MAAT,QAAuB,UAAvB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,WAAaC,UAAb;AAAA;;AAAA;;AACI,sBAAYC,CAAZ,EAAeC,CAAf,EAAkBC,MAAlB,EAA0BC,UAA1B,EAAsC;AAAA;;AAAA;;AAClC,8BAAMH,CAAN,EAASC,CAAT,EAAYC,MAAZ;AACA,UAAKC,UAAL,GAAkBA,UAAlB;AACA,UAAKA,UAAL,GAAkBC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,UAAlB,CAAlB;AAHkC;AAIrC;;AALL;AAAA;AAAA,WAMI,kBAASG,KAAT,EAAgB;AACZ,mFAAmBA,KAAnB,GAA2B;AACvB,eAAO,IAAP;AACH;;AACD,UAAMC,KAAK,GAAG;AACVP,QAAAA,CAAC,EAAEM,KAAK,CAACN,CAAN,GAAU,KAAKG,UAAL,CAAgBK,KADnB;AAEVP,QAAAA,CAAC,EAAEK,KAAK,CAACL;AAFC,OAAd;;AAIA,mFAAmBM,KAAnB,GAA2B;AACvB,eAAO,IAAP;AACH;;AACD,UAAME,KAAK,GAAG;AACVT,QAAAA,CAAC,EAAEM,KAAK,CAACN,CAAN,GAAU,KAAKG,UAAL,CAAgBK,KADnB;AAEVP,QAAAA,CAAC,EAAEK,KAAK,CAACL,CAAN,GAAU,KAAKE,UAAL,CAAgBO;AAFnB,OAAd;;AAIA,mFAAmBD,KAAnB,GAA2B;AACvB,eAAO,IAAP;AACH;;AACD,UAAME,KAAK,GAAG;AACVX,QAAAA,CAAC,EAAEM,KAAK,CAACN,CADC;AAEVC,QAAAA,CAAC,EAAEK,KAAK,CAACL,CAAN,GAAU,KAAKE,UAAL,CAAgBO;AAFnB,OAAd;AAIA,sFAAsBC,KAAtB;AACH;AA7BL;AAAA;AAAA,WA8BI,oBAAWC,KAAX,EAAkB;AACd,qFAAqBA,KAArB,GAA6B;AACzB,eAAO,IAAP;AACH;;AACD,UAAMC,IAAI,GAAGD,KAAb;AAAA,UAAoBE,MAAM,GAAGF,KAA7B;AAAA,UAAoCG,MAAM,GAAG;AACzCf,QAAAA,CAAC,EAAEY,KAAK,CAACI,QAAN,CAAehB,CAAf,GAAmB,KAAKG,UAAL,CAAgBK,KADG;AAEzCP,QAAAA,CAAC,EAAEW,KAAK,CAACI,QAAN,CAAef,CAAf,GAAmB,KAAKE,UAAL,CAAgBO;AAFG,OAA7C;;AAIA,UAAII,MAAM,CAACZ,MAAP,KAAkBe,SAAtB,EAAiC;AAC7B,YAAMC,YAAY,GAAG,IAAIrB,MAAJ,CAAWkB,MAAM,CAACf,CAAlB,EAAqBe,MAAM,CAACd,CAA5B,EAA+Ba,MAAM,CAACZ,MAAP,GAAgB,CAA/C,CAArB;AACA,0FAAwBgB,YAAxB;AACH,OAHD,MAIK,IAAIL,IAAI,CAACM,IAAL,KAAcF,SAAlB,EAA6B;AAC9B,YAAMG,MAAM,GAAG,IAAItB,SAAJ,CAAciB,MAAM,CAACf,CAArB,EAAwBe,MAAM,CAACd,CAA/B,EAAkCY,IAAI,CAACM,IAAL,CAAUX,KAAV,GAAkB,CAApD,EAAuDK,IAAI,CAACM,IAAL,CAAUT,MAAV,GAAmB,CAA1E,CAAf;AACA,0FAAwBU,MAAxB;AACH;;AACD,aAAO,KAAP;AACH;AA/CL;;AAAA;AAAA,EAAgCvB,MAAhC","sourcesContent":["import { Circle } from \"./Circle\";\nimport { Rectangle } from \"./Rectangle\";\nexport class CircleWarp extends Circle {\n    constructor(x, y, radius, canvasSize) {\n        super(x, y, radius);\n        this.canvasSize = canvasSize;\n        this.canvasSize = Object.assign({}, canvasSize);\n    }\n    contains(point) {\n        if (super.contains(point)) {\n            return true;\n        }\n        const posNE = {\n            x: point.x - this.canvasSize.width,\n            y: point.y,\n        };\n        if (super.contains(posNE)) {\n            return true;\n        }\n        const posSE = {\n            x: point.x - this.canvasSize.width,\n            y: point.y - this.canvasSize.height,\n        };\n        if (super.contains(posSE)) {\n            return true;\n        }\n        const posSW = {\n            x: point.x,\n            y: point.y - this.canvasSize.height,\n        };\n        return super.contains(posSW);\n    }\n    intersects(range) {\n        if (super.intersects(range)) {\n            return true;\n        }\n        const rect = range, circle = range, newPos = {\n            x: range.position.x - this.canvasSize.width,\n            y: range.position.y - this.canvasSize.height,\n        };\n        if (circle.radius !== undefined) {\n            const biggerCircle = new Circle(newPos.x, newPos.y, circle.radius * 2);\n            return super.intersects(biggerCircle);\n        }\n        else if (rect.size !== undefined) {\n            const rectSW = new Rectangle(newPos.x, newPos.y, rect.size.width * 2, rect.size.height * 2);\n            return super.intersects(rectSW);\n        }\n        return false;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}