{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/Users/prana/OneDrive/Desktop/Misc/officialwebsite/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _regeneratorRuntime from \"C:/Users/prana/OneDrive/Desktop/Misc/officialwebsite/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/prana/OneDrive/Desktop/Misc/officialwebsite/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"C:/Users/prana/OneDrive/Desktop/Misc/officialwebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/prana/OneDrive/Desktop/Misc/officialwebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/prana/OneDrive/Desktop/Misc/officialwebsite/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/prana/OneDrive/Desktop/Misc/officialwebsite/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { clamp, getDistance, getRangeMax } from \"../../../Utils/NumberUtils\";\nimport { colorMix, colorToHsl, rgbToHsl } from \"../../../Utils/ColorUtils\";\nimport { divMode, divModeExecute, isDivModeEnabled, isInArray, itemFromArray } from \"../../../Utils/Utils\";\nimport { Circle } from \"../../../Core/Utils/Circle\";\nimport { Constants } from \"../../../Core/Utils/Constants\";\nimport { ExternalInteractorBase } from \"../../../Core/Utils/ExternalInteractorBase\";\nimport { Rectangle } from \"../../../Core/Utils/Rectangle\";\nfunction calculateBubbleValue(particleValue, modeValue, optionsValue, ratio) {\n  if (modeValue >= optionsValue) {\n    var value = particleValue + (modeValue - optionsValue) * ratio;\n    return clamp(value, particleValue, modeValue);\n  } else if (modeValue < optionsValue) {\n    var _value = particleValue - (optionsValue - modeValue) * ratio;\n    return clamp(_value, modeValue, particleValue);\n  }\n}\nexport var Bubbler = /*#__PURE__*/function (_ExternalInteractorBa) {\n  _inherits(Bubbler, _ExternalInteractorBa);\n  var _super = _createSuper(Bubbler);\n  function Bubbler(container) {\n    var _this;\n    _classCallCheck(this, Bubbler);\n    _this = _super.call(this, container);\n    if (!container.bubble) {\n      container.bubble = {};\n    }\n    _this.handleClickMode = function (mode) {\n      if (mode !== \"bubble\") {\n        return;\n      }\n      if (!container.bubble) {\n        container.bubble = {};\n      }\n      container.bubble.clicking = true;\n    };\n    return _this;\n  }\n  _createClass(Bubbler, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      var container = this.container,\n        options = container.actualOptions,\n        mouse = container.interactivity.mouse,\n        events = options.interactivity.events,\n        divs = events.onDiv,\n        divBubble = isDivModeEnabled(\"bubble\", divs);\n      if (!(divBubble || events.onHover.enable && mouse.position || events.onClick.enable && mouse.clickPosition)) {\n        return false;\n      }\n      var hoverMode = events.onHover.mode;\n      var clickMode = events.onClick.mode;\n      return isInArray(\"bubble\", hoverMode) || isInArray(\"bubble\", clickMode) || divBubble;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset(particle, force) {\n      if (!(!particle.bubble.inRange || force)) {\n        return;\n      }\n      delete particle.bubble.div;\n      delete particle.bubble.opacity;\n      delete particle.bubble.radius;\n      delete particle.bubble.color;\n    }\n  }, {\n    key: \"interact\",\n    value: function () {\n      var _interact = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _this2 = this;\n        var options, events, onHover, onClick, hoverEnabled, hoverMode, clickEnabled, clickMode, divs;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              options = this.container.actualOptions, events = options.interactivity.events, onHover = events.onHover, onClick = events.onClick, hoverEnabled = onHover.enable, hoverMode = onHover.mode, clickEnabled = onClick.enable, clickMode = onClick.mode, divs = events.onDiv;\n              if (hoverEnabled && isInArray(\"bubble\", hoverMode)) {\n                this.hoverBubble();\n              } else if (clickEnabled && isInArray(\"bubble\", clickMode)) {\n                this.clickBubble();\n              } else {\n                divModeExecute(\"bubble\", divs, function (selector, div) {\n                  return _this2.singleSelectorHover(selector, div);\n                });\n              }\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function interact() {\n        return _interact.apply(this, arguments);\n      }\n      return interact;\n    }()\n  }, {\n    key: \"singleSelectorHover\",\n    value: function singleSelectorHover(selector, div) {\n      var _this3 = this;\n      var container = this.container,\n        selectors = document.querySelectorAll(selector);\n      if (!selectors.length) {\n        return;\n      }\n      selectors.forEach(function (item) {\n        var elem = item,\n          pxRatio = container.retina.pixelRatio,\n          pos = {\n            x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n            y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio\n          },\n          repulseRadius = elem.offsetWidth / 2 * pxRatio,\n          area = div.type === \"circle\" ? new Circle(pos.x, pos.y, repulseRadius) : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio),\n          query = container.particles.quadTree.query(area);\n        var _iterator = _createForOfIteratorHelper(query),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var particle = _step.value;\n            if (!area.contains(particle.getPosition())) {\n              continue;\n            }\n            particle.bubble.inRange = true;\n            var divs = container.actualOptions.interactivity.modes.bubble.divs;\n            var divBubble = divMode(divs, elem);\n            if (!particle.bubble.div || particle.bubble.div !== elem) {\n              _this3.reset(particle, true);\n              particle.bubble.div = elem;\n            }\n            _this3.hoverBubbleSize(particle, 1, divBubble);\n            _this3.hoverBubbleOpacity(particle, 1, divBubble);\n            _this3.hoverBubbleColor(particle, 1, divBubble);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      });\n    }\n  }, {\n    key: \"process\",\n    value: function process(particle, distMouse, timeSpent, data) {\n      var container = this.container,\n        bubbleParam = data.bubbleObj.optValue;\n      if (bubbleParam === undefined) {\n        return;\n      }\n      var options = container.actualOptions,\n        bubbleDuration = options.interactivity.modes.bubble.duration,\n        bubbleDistance = container.retina.bubbleModeDistance,\n        particlesParam = data.particlesObj.optValue,\n        pObjBubble = data.bubbleObj.value,\n        pObj = data.particlesObj.value || 0,\n        type = data.type;\n      if (bubbleParam === particlesParam) {\n        return;\n      }\n      if (!container.bubble) {\n        container.bubble = {};\n      }\n      if (!container.bubble.durationEnd) {\n        if (distMouse <= bubbleDistance) {\n          var obj = pObjBubble !== null && pObjBubble !== void 0 ? pObjBubble : pObj;\n          if (obj !== bubbleParam) {\n            var value = pObj - timeSpent * (pObj - bubbleParam) / bubbleDuration;\n            if (type === \"size\") {\n              particle.bubble.radius = value;\n            }\n            if (type === \"opacity\") {\n              particle.bubble.opacity = value;\n            }\n          }\n        } else {\n          if (type === \"size\") {\n            delete particle.bubble.radius;\n          }\n          if (type === \"opacity\") {\n            delete particle.bubble.opacity;\n          }\n        }\n      } else if (pObjBubble) {\n        if (type === \"size\") {\n          delete particle.bubble.radius;\n        }\n        if (type === \"opacity\") {\n          delete particle.bubble.opacity;\n        }\n      }\n    }\n  }, {\n    key: \"clickBubble\",\n    value: function clickBubble() {\n      var _a, _b;\n      var container = this.container,\n        options = container.actualOptions,\n        mouseClickPos = container.interactivity.mouse.clickPosition;\n      if (!mouseClickPos) {\n        return;\n      }\n      if (!container.bubble) {\n        container.bubble = {};\n      }\n      var distance = container.retina.bubbleModeDistance,\n        query = container.particles.quadTree.queryCircle(mouseClickPos, distance);\n      var _iterator2 = _createForOfIteratorHelper(query),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var particle = _step2.value;\n          if (!container.bubble.clicking) {\n            continue;\n          }\n          particle.bubble.inRange = !container.bubble.durationEnd;\n          var pos = particle.getPosition(),\n            distMouse = getDistance(pos, mouseClickPos),\n            timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime || 0)) / 1000;\n          if (timeSpent > options.interactivity.modes.bubble.duration) {\n            container.bubble.durationEnd = true;\n          }\n          if (timeSpent > options.interactivity.modes.bubble.duration * 2) {\n            container.bubble.clicking = false;\n            container.bubble.durationEnd = false;\n          }\n          var sizeData = {\n            bubbleObj: {\n              optValue: container.retina.bubbleModeSize,\n              value: particle.bubble.radius\n            },\n            particlesObj: {\n              optValue: getRangeMax(particle.options.size.value) * container.retina.pixelRatio,\n              value: particle.size.value\n            },\n            type: \"size\"\n          };\n          this.process(particle, distMouse, timeSpent, sizeData);\n          var opacityData = {\n            bubbleObj: {\n              optValue: options.interactivity.modes.bubble.opacity,\n              value: particle.bubble.opacity\n            },\n            particlesObj: {\n              optValue: getRangeMax(particle.options.opacity.value),\n              value: (_b = (_a = particle.opacity) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : 1\n            },\n            type: \"opacity\"\n          };\n          this.process(particle, distMouse, timeSpent, opacityData);\n          if (!container.bubble.durationEnd) {\n            if (distMouse <= container.retina.bubbleModeDistance) {\n              this.hoverBubbleColor(particle, distMouse);\n            } else {\n              delete particle.bubble.color;\n            }\n          } else {\n            delete particle.bubble.color;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }, {\n    key: \"hoverBubble\",\n    value: function hoverBubble() {\n      var container = this.container,\n        mousePos = container.interactivity.mouse.position;\n      if (mousePos === undefined) {\n        return;\n      }\n      var distance = container.retina.bubbleModeDistance,\n        query = container.particles.quadTree.queryCircle(mousePos, distance);\n      var _iterator3 = _createForOfIteratorHelper(query),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var particle = _step3.value;\n          particle.bubble.inRange = true;\n          var pos = particle.getPosition(),\n            pointDistance = getDistance(pos, mousePos),\n            ratio = 1 - pointDistance / distance;\n          if (pointDistance <= distance) {\n            if (ratio >= 0 && container.interactivity.status === Constants.mouseMoveEvent) {\n              this.hoverBubbleSize(particle, ratio);\n              this.hoverBubbleOpacity(particle, ratio);\n              this.hoverBubbleColor(particle, ratio);\n            }\n          } else {\n            this.reset(particle);\n          }\n          if (container.interactivity.status === Constants.mouseLeaveEvent) {\n            this.reset(particle);\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  }, {\n    key: \"hoverBubbleSize\",\n    value: function hoverBubbleSize(particle, ratio, divBubble) {\n      var container = this.container,\n        modeSize = (divBubble === null || divBubble === void 0 ? void 0 : divBubble.size) ? divBubble.size * container.retina.pixelRatio : container.retina.bubbleModeSize;\n      if (modeSize === undefined) {\n        return;\n      }\n      var optSize = getRangeMax(particle.options.size.value) * container.retina.pixelRatio;\n      var pSize = particle.size.value;\n      var size = calculateBubbleValue(pSize, modeSize, optSize, ratio);\n      if (size !== undefined) {\n        particle.bubble.radius = size;\n      }\n    }\n  }, {\n    key: \"hoverBubbleOpacity\",\n    value: function hoverBubbleOpacity(particle, ratio, divBubble) {\n      var _a, _b, _c;\n      var container = this.container,\n        options = container.actualOptions,\n        modeOpacity = (_a = divBubble === null || divBubble === void 0 ? void 0 : divBubble.opacity) !== null && _a !== void 0 ? _a : options.interactivity.modes.bubble.opacity;\n      if (!modeOpacity) {\n        return;\n      }\n      var optOpacity = particle.options.opacity.value;\n      var pOpacity = (_c = (_b = particle.opacity) === null || _b === void 0 ? void 0 : _b.value) !== null && _c !== void 0 ? _c : 1;\n      var opacity = calculateBubbleValue(pOpacity, modeOpacity, getRangeMax(optOpacity), ratio);\n      if (opacity !== undefined) {\n        particle.bubble.opacity = opacity;\n      }\n    }\n  }, {\n    key: \"hoverBubbleColor\",\n    value: function hoverBubbleColor(particle, ratio, divBubble) {\n      var options = this.container.actualOptions;\n      var bubbleOptions = divBubble !== null && divBubble !== void 0 ? divBubble : options.interactivity.modes.bubble;\n      if (!particle.bubble.finalColor) {\n        var modeColor = bubbleOptions.color;\n        if (!modeColor) {\n          return;\n        }\n        var bubbleColor = modeColor instanceof Array ? itemFromArray(modeColor) : modeColor;\n        particle.bubble.finalColor = colorToHsl(bubbleColor);\n      }\n      if (!particle.bubble.finalColor) {\n        return;\n      }\n      if (bubbleOptions.mix) {\n        particle.bubble.color = undefined;\n        var pColor = particle.getFillColor();\n        particle.bubble.color = pColor ? rgbToHsl(colorMix(pColor, particle.bubble.finalColor, 1 - ratio, ratio)) : particle.bubble.finalColor;\n      } else {\n        particle.bubble.color = particle.bubble.finalColor;\n      }\n    }\n  }]);\n  return Bubbler;\n}(ExternalInteractorBase);","map":{"version":3,"names":["clamp","getDistance","getRangeMax","colorMix","colorToHsl","rgbToHsl","divMode","divModeExecute","isDivModeEnabled","isInArray","itemFromArray","Circle","Constants","ExternalInteractorBase","Rectangle","calculateBubbleValue","particleValue","modeValue","optionsValue","ratio","value","Bubbler","_ExternalInteractorBa","_inherits","_super","_createSuper","container","_this","_classCallCheck","call","bubble","handleClickMode","mode","clicking","_createClass","key","isEnabled","options","actualOptions","mouse","interactivity","events","divs","onDiv","divBubble","onHover","enable","position","onClick","clickPosition","hoverMode","clickMode","reset","particle","force","inRange","div","opacity","radius","color","_interact","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this2","hoverEnabled","clickEnabled","wrap","_callee$","_context","prev","next","hoverBubble","clickBubble","selector","singleSelectorHover","stop","interact","apply","arguments","_this3","selectors","document","querySelectorAll","length","forEach","item","elem","pxRatio","retina","pixelRatio","pos","x","offsetLeft","offsetWidth","y","offsetTop","offsetHeight","repulseRadius","area","type","query","particles","quadTree","_iterator","_createForOfIteratorHelper","_step","s","n","done","contains","getPosition","modes","hoverBubbleSize","hoverBubbleOpacity","hoverBubbleColor","err","e","f","process","distMouse","timeSpent","data","bubbleParam","bubbleObj","optValue","undefined","bubbleDuration","duration","bubbleDistance","bubbleModeDistance","particlesParam","particlesObj","pObjBubble","pObj","durationEnd","obj","_a","_b","mouseClickPos","distance","queryCircle","_iterator2","_step2","Date","getTime","clickTime","sizeData","bubbleModeSize","size","opacityData","mousePos","_iterator3","_step3","pointDistance","status","mouseMoveEvent","mouseLeaveEvent","modeSize","optSize","pSize","_c","modeOpacity","optOpacity","pOpacity","bubbleOptions","finalColor","modeColor","bubbleColor","Array","mix","pColor","getFillColor"],"sources":["C:/Users/prana/OneDrive/Desktop/Misc/officialwebsite/node_modules/tsparticles/esm/Interactions/External/Bubble/Bubbler.js"],"sourcesContent":["import { clamp, getDistance, getRangeMax } from \"../../../Utils/NumberUtils\";\nimport { colorMix, colorToHsl, rgbToHsl } from \"../../../Utils/ColorUtils\";\nimport { divMode, divModeExecute, isDivModeEnabled, isInArray, itemFromArray } from \"../../../Utils/Utils\";\nimport { Circle } from \"../../../Core/Utils/Circle\";\nimport { Constants } from \"../../../Core/Utils/Constants\";\nimport { ExternalInteractorBase } from \"../../../Core/Utils/ExternalInteractorBase\";\nimport { Rectangle } from \"../../../Core/Utils/Rectangle\";\nfunction calculateBubbleValue(particleValue, modeValue, optionsValue, ratio) {\n    if (modeValue >= optionsValue) {\n        const value = particleValue + (modeValue - optionsValue) * ratio;\n        return clamp(value, particleValue, modeValue);\n    }\n    else if (modeValue < optionsValue) {\n        const value = particleValue - (optionsValue - modeValue) * ratio;\n        return clamp(value, modeValue, particleValue);\n    }\n}\nexport class Bubbler extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        if (!container.bubble) {\n            container.bubble = {};\n        }\n        this.handleClickMode = (mode) => {\n            if (mode !== \"bubble\") {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            container.bubble.clicking = true;\n        };\n    }\n    isEnabled() {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = options.interactivity.events, divs = events.onDiv, divBubble = isDivModeEnabled(\"bubble\", divs);\n        if (!(divBubble || (events.onHover.enable && mouse.position) || (events.onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode;\n        const clickMode = events.onClick.mode;\n        return isInArray(\"bubble\", hoverMode) || isInArray(\"bubble\", clickMode) || divBubble;\n    }\n    reset(particle, force) {\n        if (!(!particle.bubble.inRange || force)) {\n            return;\n        }\n        delete particle.bubble.div;\n        delete particle.bubble.opacity;\n        delete particle.bubble.radius;\n        delete particle.bubble.color;\n    }\n    async interact() {\n        const options = this.container.actualOptions, events = options.interactivity.events, onHover = events.onHover, onClick = events.onClick, hoverEnabled = onHover.enable, hoverMode = onHover.mode, clickEnabled = onClick.enable, clickMode = onClick.mode, divs = events.onDiv;\n        if (hoverEnabled && isInArray(\"bubble\", hoverMode)) {\n            this.hoverBubble();\n        }\n        else if (clickEnabled && isInArray(\"bubble\", clickMode)) {\n            this.clickBubble();\n        }\n        else {\n            divModeExecute(\"bubble\", divs, (selector, div) => this.singleSelectorHover(selector, div));\n        }\n    }\n    singleSelectorHover(selector, div) {\n        const container = this.container, selectors = document.querySelectorAll(selector);\n        if (!selectors.length) {\n            return;\n        }\n        selectors.forEach((item) => {\n            const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n            }, repulseRadius = (elem.offsetWidth / 2) * pxRatio, area = div.type === \"circle\"\n                ? new Circle(pos.x, pos.y, repulseRadius)\n                : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), query = container.particles.quadTree.query(area);\n            for (const particle of query) {\n                if (!area.contains(particle.getPosition())) {\n                    continue;\n                }\n                particle.bubble.inRange = true;\n                const divs = container.actualOptions.interactivity.modes.bubble.divs;\n                const divBubble = divMode(divs, elem);\n                if (!particle.bubble.div || particle.bubble.div !== elem) {\n                    this.reset(particle, true);\n                    particle.bubble.div = elem;\n                }\n                this.hoverBubbleSize(particle, 1, divBubble);\n                this.hoverBubbleOpacity(particle, 1, divBubble);\n                this.hoverBubbleColor(particle, 1, divBubble);\n            }\n        });\n    }\n    process(particle, distMouse, timeSpent, data) {\n        const container = this.container, bubbleParam = data.bubbleObj.optValue;\n        if (bubbleParam === undefined) {\n            return;\n        }\n        const options = container.actualOptions, bubbleDuration = options.interactivity.modes.bubble.duration, bubbleDistance = container.retina.bubbleModeDistance, particlesParam = data.particlesObj.optValue, pObjBubble = data.bubbleObj.value, pObj = data.particlesObj.value || 0, type = data.type;\n        if (bubbleParam === particlesParam) {\n            return;\n        }\n        if (!container.bubble) {\n            container.bubble = {};\n        }\n        if (!container.bubble.durationEnd) {\n            if (distMouse <= bubbleDistance) {\n                const obj = pObjBubble !== null && pObjBubble !== void 0 ? pObjBubble : pObj;\n                if (obj !== bubbleParam) {\n                    const value = pObj - (timeSpent * (pObj - bubbleParam)) / bubbleDuration;\n                    if (type === \"size\") {\n                        particle.bubble.radius = value;\n                    }\n                    if (type === \"opacity\") {\n                        particle.bubble.opacity = value;\n                    }\n                }\n            }\n            else {\n                if (type === \"size\") {\n                    delete particle.bubble.radius;\n                }\n                if (type === \"opacity\") {\n                    delete particle.bubble.opacity;\n                }\n            }\n        }\n        else if (pObjBubble) {\n            if (type === \"size\") {\n                delete particle.bubble.radius;\n            }\n            if (type === \"opacity\") {\n                delete particle.bubble.opacity;\n            }\n        }\n    }\n    clickBubble() {\n        var _a, _b;\n        const container = this.container, options = container.actualOptions, mouseClickPos = container.interactivity.mouse.clickPosition;\n        if (!mouseClickPos) {\n            return;\n        }\n        if (!container.bubble) {\n            container.bubble = {};\n        }\n        const distance = container.retina.bubbleModeDistance, query = container.particles.quadTree.queryCircle(mouseClickPos, distance);\n        for (const particle of query) {\n            if (!container.bubble.clicking) {\n                continue;\n            }\n            particle.bubble.inRange = !container.bubble.durationEnd;\n            const pos = particle.getPosition(), distMouse = getDistance(pos, mouseClickPos), timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime || 0)) / 1000;\n            if (timeSpent > options.interactivity.modes.bubble.duration) {\n                container.bubble.durationEnd = true;\n            }\n            if (timeSpent > options.interactivity.modes.bubble.duration * 2) {\n                container.bubble.clicking = false;\n                container.bubble.durationEnd = false;\n            }\n            const sizeData = {\n                bubbleObj: {\n                    optValue: container.retina.bubbleModeSize,\n                    value: particle.bubble.radius,\n                },\n                particlesObj: {\n                    optValue: getRangeMax(particle.options.size.value) * container.retina.pixelRatio,\n                    value: particle.size.value,\n                },\n                type: \"size\",\n            };\n            this.process(particle, distMouse, timeSpent, sizeData);\n            const opacityData = {\n                bubbleObj: {\n                    optValue: options.interactivity.modes.bubble.opacity,\n                    value: particle.bubble.opacity,\n                },\n                particlesObj: {\n                    optValue: getRangeMax(particle.options.opacity.value),\n                    value: (_b = (_a = particle.opacity) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : 1,\n                },\n                type: \"opacity\",\n            };\n            this.process(particle, distMouse, timeSpent, opacityData);\n            if (!container.bubble.durationEnd) {\n                if (distMouse <= container.retina.bubbleModeDistance) {\n                    this.hoverBubbleColor(particle, distMouse);\n                }\n                else {\n                    delete particle.bubble.color;\n                }\n            }\n            else {\n                delete particle.bubble.color;\n            }\n        }\n    }\n    hoverBubble() {\n        const container = this.container, mousePos = container.interactivity.mouse.position;\n        if (mousePos === undefined) {\n            return;\n        }\n        const distance = container.retina.bubbleModeDistance, query = container.particles.quadTree.queryCircle(mousePos, distance);\n        for (const particle of query) {\n            particle.bubble.inRange = true;\n            const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos), ratio = 1 - pointDistance / distance;\n            if (pointDistance <= distance) {\n                if (ratio >= 0 && container.interactivity.status === Constants.mouseMoveEvent) {\n                    this.hoverBubbleSize(particle, ratio);\n                    this.hoverBubbleOpacity(particle, ratio);\n                    this.hoverBubbleColor(particle, ratio);\n                }\n            }\n            else {\n                this.reset(particle);\n            }\n            if (container.interactivity.status === Constants.mouseLeaveEvent) {\n                this.reset(particle);\n            }\n        }\n    }\n    hoverBubbleSize(particle, ratio, divBubble) {\n        const container = this.container, modeSize = (divBubble === null || divBubble === void 0 ? void 0 : divBubble.size) ? divBubble.size * container.retina.pixelRatio : container.retina.bubbleModeSize;\n        if (modeSize === undefined) {\n            return;\n        }\n        const optSize = getRangeMax(particle.options.size.value) * container.retina.pixelRatio;\n        const pSize = particle.size.value;\n        const size = calculateBubbleValue(pSize, modeSize, optSize, ratio);\n        if (size !== undefined) {\n            particle.bubble.radius = size;\n        }\n    }\n    hoverBubbleOpacity(particle, ratio, divBubble) {\n        var _a, _b, _c;\n        const container = this.container, options = container.actualOptions, modeOpacity = (_a = divBubble === null || divBubble === void 0 ? void 0 : divBubble.opacity) !== null && _a !== void 0 ? _a : options.interactivity.modes.bubble.opacity;\n        if (!modeOpacity) {\n            return;\n        }\n        const optOpacity = particle.options.opacity.value;\n        const pOpacity = (_c = (_b = particle.opacity) === null || _b === void 0 ? void 0 : _b.value) !== null && _c !== void 0 ? _c : 1;\n        const opacity = calculateBubbleValue(pOpacity, modeOpacity, getRangeMax(optOpacity), ratio);\n        if (opacity !== undefined) {\n            particle.bubble.opacity = opacity;\n        }\n    }\n    hoverBubbleColor(particle, ratio, divBubble) {\n        const options = this.container.actualOptions;\n        const bubbleOptions = divBubble !== null && divBubble !== void 0 ? divBubble : options.interactivity.modes.bubble;\n        if (!particle.bubble.finalColor) {\n            const modeColor = bubbleOptions.color;\n            if (!modeColor) {\n                return;\n            }\n            const bubbleColor = modeColor instanceof Array ? itemFromArray(modeColor) : modeColor;\n            particle.bubble.finalColor = colorToHsl(bubbleColor);\n        }\n        if (!particle.bubble.finalColor) {\n            return;\n        }\n        if (bubbleOptions.mix) {\n            particle.bubble.color = undefined;\n            const pColor = particle.getFillColor();\n            particle.bubble.color = pColor\n                ? rgbToHsl(colorMix(pColor, particle.bubble.finalColor, 1 - ratio, ratio))\n                : particle.bubble.finalColor;\n        }\n        else {\n            particle.bubble.color = particle.bubble.finalColor;\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}