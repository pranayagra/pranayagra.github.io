{"ast":null,"code":"/* MIT license */\nvar colorNames = require('color-name');\n\nvar swizzle = require('simple-swizzle');\n\nvar hasOwnProperty = Object.hasOwnProperty;\nvar reverseNames = {}; // create a list of reverse color names\n\nfor (var name in colorNames) {\n  if (hasOwnProperty.call(colorNames, name)) {\n    reverseNames[colorNames[name]] = name;\n  }\n}\n\nvar cs = module.exports = {\n  to: {},\n  get: {}\n};\n\ncs.get = function (string) {\n  var prefix = string.substring(0, 3).toLowerCase();\n  var val;\n  var model;\n\n  switch (prefix) {\n    case 'hsl':\n      val = cs.get.hsl(string);\n      model = 'hsl';\n      break;\n\n    case 'hwb':\n      val = cs.get.hwb(string);\n      model = 'hwb';\n      break;\n\n    default:\n      val = cs.get.rgb(string);\n      model = 'rgb';\n      break;\n  }\n\n  if (!val) {\n    return null;\n  }\n\n  return {\n    model: model,\n    value: val\n  };\n};\n\ncs.get.rgb = function (string) {\n  if (!string) {\n    return null;\n  }\n\n  var abbr = /^#([a-f0-9]{3,4})$/i;\n  var hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;\n  var rgba = /^rgba?\\(\\s*([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)(%?)\\s*)?\\)$/;\n  var per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,?\\s*([+-]?[\\d\\.]+)\\%\\s*,?\\s*([+-]?[\\d\\.]+)\\%\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)(%?)\\s*)?\\)$/;\n  var keyword = /^(\\w+)$/;\n  var rgb = [0, 0, 0, 1];\n  var match;\n  var i;\n  var hexAlpha;\n\n  if (match = string.match(hex)) {\n    hexAlpha = match[2];\n    match = match[1];\n\n    for (i = 0; i < 3; i++) {\n      // https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19\n      var i2 = i * 2;\n      rgb[i] = parseInt(match.slice(i2, i2 + 2), 16);\n    }\n\n    if (hexAlpha) {\n      rgb[3] = parseInt(hexAlpha, 16) / 255;\n    }\n  } else if (match = string.match(abbr)) {\n    match = match[1];\n    hexAlpha = match[3];\n\n    for (i = 0; i < 3; i++) {\n      rgb[i] = parseInt(match[i] + match[i], 16);\n    }\n\n    if (hexAlpha) {\n      rgb[3] = parseInt(hexAlpha + hexAlpha, 16) / 255;\n    }\n  } else if (match = string.match(rgba)) {\n    for (i = 0; i < 3; i++) {\n      rgb[i] = parseInt(match[i + 1], 0);\n    }\n\n    if (match[4]) {\n      if (match[5]) {\n        rgb[3] = parseFloat(match[4]) * 0.01;\n      } else {\n        rgb[3] = parseFloat(match[4]);\n      }\n    }\n  } else if (match = string.match(per)) {\n    for (i = 0; i < 3; i++) {\n      rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n    }\n\n    if (match[4]) {\n      if (match[5]) {\n        rgb[3] = parseFloat(match[4]) * 0.01;\n      } else {\n        rgb[3] = parseFloat(match[4]);\n      }\n    }\n  } else if (match = string.match(keyword)) {\n    if (match[1] === 'transparent') {\n      return [0, 0, 0, 0];\n    }\n\n    if (!hasOwnProperty.call(colorNames, match[1])) {\n      return null;\n    }\n\n    rgb = colorNames[match[1]];\n    rgb[3] = 1;\n    return rgb;\n  } else {\n    return null;\n  }\n\n  for (i = 0; i < 3; i++) {\n    rgb[i] = clamp(rgb[i], 0, 255);\n  }\n\n  rgb[3] = clamp(rgb[3], 0, 1);\n  return rgb;\n};\n\ncs.get.hsl = function (string) {\n  if (!string) {\n    return null;\n  }\n\n  var hsl = /^hsla?\\(\\s*([+-]?(?:\\d{0,3}\\.)?\\d+)(?:deg)?\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*(?:[,|\\/]\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n  var match = string.match(hsl);\n\n  if (match) {\n    var alpha = parseFloat(match[4]);\n    var h = (parseFloat(match[1]) % 360 + 360) % 360;\n    var s = clamp(parseFloat(match[2]), 0, 100);\n    var l = clamp(parseFloat(match[3]), 0, 100);\n    var a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n    return [h, s, l, a];\n  }\n\n  return null;\n};\n\ncs.get.hwb = function (string) {\n  if (!string) {\n    return null;\n  }\n\n  var hwb = /^hwb\\(\\s*([+-]?\\d{0,3}(?:\\.\\d+)?)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n  var match = string.match(hwb);\n\n  if (match) {\n    var alpha = parseFloat(match[4]);\n    var h = (parseFloat(match[1]) % 360 + 360) % 360;\n    var w = clamp(parseFloat(match[2]), 0, 100);\n    var b = clamp(parseFloat(match[3]), 0, 100);\n    var a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n    return [h, w, b, a];\n  }\n\n  return null;\n};\n\ncs.to.hex = function () {\n  var rgba = swizzle(arguments);\n  return '#' + hexDouble(rgba[0]) + hexDouble(rgba[1]) + hexDouble(rgba[2]) + (rgba[3] < 1 ? hexDouble(Math.round(rgba[3] * 255)) : '');\n};\n\ncs.to.rgb = function () {\n  var rgba = swizzle(arguments);\n  return rgba.length < 4 || rgba[3] === 1 ? 'rgb(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ')' : 'rgba(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ', ' + rgba[3] + ')';\n};\n\ncs.to.rgb.percent = function () {\n  var rgba = swizzle(arguments);\n  var r = Math.round(rgba[0] / 255 * 100);\n  var g = Math.round(rgba[1] / 255 * 100);\n  var b = Math.round(rgba[2] / 255 * 100);\n  return rgba.length < 4 || rgba[3] === 1 ? 'rgb(' + r + '%, ' + g + '%, ' + b + '%)' : 'rgba(' + r + '%, ' + g + '%, ' + b + '%, ' + rgba[3] + ')';\n};\n\ncs.to.hsl = function () {\n  var hsla = swizzle(arguments);\n  return hsla.length < 4 || hsla[3] === 1 ? 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)' : 'hsla(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%, ' + hsla[3] + ')';\n}; // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\n\n\ncs.to.hwb = function () {\n  var hwba = swizzle(arguments);\n  var a = '';\n\n  if (hwba.length >= 4 && hwba[3] !== 1) {\n    a = ', ' + hwba[3];\n  }\n\n  return 'hwb(' + hwba[0] + ', ' + hwba[1] + '%, ' + hwba[2] + '%' + a + ')';\n};\n\ncs.to.keyword = function (rgb) {\n  return reverseNames[rgb.slice(0, 3)];\n}; // helpers\n\n\nfunction clamp(num, min, max) {\n  return Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n  var str = Math.round(num).toString(16).toUpperCase();\n  return str.length < 2 ? '0' + str : str;\n}","map":{"version":3,"sources":["C:/Users/prana/OneDrive/Desktop/Misc/officialwebsite/node_modules/color-string/index.js"],"names":["colorNames","require","swizzle","hasOwnProperty","Object","reverseNames","name","call","cs","module","exports","to","get","string","prefix","substring","toLowerCase","val","model","hsl","hwb","rgb","value","abbr","hex","rgba","per","keyword","match","i","hexAlpha","i2","parseInt","slice","parseFloat","Math","round","clamp","alpha","h","s","l","a","isNaN","w","b","arguments","hexDouble","length","percent","r","g","hsla","hwba","num","min","max","str","toString","toUpperCase"],"mappings":"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","sourcesContent":["/* MIT license */\r\nvar colorNames = require('color-name');\r\nvar swizzle = require('simple-swizzle');\r\nvar hasOwnProperty = Object.hasOwnProperty;\r\n\r\nvar reverseNames = {};\r\n\r\n// create a list of reverse color names\r\nfor (var name in colorNames) {\r\n\tif (hasOwnProperty.call(colorNames, name)) {\r\n\t\treverseNames[colorNames[name]] = name;\r\n\t}\r\n}\r\n\r\nvar cs = module.exports = {\r\n\tto: {},\r\n\tget: {}\r\n};\r\n\r\ncs.get = function (string) {\r\n\tvar prefix = string.substring(0, 3).toLowerCase();\r\n\tvar val;\r\n\tvar model;\r\n\tswitch (prefix) {\r\n\t\tcase 'hsl':\r\n\t\t\tval = cs.get.hsl(string);\r\n\t\t\tmodel = 'hsl';\r\n\t\t\tbreak;\r\n\t\tcase 'hwb':\r\n\t\t\tval = cs.get.hwb(string);\r\n\t\t\tmodel = 'hwb';\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tval = cs.get.rgb(string);\r\n\t\t\tmodel = 'rgb';\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\tif (!val) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\treturn {model: model, value: val};\r\n};\r\n\r\ncs.get.rgb = function (string) {\r\n\tif (!string) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tvar abbr = /^#([a-f0-9]{3,4})$/i;\r\n\tvar hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;\r\n\tvar rgba = /^rgba?\\(\\s*([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)(%?)\\s*)?\\)$/;\r\n\tvar per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,?\\s*([+-]?[\\d\\.]+)\\%\\s*,?\\s*([+-]?[\\d\\.]+)\\%\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)(%?)\\s*)?\\)$/;\r\n\tvar keyword = /^(\\w+)$/;\r\n\r\n\tvar rgb = [0, 0, 0, 1];\r\n\tvar match;\r\n\tvar i;\r\n\tvar hexAlpha;\r\n\r\n\tif (match = string.match(hex)) {\r\n\t\thexAlpha = match[2];\r\n\t\tmatch = match[1];\r\n\r\n\t\tfor (i = 0; i < 3; i++) {\r\n\t\t\t// https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19\r\n\t\t\tvar i2 = i * 2;\r\n\t\t\trgb[i] = parseInt(match.slice(i2, i2 + 2), 16);\r\n\t\t}\r\n\r\n\t\tif (hexAlpha) {\r\n\t\t\trgb[3] = parseInt(hexAlpha, 16) / 255;\r\n\t\t}\r\n\t} else if (match = string.match(abbr)) {\r\n\t\tmatch = match[1];\r\n\t\thexAlpha = match[3];\r\n\r\n\t\tfor (i = 0; i < 3; i++) {\r\n\t\t\trgb[i] = parseInt(match[i] + match[i], 16);\r\n\t\t}\r\n\r\n\t\tif (hexAlpha) {\r\n\t\t\trgb[3] = parseInt(hexAlpha + hexAlpha, 16) / 255;\r\n\t\t}\r\n\t} else if (match = string.match(rgba)) {\r\n\t\tfor (i = 0; i < 3; i++) {\r\n\t\t\trgb[i] = parseInt(match[i + 1], 0);\r\n\t\t}\r\n\r\n\t\tif (match[4]) {\r\n\t\t\tif (match[5]) {\r\n\t\t\t\trgb[3] = parseFloat(match[4]) * 0.01;\r\n\t\t\t} else {\r\n\t\t\t\trgb[3] = parseFloat(match[4]);\r\n\t\t\t}\r\n\t\t}\r\n\t} else if (match = string.match(per)) {\r\n\t\tfor (i = 0; i < 3; i++) {\r\n\t\t\trgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\r\n\t\t}\r\n\r\n\t\tif (match[4]) {\r\n\t\t\tif (match[5]) {\r\n\t\t\t\trgb[3] = parseFloat(match[4]) * 0.01;\r\n\t\t\t} else {\r\n\t\t\t\trgb[3] = parseFloat(match[4]);\r\n\t\t\t}\r\n\t\t}\r\n\t} else if (match = string.match(keyword)) {\r\n\t\tif (match[1] === 'transparent') {\r\n\t\t\treturn [0, 0, 0, 0];\r\n\t\t}\r\n\r\n\t\tif (!hasOwnProperty.call(colorNames, match[1])) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\trgb = colorNames[match[1]];\r\n\t\trgb[3] = 1;\r\n\r\n\t\treturn rgb;\r\n\t} else {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tfor (i = 0; i < 3; i++) {\r\n\t\trgb[i] = clamp(rgb[i], 0, 255);\r\n\t}\r\n\trgb[3] = clamp(rgb[3], 0, 1);\r\n\r\n\treturn rgb;\r\n};\r\n\r\ncs.get.hsl = function (string) {\r\n\tif (!string) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tvar hsl = /^hsla?\\(\\s*([+-]?(?:\\d{0,3}\\.)?\\d+)(?:deg)?\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*(?:[,|\\/]\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\r\n\tvar match = string.match(hsl);\r\n\r\n\tif (match) {\r\n\t\tvar alpha = parseFloat(match[4]);\r\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\r\n\t\tvar s = clamp(parseFloat(match[2]), 0, 100);\r\n\t\tvar l = clamp(parseFloat(match[3]), 0, 100);\r\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\r\n\r\n\t\treturn [h, s, l, a];\r\n\t}\r\n\r\n\treturn null;\r\n};\r\n\r\ncs.get.hwb = function (string) {\r\n\tif (!string) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tvar hwb = /^hwb\\(\\s*([+-]?\\d{0,3}(?:\\.\\d+)?)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\r\n\tvar match = string.match(hwb);\r\n\r\n\tif (match) {\r\n\t\tvar alpha = parseFloat(match[4]);\r\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\r\n\t\tvar w = clamp(parseFloat(match[2]), 0, 100);\r\n\t\tvar b = clamp(parseFloat(match[3]), 0, 100);\r\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\r\n\t\treturn [h, w, b, a];\r\n\t}\r\n\r\n\treturn null;\r\n};\r\n\r\ncs.to.hex = function () {\r\n\tvar rgba = swizzle(arguments);\r\n\r\n\treturn (\r\n\t\t'#' +\r\n\t\thexDouble(rgba[0]) +\r\n\t\thexDouble(rgba[1]) +\r\n\t\thexDouble(rgba[2]) +\r\n\t\t(rgba[3] < 1\r\n\t\t\t? (hexDouble(Math.round(rgba[3] * 255)))\r\n\t\t\t: '')\r\n\t);\r\n};\r\n\r\ncs.to.rgb = function () {\r\n\tvar rgba = swizzle(arguments);\r\n\r\n\treturn rgba.length < 4 || rgba[3] === 1\r\n\t\t? 'rgb(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ')'\r\n\t\t: 'rgba(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ', ' + rgba[3] + ')';\r\n};\r\n\r\ncs.to.rgb.percent = function () {\r\n\tvar rgba = swizzle(arguments);\r\n\r\n\tvar r = Math.round(rgba[0] / 255 * 100);\r\n\tvar g = Math.round(rgba[1] / 255 * 100);\r\n\tvar b = Math.round(rgba[2] / 255 * 100);\r\n\r\n\treturn rgba.length < 4 || rgba[3] === 1\r\n\t\t? 'rgb(' + r + '%, ' + g + '%, ' + b + '%)'\r\n\t\t: 'rgba(' + r + '%, ' + g + '%, ' + b + '%, ' + rgba[3] + ')';\r\n};\r\n\r\ncs.to.hsl = function () {\r\n\tvar hsla = swizzle(arguments);\r\n\treturn hsla.length < 4 || hsla[3] === 1\r\n\t\t? 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)'\r\n\t\t: 'hsla(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%, ' + hsla[3] + ')';\r\n};\r\n\r\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\r\n// (hwb have alpha optional & 1 is default value)\r\ncs.to.hwb = function () {\r\n\tvar hwba = swizzle(arguments);\r\n\r\n\tvar a = '';\r\n\tif (hwba.length >= 4 && hwba[3] !== 1) {\r\n\t\ta = ', ' + hwba[3];\r\n\t}\r\n\r\n\treturn 'hwb(' + hwba[0] + ', ' + hwba[1] + '%, ' + hwba[2] + '%' + a + ')';\r\n};\r\n\r\ncs.to.keyword = function (rgb) {\r\n\treturn reverseNames[rgb.slice(0, 3)];\r\n};\r\n\r\n// helpers\r\nfunction clamp(num, min, max) {\r\n\treturn Math.min(Math.max(min, num), max);\r\n}\r\n\r\nfunction hexDouble(num) {\r\n\tvar str = Math.round(num).toString(16).toUpperCase();\r\n\treturn (str.length < 2) ? '0' + str : str;\r\n}\r\n"]},"metadata":{},"sourceType":"script"}