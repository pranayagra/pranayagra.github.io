{"ast":null,"code":"/*!\r\n * Bowser - a browser detector\r\n * https://github.com/ded/bowser\r\n * MIT License | (c) Dustin Diaz 2015\r\n */\n!function (root, name, definition) {\n  if (typeof module != 'undefined' && module.exports) module.exports = definition();else if (typeof define == 'function' && define.amd) define(name, definition);else root[name] = definition();\n}(this, 'bowser', function () {\n  /**\r\n    * See useragents.js for examples of navigator.userAgent\r\n    */\n  var t = true;\n\n  function detect(ua) {\n    function getFirstMatch(regex) {\n      var match = ua.match(regex);\n      return match && match.length > 1 && match[1] || '';\n    }\n\n    function getSecondMatch(regex) {\n      var match = ua.match(regex);\n      return match && match.length > 1 && match[2] || '';\n    }\n\n    var iosdevice = getFirstMatch(/(ipod|iphone|ipad)/i).toLowerCase(),\n        likeAndroid = /like android/i.test(ua),\n        android = !likeAndroid && /android/i.test(ua),\n        nexusMobile = /nexus\\s*[0-6]\\s*/i.test(ua),\n        nexusTablet = !nexusMobile && /nexus\\s*[0-9]+/i.test(ua),\n        chromeos = /CrOS/.test(ua),\n        silk = /silk/i.test(ua),\n        sailfish = /sailfish/i.test(ua),\n        tizen = /tizen/i.test(ua),\n        webos = /(web|hpw)(o|0)s/i.test(ua),\n        windowsphone = /windows phone/i.test(ua),\n        samsungBrowser = /SamsungBrowser/i.test(ua),\n        windows = !windowsphone && /windows/i.test(ua),\n        mac = !iosdevice && !silk && /macintosh/i.test(ua),\n        linux = !android && !sailfish && !tizen && !webos && /linux/i.test(ua),\n        edgeVersion = getSecondMatch(/edg([ea]|ios)\\/(\\d+(\\.\\d+)?)/i),\n        versionIdentifier = getFirstMatch(/version\\/(\\d+(\\.\\d+)?)/i),\n        tablet = /tablet/i.test(ua) && !/tablet pc/i.test(ua),\n        mobile = !tablet && /[^-]mobi/i.test(ua),\n        xbox = /xbox/i.test(ua),\n        result;\n\n    if (/opera/i.test(ua)) {\n      //  an old Opera\n      result = {\n        name: 'Opera',\n        opera: t,\n        version: versionIdentifier || getFirstMatch(/(?:opera|opr|opios)[\\s\\/](\\d+(\\.\\d+)?)/i)\n      };\n    } else if (/opr\\/|opios/i.test(ua)) {\n      // a new Opera\n      result = {\n        name: 'Opera',\n        opera: t,\n        version: getFirstMatch(/(?:opr|opios)[\\s\\/](\\d+(\\.\\d+)?)/i) || versionIdentifier\n      };\n    } else if (/SamsungBrowser/i.test(ua)) {\n      result = {\n        name: 'Samsung Internet for Android',\n        samsungBrowser: t,\n        version: versionIdentifier || getFirstMatch(/(?:SamsungBrowser)[\\s\\/](\\d+(\\.\\d+)?)/i)\n      };\n    } else if (/Whale/i.test(ua)) {\n      result = {\n        name: 'NAVER Whale browser',\n        whale: t,\n        version: getFirstMatch(/(?:whale)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      };\n    } else if (/MZBrowser/i.test(ua)) {\n      result = {\n        name: 'MZ Browser',\n        mzbrowser: t,\n        version: getFirstMatch(/(?:MZBrowser)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      };\n    } else if (/coast/i.test(ua)) {\n      result = {\n        name: 'Opera Coast',\n        coast: t,\n        version: versionIdentifier || getFirstMatch(/(?:coast)[\\s\\/](\\d+(\\.\\d+)?)/i)\n      };\n    } else if (/focus/i.test(ua)) {\n      result = {\n        name: 'Focus',\n        focus: t,\n        version: getFirstMatch(/(?:focus)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      };\n    } else if (/yabrowser/i.test(ua)) {\n      result = {\n        name: 'Yandex Browser',\n        yandexbrowser: t,\n        version: versionIdentifier || getFirstMatch(/(?:yabrowser)[\\s\\/](\\d+(\\.\\d+)?)/i)\n      };\n    } else if (/ucbrowser/i.test(ua)) {\n      result = {\n        name: 'UC Browser',\n        ucbrowser: t,\n        version: getFirstMatch(/(?:ucbrowser)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      };\n    } else if (/mxios/i.test(ua)) {\n      result = {\n        name: 'Maxthon',\n        maxthon: t,\n        version: getFirstMatch(/(?:mxios)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      };\n    } else if (/epiphany/i.test(ua)) {\n      result = {\n        name: 'Epiphany',\n        epiphany: t,\n        version: getFirstMatch(/(?:epiphany)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      };\n    } else if (/puffin/i.test(ua)) {\n      result = {\n        name: 'Puffin',\n        puffin: t,\n        version: getFirstMatch(/(?:puffin)[\\s\\/](\\d+(?:\\.\\d+)?)/i)\n      };\n    } else if (/sleipnir/i.test(ua)) {\n      result = {\n        name: 'Sleipnir',\n        sleipnir: t,\n        version: getFirstMatch(/(?:sleipnir)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      };\n    } else if (/k-meleon/i.test(ua)) {\n      result = {\n        name: 'K-Meleon',\n        kMeleon: t,\n        version: getFirstMatch(/(?:k-meleon)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      };\n    } else if (windowsphone) {\n      result = {\n        name: 'Windows Phone',\n        osname: 'Windows Phone',\n        windowsphone: t\n      };\n\n      if (edgeVersion) {\n        result.msedge = t;\n        result.version = edgeVersion;\n      } else {\n        result.msie = t;\n        result.version = getFirstMatch(/iemobile\\/(\\d+(\\.\\d+)?)/i);\n      }\n    } else if (/msie|trident/i.test(ua)) {\n      result = {\n        name: 'Internet Explorer',\n        msie: t,\n        version: getFirstMatch(/(?:msie |rv:)(\\d+(\\.\\d+)?)/i)\n      };\n    } else if (chromeos) {\n      result = {\n        name: 'Chrome',\n        osname: 'Chrome OS',\n        chromeos: t,\n        chromeBook: t,\n        chrome: t,\n        version: getFirstMatch(/(?:chrome|crios|crmo)\\/(\\d+(\\.\\d+)?)/i)\n      };\n    } else if (/edg([ea]|ios)/i.test(ua)) {\n      result = {\n        name: 'Microsoft Edge',\n        msedge: t,\n        version: edgeVersion\n      };\n    } else if (/vivaldi/i.test(ua)) {\n      result = {\n        name: 'Vivaldi',\n        vivaldi: t,\n        version: getFirstMatch(/vivaldi\\/(\\d+(\\.\\d+)?)/i) || versionIdentifier\n      };\n    } else if (sailfish) {\n      result = {\n        name: 'Sailfish',\n        osname: 'Sailfish OS',\n        sailfish: t,\n        version: getFirstMatch(/sailfish\\s?browser\\/(\\d+(\\.\\d+)?)/i)\n      };\n    } else if (/seamonkey\\//i.test(ua)) {\n      result = {\n        name: 'SeaMonkey',\n        seamonkey: t,\n        version: getFirstMatch(/seamonkey\\/(\\d+(\\.\\d+)?)/i)\n      };\n    } else if (/firefox|iceweasel|fxios/i.test(ua)) {\n      result = {\n        name: 'Firefox',\n        firefox: t,\n        version: getFirstMatch(/(?:firefox|iceweasel|fxios)[ \\/](\\d+(\\.\\d+)?)/i)\n      };\n\n      if (/\\((mobile|tablet);[^\\)]*rv:[\\d\\.]+\\)/i.test(ua)) {\n        result.firefoxos = t;\n        result.osname = 'Firefox OS';\n      }\n    } else if (silk) {\n      result = {\n        name: 'Amazon Silk',\n        silk: t,\n        version: getFirstMatch(/silk\\/(\\d+(\\.\\d+)?)/i)\n      };\n    } else if (/phantom/i.test(ua)) {\n      result = {\n        name: 'PhantomJS',\n        phantom: t,\n        version: getFirstMatch(/phantomjs\\/(\\d+(\\.\\d+)?)/i)\n      };\n    } else if (/slimerjs/i.test(ua)) {\n      result = {\n        name: 'SlimerJS',\n        slimer: t,\n        version: getFirstMatch(/slimerjs\\/(\\d+(\\.\\d+)?)/i)\n      };\n    } else if (/blackberry|\\bbb\\d+/i.test(ua) || /rim\\stablet/i.test(ua)) {\n      result = {\n        name: 'BlackBerry',\n        osname: 'BlackBerry OS',\n        blackberry: t,\n        version: versionIdentifier || getFirstMatch(/blackberry[\\d]+\\/(\\d+(\\.\\d+)?)/i)\n      };\n    } else if (webos) {\n      result = {\n        name: 'WebOS',\n        osname: 'WebOS',\n        webos: t,\n        version: versionIdentifier || getFirstMatch(/w(?:eb)?osbrowser\\/(\\d+(\\.\\d+)?)/i)\n      };\n      /touchpad\\//i.test(ua) && (result.touchpad = t);\n    } else if (/bada/i.test(ua)) {\n      result = {\n        name: 'Bada',\n        osname: 'Bada',\n        bada: t,\n        version: getFirstMatch(/dolfin\\/(\\d+(\\.\\d+)?)/i)\n      };\n    } else if (tizen) {\n      result = {\n        name: 'Tizen',\n        osname: 'Tizen',\n        tizen: t,\n        version: getFirstMatch(/(?:tizen\\s?)?browser\\/(\\d+(\\.\\d+)?)/i) || versionIdentifier\n      };\n    } else if (/qupzilla/i.test(ua)) {\n      result = {\n        name: 'QupZilla',\n        qupzilla: t,\n        version: getFirstMatch(/(?:qupzilla)[\\s\\/](\\d+(?:\\.\\d+)+)/i) || versionIdentifier\n      };\n    } else if (/chromium/i.test(ua)) {\n      result = {\n        name: 'Chromium',\n        chromium: t,\n        version: getFirstMatch(/(?:chromium)[\\s\\/](\\d+(?:\\.\\d+)?)/i) || versionIdentifier\n      };\n    } else if (/chrome|crios|crmo/i.test(ua)) {\n      result = {\n        name: 'Chrome',\n        chrome: t,\n        version: getFirstMatch(/(?:chrome|crios|crmo)\\/(\\d+(\\.\\d+)?)/i)\n      };\n    } else if (android) {\n      result = {\n        name: 'Android',\n        version: versionIdentifier\n      };\n    } else if (/safari|applewebkit/i.test(ua)) {\n      result = {\n        name: 'Safari',\n        safari: t\n      };\n\n      if (versionIdentifier) {\n        result.version = versionIdentifier;\n      }\n    } else if (iosdevice) {\n      result = {\n        name: iosdevice == 'iphone' ? 'iPhone' : iosdevice == 'ipad' ? 'iPad' : 'iPod'\n      }; // WTF: version is not part of user agent in web apps\n\n      if (versionIdentifier) {\n        result.version = versionIdentifier;\n      }\n    } else if (/googlebot/i.test(ua)) {\n      result = {\n        name: 'Googlebot',\n        googlebot: t,\n        version: getFirstMatch(/googlebot\\/(\\d+(\\.\\d+))/i) || versionIdentifier\n      };\n    } else {\n      result = {\n        name: getFirstMatch(/^(.*)\\/(.*) /),\n        version: getSecondMatch(/^(.*)\\/(.*) /)\n      };\n    } // set webkit or gecko flag for browsers based on these engines\n\n\n    if (!result.msedge && /(apple)?webkit/i.test(ua)) {\n      if (/(apple)?webkit\\/537\\.36/i.test(ua)) {\n        result.name = result.name || \"Blink\";\n        result.blink = t;\n      } else {\n        result.name = result.name || \"Webkit\";\n        result.webkit = t;\n      }\n\n      if (!result.version && versionIdentifier) {\n        result.version = versionIdentifier;\n      }\n    } else if (!result.opera && /gecko\\//i.test(ua)) {\n      result.name = result.name || \"Gecko\";\n      result.gecko = t;\n      result.version = result.version || getFirstMatch(/gecko\\/(\\d+(\\.\\d+)?)/i);\n    } // set OS flags for platforms that have multiple browsers\n\n\n    if (!result.windowsphone && (android || result.silk)) {\n      result.android = t;\n      result.osname = 'Android';\n    } else if (!result.windowsphone && iosdevice) {\n      result[iosdevice] = t;\n      result.ios = t;\n      result.osname = 'iOS';\n    } else if (mac) {\n      result.mac = t;\n      result.osname = 'macOS';\n    } else if (xbox) {\n      result.xbox = t;\n      result.osname = 'Xbox';\n    } else if (windows) {\n      result.windows = t;\n      result.osname = 'Windows';\n    } else if (linux) {\n      result.linux = t;\n      result.osname = 'Linux';\n    }\n\n    function getWindowsVersion(s) {\n      switch (s) {\n        case 'NT':\n          return 'NT';\n\n        case 'XP':\n          return 'XP';\n\n        case 'NT 5.0':\n          return '2000';\n\n        case 'NT 5.1':\n          return 'XP';\n\n        case 'NT 5.2':\n          return '2003';\n\n        case 'NT 6.0':\n          return 'Vista';\n\n        case 'NT 6.1':\n          return '7';\n\n        case 'NT 6.2':\n          return '8';\n\n        case 'NT 6.3':\n          return '8.1';\n\n        case 'NT 10.0':\n          return '10';\n\n        default:\n          return undefined;\n      }\n    } // OS version extraction\n\n\n    var osVersion = '';\n\n    if (result.windows) {\n      osVersion = getWindowsVersion(getFirstMatch(/Windows ((NT|XP)( \\d\\d?.\\d)?)/i));\n    } else if (result.windowsphone) {\n      osVersion = getFirstMatch(/windows phone (?:os)?\\s?(\\d+(\\.\\d+)*)/i);\n    } else if (result.mac) {\n      osVersion = getFirstMatch(/Mac OS X (\\d+([_\\.\\s]\\d+)*)/i);\n      osVersion = osVersion.replace(/[_\\s]/g, '.');\n    } else if (iosdevice) {\n      osVersion = getFirstMatch(/os (\\d+([_\\s]\\d+)*) like mac os x/i);\n      osVersion = osVersion.replace(/[_\\s]/g, '.');\n    } else if (android) {\n      osVersion = getFirstMatch(/android[ \\/-](\\d+(\\.\\d+)*)/i);\n    } else if (result.webos) {\n      osVersion = getFirstMatch(/(?:web|hpw)os\\/(\\d+(\\.\\d+)*)/i);\n    } else if (result.blackberry) {\n      osVersion = getFirstMatch(/rim\\stablet\\sos\\s(\\d+(\\.\\d+)*)/i);\n    } else if (result.bada) {\n      osVersion = getFirstMatch(/bada\\/(\\d+(\\.\\d+)*)/i);\n    } else if (result.tizen) {\n      osVersion = getFirstMatch(/tizen[\\/\\s](\\d+(\\.\\d+)*)/i);\n    }\n\n    if (osVersion) {\n      result.osversion = osVersion;\n    } // device type extraction\n\n\n    var osMajorVersion = !result.windows && osVersion.split('.')[0];\n\n    if (tablet || nexusTablet || iosdevice == 'ipad' || android && (osMajorVersion == 3 || osMajorVersion >= 4 && !mobile) || result.silk) {\n      result.tablet = t;\n    } else if (mobile || iosdevice == 'iphone' || iosdevice == 'ipod' || android || nexusMobile || result.blackberry || result.webos || result.bada) {\n      result.mobile = t;\n    } // Graded Browser Support\n    // http://developer.yahoo.com/yui/articles/gbs\n\n\n    if (result.msedge || result.msie && result.version >= 10 || result.yandexbrowser && result.version >= 15 || result.vivaldi && result.version >= 1.0 || result.chrome && result.version >= 20 || result.samsungBrowser && result.version >= 4 || result.whale && compareVersions([result.version, '1.0']) === 1 || result.mzbrowser && compareVersions([result.version, '6.0']) === 1 || result.focus && compareVersions([result.version, '1.0']) === 1 || result.firefox && result.version >= 20.0 || result.safari && result.version >= 6 || result.opera && result.version >= 10.0 || result.ios && result.osversion && result.osversion.split(\".\")[0] >= 6 || result.blackberry && result.version >= 10.1 || result.chromium && result.version >= 20) {\n      result.a = t;\n    } else if (result.msie && result.version < 10 || result.chrome && result.version < 20 || result.firefox && result.version < 20.0 || result.safari && result.version < 6 || result.opera && result.version < 10.0 || result.ios && result.osversion && result.osversion.split(\".\")[0] < 6 || result.chromium && result.version < 20) {\n      result.c = t;\n    } else result.x = t;\n\n    return result;\n  }\n\n  var bowser = detect(typeof navigator !== 'undefined' ? navigator.userAgent || '' : '');\n\n  bowser.test = function (browserList) {\n    for (var i = 0; i < browserList.length; ++i) {\n      var browserItem = browserList[i];\n\n      if (typeof browserItem === 'string') {\n        if (browserItem in bowser) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  };\n  /**\r\n   * Get version precisions count\r\n   *\r\n   * @example\r\n   *   getVersionPrecision(\"1.10.3\") // 3\r\n   *\r\n   * @param  {string} version\r\n   * @return {number}\r\n   */\n\n\n  function getVersionPrecision(version) {\n    return version.split(\".\").length;\n  }\n  /**\r\n   * Array::map polyfill\r\n   *\r\n   * @param  {Array} arr\r\n   * @param  {Function} iterator\r\n   * @return {Array}\r\n   */\n\n\n  function map(arr, iterator) {\n    var result = [],\n        i;\n\n    if (Array.prototype.map) {\n      return Array.prototype.map.call(arr, iterator);\n    }\n\n    for (i = 0; i < arr.length; i++) {\n      result.push(iterator(arr[i]));\n    }\n\n    return result;\n  }\n  /**\r\n   * Calculate browser version weight\r\n   *\r\n   * @example\r\n   *   compareVersions(['1.10.2.1',  '1.8.2.1.90'])    // 1\r\n   *   compareVersions(['1.010.2.1', '1.09.2.1.90']);  // 1\r\n   *   compareVersions(['1.10.2.1',  '1.10.2.1']);     // 0\r\n   *   compareVersions(['1.10.2.1',  '1.0800.2']);     // -1\r\n   *\r\n   * @param  {Array<String>} versions versions to compare\r\n   * @return {Number} comparison result\r\n   */\n\n\n  function compareVersions(versions) {\n    // 1) get common precision for both versions, for example for \"10.0\" and \"9\" it should be 2\n    var precision = Math.max(getVersionPrecision(versions[0]), getVersionPrecision(versions[1]));\n    var chunks = map(versions, function (version) {\n      var delta = precision - getVersionPrecision(version); // 2) \"9\" -> \"9.0\" (for precision = 2)\n\n      version = version + new Array(delta + 1).join(\".0\"); // 3) \"9.0\" -> [\"000000000\"\", \"000000009\"]\n\n      return map(version.split(\".\"), function (chunk) {\n        return new Array(20 - chunk.length).join(\"0\") + chunk;\n      }).reverse();\n    }); // iterate in reverse order by reversed chunks array\n\n    while (--precision >= 0) {\n      // 4) compare: \"000000009\" > \"000000010\" = false (but \"9\" > \"10\" = true)\n      if (chunks[0][precision] > chunks[1][precision]) {\n        return 1;\n      } else if (chunks[0][precision] === chunks[1][precision]) {\n        if (precision === 0) {\n          // all version chunks are same\n          return 0;\n        }\n      } else {\n        return -1;\n      }\n    }\n  }\n  /**\r\n   * Check if browser is unsupported\r\n   *\r\n   * @example\r\n   *   bowser.isUnsupportedBrowser({\r\n   *     msie: \"10\",\r\n   *     firefox: \"23\",\r\n   *     chrome: \"29\",\r\n   *     safari: \"5.1\",\r\n   *     opera: \"16\",\r\n   *     phantom: \"534\"\r\n   *   });\r\n   *\r\n   * @param  {Object}  minVersions map of minimal version to browser\r\n   * @param  {Boolean} [strictMode = false] flag to return false if browser wasn't found in map\r\n   * @param  {String}  [ua] user agent string\r\n   * @return {Boolean}\r\n   */\n\n\n  function isUnsupportedBrowser(minVersions, strictMode, ua) {\n    var _bowser = bowser; // make strictMode param optional with ua param usage\n\n    if (typeof strictMode === 'string') {\n      ua = strictMode;\n      strictMode = void 0;\n    }\n\n    if (strictMode === void 0) {\n      strictMode = false;\n    }\n\n    if (ua) {\n      _bowser = detect(ua);\n    }\n\n    var version = \"\" + _bowser.version;\n\n    for (var browser in minVersions) {\n      if (minVersions.hasOwnProperty(browser)) {\n        if (_bowser[browser]) {\n          if (typeof minVersions[browser] !== 'string') {\n            throw new Error('Browser version in the minVersion map should be a string: ' + browser + ': ' + String(minVersions));\n          } // browser version and min supported version.\n\n\n          return compareVersions([version, minVersions[browser]]) < 0;\n        }\n      }\n    }\n\n    return strictMode; // not found\n  }\n  /**\r\n   * Check if browser is supported\r\n   *\r\n   * @param  {Object} minVersions map of minimal version to browser\r\n   * @param  {Boolean} [strictMode = false] flag to return false if browser wasn't found in map\r\n   * @param  {String}  [ua] user agent string\r\n   * @return {Boolean}\r\n   */\n\n\n  function check(minVersions, strictMode, ua) {\n    return !isUnsupportedBrowser(minVersions, strictMode, ua);\n  }\n\n  bowser.isUnsupportedBrowser = isUnsupportedBrowser;\n  bowser.compareVersions = compareVersions;\n  bowser.check = check;\n  /*\r\n   * Set our detect method to the main bowser object so we can\r\n   * reuse it to test other user agents.\r\n   * This is needed to implement future tests.\r\n   */\n\n  bowser._detect = detect;\n  /*\r\n   * Set our detect public method to the main bowser object\r\n   * This is needed to implement bowser in server side\r\n   */\n\n  bowser.detect = detect;\n  return bowser;\n});","map":{"version":3,"sources":["C:/Users/prana/OneDrive/Desktop/Misc/officialwebsite/node_modules/bowser/src/bowser.js"],"names":["root","name","definition","module","exports","define","amd","t","detect","ua","getFirstMatch","regex","match","length","getSecondMatch","iosdevice","toLowerCase","likeAndroid","test","android","nexusMobile","nexusTablet","chromeos","silk","sailfish","tizen","webos","windowsphone","samsungBrowser","windows","mac","linux","edgeVersion","versionIdentifier","tablet","mobile","xbox","result","opera","version","whale","mzbrowser","coast","focus","yandexbrowser","ucbrowser","maxthon","epiphany","puffin","sleipnir","kMeleon","osname","msedge","msie","chromeBook","chrome","vivaldi","seamonkey","firefox","firefoxos","phantom","slimer","blackberry","touchpad","bada","qupzilla","chromium","safari","googlebot","blink","webkit","gecko","ios","getWindowsVersion","s","undefined","osVersion","replace","osversion","osMajorVersion","split","compareVersions","a","c","x","bowser","navigator","userAgent","browserList","i","browserItem","getVersionPrecision","map","arr","iterator","Array","prototype","call","push","versions","precision","Math","max","chunks","delta","join","chunk","reverse","isUnsupportedBrowser","minVersions","strictMode","_bowser","browser","hasOwnProperty","Error","String","check","_detect"],"mappings":"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","sourcesContent":["/*!\r\n * Bowser - a browser detector\r\n * https://github.com/ded/bowser\r\n * MIT License | (c) Dustin Diaz 2015\r\n */\r\n\r\n!function (root, name, definition) {\r\n  if (typeof module != 'undefined' && module.exports) module.exports = definition()\r\n  else if (typeof define == 'function' && define.amd) define(name, definition)\r\n  else root[name] = definition()\r\n}(this, 'bowser', function () {\r\n  /**\r\n    * See useragents.js for examples of navigator.userAgent\r\n    */\r\n\r\n  var t = true\r\n\r\n  function detect(ua) {\r\n\r\n    function getFirstMatch(regex) {\r\n      var match = ua.match(regex);\r\n      return (match && match.length > 1 && match[1]) || '';\r\n    }\r\n\r\n    function getSecondMatch(regex) {\r\n      var match = ua.match(regex);\r\n      return (match && match.length > 1 && match[2]) || '';\r\n    }\r\n\r\n    var iosdevice = getFirstMatch(/(ipod|iphone|ipad)/i).toLowerCase()\r\n      , likeAndroid = /like android/i.test(ua)\r\n      , android = !likeAndroid && /android/i.test(ua)\r\n      , nexusMobile = /nexus\\s*[0-6]\\s*/i.test(ua)\r\n      , nexusTablet = !nexusMobile && /nexus\\s*[0-9]+/i.test(ua)\r\n      , chromeos = /CrOS/.test(ua)\r\n      , silk = /silk/i.test(ua)\r\n      , sailfish = /sailfish/i.test(ua)\r\n      , tizen = /tizen/i.test(ua)\r\n      , webos = /(web|hpw)(o|0)s/i.test(ua)\r\n      , windowsphone = /windows phone/i.test(ua)\r\n      , samsungBrowser = /SamsungBrowser/i.test(ua)\r\n      , windows = !windowsphone && /windows/i.test(ua)\r\n      , mac = !iosdevice && !silk && /macintosh/i.test(ua)\r\n      , linux = !android && !sailfish && !tizen && !webos && /linux/i.test(ua)\r\n      , edgeVersion = getSecondMatch(/edg([ea]|ios)\\/(\\d+(\\.\\d+)?)/i)\r\n      , versionIdentifier = getFirstMatch(/version\\/(\\d+(\\.\\d+)?)/i)\r\n      , tablet = /tablet/i.test(ua) && !/tablet pc/i.test(ua)\r\n      , mobile = !tablet && /[^-]mobi/i.test(ua)\r\n      , xbox = /xbox/i.test(ua)\r\n      , result\r\n\r\n    if (/opera/i.test(ua)) {\r\n      //  an old Opera\r\n      result = {\r\n        name: 'Opera'\r\n      , opera: t\r\n      , version: versionIdentifier || getFirstMatch(/(?:opera|opr|opios)[\\s\\/](\\d+(\\.\\d+)?)/i)\r\n      }\r\n    } else if (/opr\\/|opios/i.test(ua)) {\r\n      // a new Opera\r\n      result = {\r\n        name: 'Opera'\r\n        , opera: t\r\n        , version: getFirstMatch(/(?:opr|opios)[\\s\\/](\\d+(\\.\\d+)?)/i) || versionIdentifier\r\n      }\r\n    }\r\n    else if (/SamsungBrowser/i.test(ua)) {\r\n      result = {\r\n        name: 'Samsung Internet for Android'\r\n        , samsungBrowser: t\r\n        , version: versionIdentifier || getFirstMatch(/(?:SamsungBrowser)[\\s\\/](\\d+(\\.\\d+)?)/i)\r\n      }\r\n    }\r\n    else if (/Whale/i.test(ua)) {\r\n      result = {\r\n        name: 'NAVER Whale browser'\r\n        , whale: t\r\n        , version: getFirstMatch(/(?:whale)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\r\n      }\r\n    }\r\n    else if (/MZBrowser/i.test(ua)) {\r\n      result = {\r\n        name: 'MZ Browser'\r\n        , mzbrowser: t\r\n        , version: getFirstMatch(/(?:MZBrowser)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\r\n      }\r\n    }\r\n    else if (/coast/i.test(ua)) {\r\n      result = {\r\n        name: 'Opera Coast'\r\n        , coast: t\r\n        , version: versionIdentifier || getFirstMatch(/(?:coast)[\\s\\/](\\d+(\\.\\d+)?)/i)\r\n      }\r\n    }\r\n    else if (/focus/i.test(ua)) {\r\n      result = {\r\n        name: 'Focus'\r\n        , focus: t\r\n        , version: getFirstMatch(/(?:focus)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\r\n      }\r\n    }\r\n    else if (/yabrowser/i.test(ua)) {\r\n      result = {\r\n        name: 'Yandex Browser'\r\n      , yandexbrowser: t\r\n      , version: versionIdentifier || getFirstMatch(/(?:yabrowser)[\\s\\/](\\d+(\\.\\d+)?)/i)\r\n      }\r\n    }\r\n    else if (/ucbrowser/i.test(ua)) {\r\n      result = {\r\n          name: 'UC Browser'\r\n        , ucbrowser: t\r\n        , version: getFirstMatch(/(?:ucbrowser)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\r\n      }\r\n    }\r\n    else if (/mxios/i.test(ua)) {\r\n      result = {\r\n        name: 'Maxthon'\r\n        , maxthon: t\r\n        , version: getFirstMatch(/(?:mxios)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\r\n      }\r\n    }\r\n    else if (/epiphany/i.test(ua)) {\r\n      result = {\r\n        name: 'Epiphany'\r\n        , epiphany: t\r\n        , version: getFirstMatch(/(?:epiphany)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\r\n      }\r\n    }\r\n    else if (/puffin/i.test(ua)) {\r\n      result = {\r\n        name: 'Puffin'\r\n        , puffin: t\r\n        , version: getFirstMatch(/(?:puffin)[\\s\\/](\\d+(?:\\.\\d+)?)/i)\r\n      }\r\n    }\r\n    else if (/sleipnir/i.test(ua)) {\r\n      result = {\r\n        name: 'Sleipnir'\r\n        , sleipnir: t\r\n        , version: getFirstMatch(/(?:sleipnir)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\r\n      }\r\n    }\r\n    else if (/k-meleon/i.test(ua)) {\r\n      result = {\r\n        name: 'K-Meleon'\r\n        , kMeleon: t\r\n        , version: getFirstMatch(/(?:k-meleon)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\r\n      }\r\n    }\r\n    else if (windowsphone) {\r\n      result = {\r\n        name: 'Windows Phone'\r\n      , osname: 'Windows Phone'\r\n      , windowsphone: t\r\n      }\r\n      if (edgeVersion) {\r\n        result.msedge = t\r\n        result.version = edgeVersion\r\n      }\r\n      else {\r\n        result.msie = t\r\n        result.version = getFirstMatch(/iemobile\\/(\\d+(\\.\\d+)?)/i)\r\n      }\r\n    }\r\n    else if (/msie|trident/i.test(ua)) {\r\n      result = {\r\n        name: 'Internet Explorer'\r\n      , msie: t\r\n      , version: getFirstMatch(/(?:msie |rv:)(\\d+(\\.\\d+)?)/i)\r\n      }\r\n    } else if (chromeos) {\r\n      result = {\r\n        name: 'Chrome'\r\n      , osname: 'Chrome OS'\r\n      , chromeos: t\r\n      , chromeBook: t\r\n      , chrome: t\r\n      , version: getFirstMatch(/(?:chrome|crios|crmo)\\/(\\d+(\\.\\d+)?)/i)\r\n      }\r\n    } else if (/edg([ea]|ios)/i.test(ua)) {\r\n      result = {\r\n        name: 'Microsoft Edge'\r\n      , msedge: t\r\n      , version: edgeVersion\r\n      }\r\n    }\r\n    else if (/vivaldi/i.test(ua)) {\r\n      result = {\r\n        name: 'Vivaldi'\r\n        , vivaldi: t\r\n        , version: getFirstMatch(/vivaldi\\/(\\d+(\\.\\d+)?)/i) || versionIdentifier\r\n      }\r\n    }\r\n    else if (sailfish) {\r\n      result = {\r\n        name: 'Sailfish'\r\n      , osname: 'Sailfish OS'\r\n      , sailfish: t\r\n      , version: getFirstMatch(/sailfish\\s?browser\\/(\\d+(\\.\\d+)?)/i)\r\n      }\r\n    }\r\n    else if (/seamonkey\\//i.test(ua)) {\r\n      result = {\r\n        name: 'SeaMonkey'\r\n      , seamonkey: t\r\n      , version: getFirstMatch(/seamonkey\\/(\\d+(\\.\\d+)?)/i)\r\n      }\r\n    }\r\n    else if (/firefox|iceweasel|fxios/i.test(ua)) {\r\n      result = {\r\n        name: 'Firefox'\r\n      , firefox: t\r\n      , version: getFirstMatch(/(?:firefox|iceweasel|fxios)[ \\/](\\d+(\\.\\d+)?)/i)\r\n      }\r\n      if (/\\((mobile|tablet);[^\\)]*rv:[\\d\\.]+\\)/i.test(ua)) {\r\n        result.firefoxos = t\r\n        result.osname = 'Firefox OS'\r\n      }\r\n    }\r\n    else if (silk) {\r\n      result =  {\r\n        name: 'Amazon Silk'\r\n      , silk: t\r\n      , version : getFirstMatch(/silk\\/(\\d+(\\.\\d+)?)/i)\r\n      }\r\n    }\r\n    else if (/phantom/i.test(ua)) {\r\n      result = {\r\n        name: 'PhantomJS'\r\n      , phantom: t\r\n      , version: getFirstMatch(/phantomjs\\/(\\d+(\\.\\d+)?)/i)\r\n      }\r\n    }\r\n    else if (/slimerjs/i.test(ua)) {\r\n      result = {\r\n        name: 'SlimerJS'\r\n        , slimer: t\r\n        , version: getFirstMatch(/slimerjs\\/(\\d+(\\.\\d+)?)/i)\r\n      }\r\n    }\r\n    else if (/blackberry|\\bbb\\d+/i.test(ua) || /rim\\stablet/i.test(ua)) {\r\n      result = {\r\n        name: 'BlackBerry'\r\n      , osname: 'BlackBerry OS'\r\n      , blackberry: t\r\n      , version: versionIdentifier || getFirstMatch(/blackberry[\\d]+\\/(\\d+(\\.\\d+)?)/i)\r\n      }\r\n    }\r\n    else if (webos) {\r\n      result = {\r\n        name: 'WebOS'\r\n      , osname: 'WebOS'\r\n      , webos: t\r\n      , version: versionIdentifier || getFirstMatch(/w(?:eb)?osbrowser\\/(\\d+(\\.\\d+)?)/i)\r\n      };\r\n      /touchpad\\//i.test(ua) && (result.touchpad = t)\r\n    }\r\n    else if (/bada/i.test(ua)) {\r\n      result = {\r\n        name: 'Bada'\r\n      , osname: 'Bada'\r\n      , bada: t\r\n      , version: getFirstMatch(/dolfin\\/(\\d+(\\.\\d+)?)/i)\r\n      };\r\n    }\r\n    else if (tizen) {\r\n      result = {\r\n        name: 'Tizen'\r\n      , osname: 'Tizen'\r\n      , tizen: t\r\n      , version: getFirstMatch(/(?:tizen\\s?)?browser\\/(\\d+(\\.\\d+)?)/i) || versionIdentifier\r\n      };\r\n    }\r\n    else if (/qupzilla/i.test(ua)) {\r\n      result = {\r\n        name: 'QupZilla'\r\n        , qupzilla: t\r\n        , version: getFirstMatch(/(?:qupzilla)[\\s\\/](\\d+(?:\\.\\d+)+)/i) || versionIdentifier\r\n      }\r\n    }\r\n    else if (/chromium/i.test(ua)) {\r\n      result = {\r\n        name: 'Chromium'\r\n        , chromium: t\r\n        , version: getFirstMatch(/(?:chromium)[\\s\\/](\\d+(?:\\.\\d+)?)/i) || versionIdentifier\r\n      }\r\n    }\r\n    else if (/chrome|crios|crmo/i.test(ua)) {\r\n      result = {\r\n        name: 'Chrome'\r\n        , chrome: t\r\n        , version: getFirstMatch(/(?:chrome|crios|crmo)\\/(\\d+(\\.\\d+)?)/i)\r\n      }\r\n    }\r\n    else if (android) {\r\n      result = {\r\n        name: 'Android'\r\n        , version: versionIdentifier\r\n      }\r\n    }\r\n    else if (/safari|applewebkit/i.test(ua)) {\r\n      result = {\r\n        name: 'Safari'\r\n      , safari: t\r\n      }\r\n      if (versionIdentifier) {\r\n        result.version = versionIdentifier\r\n      }\r\n    }\r\n    else if (iosdevice) {\r\n      result = {\r\n        name : iosdevice == 'iphone' ? 'iPhone' : iosdevice == 'ipad' ? 'iPad' : 'iPod'\r\n      }\r\n      // WTF: version is not part of user agent in web apps\r\n      if (versionIdentifier) {\r\n        result.version = versionIdentifier\r\n      }\r\n    }\r\n    else if(/googlebot/i.test(ua)) {\r\n      result = {\r\n        name: 'Googlebot'\r\n      , googlebot: t\r\n      , version: getFirstMatch(/googlebot\\/(\\d+(\\.\\d+))/i) || versionIdentifier\r\n      }\r\n    }\r\n    else {\r\n      result = {\r\n        name: getFirstMatch(/^(.*)\\/(.*) /),\r\n        version: getSecondMatch(/^(.*)\\/(.*) /)\r\n     };\r\n   }\r\n\r\n    // set webkit or gecko flag for browsers based on these engines\r\n    if (!result.msedge && /(apple)?webkit/i.test(ua)) {\r\n      if (/(apple)?webkit\\/537\\.36/i.test(ua)) {\r\n        result.name = result.name || \"Blink\"\r\n        result.blink = t\r\n      } else {\r\n        result.name = result.name || \"Webkit\"\r\n        result.webkit = t\r\n      }\r\n      if (!result.version && versionIdentifier) {\r\n        result.version = versionIdentifier\r\n      }\r\n    } else if (!result.opera && /gecko\\//i.test(ua)) {\r\n      result.name = result.name || \"Gecko\"\r\n      result.gecko = t\r\n      result.version = result.version || getFirstMatch(/gecko\\/(\\d+(\\.\\d+)?)/i)\r\n    }\r\n\r\n    // set OS flags for platforms that have multiple browsers\r\n    if (!result.windowsphone && (android || result.silk)) {\r\n      result.android = t\r\n      result.osname = 'Android'\r\n    } else if (!result.windowsphone && iosdevice) {\r\n      result[iosdevice] = t\r\n      result.ios = t\r\n      result.osname = 'iOS'\r\n    } else if (mac) {\r\n      result.mac = t\r\n      result.osname = 'macOS'\r\n    } else if (xbox) {\r\n      result.xbox = t\r\n      result.osname = 'Xbox'\r\n    } else if (windows) {\r\n      result.windows = t\r\n      result.osname = 'Windows'\r\n    } else if (linux) {\r\n      result.linux = t\r\n      result.osname = 'Linux'\r\n    }\r\n\r\n    function getWindowsVersion (s) {\r\n      switch (s) {\r\n        case 'NT': return 'NT'\r\n        case 'XP': return 'XP'\r\n        case 'NT 5.0': return '2000'\r\n        case 'NT 5.1': return 'XP'\r\n        case 'NT 5.2': return '2003'\r\n        case 'NT 6.0': return 'Vista'\r\n        case 'NT 6.1': return '7'\r\n        case 'NT 6.2': return '8'\r\n        case 'NT 6.3': return '8.1'\r\n        case 'NT 10.0': return '10'\r\n        default: return undefined\r\n      }\r\n    }\r\n\r\n    // OS version extraction\r\n    var osVersion = '';\r\n    if (result.windows) {\r\n      osVersion = getWindowsVersion(getFirstMatch(/Windows ((NT|XP)( \\d\\d?.\\d)?)/i))\r\n    } else if (result.windowsphone) {\r\n      osVersion = getFirstMatch(/windows phone (?:os)?\\s?(\\d+(\\.\\d+)*)/i);\r\n    } else if (result.mac) {\r\n      osVersion = getFirstMatch(/Mac OS X (\\d+([_\\.\\s]\\d+)*)/i);\r\n      osVersion = osVersion.replace(/[_\\s]/g, '.');\r\n    } else if (iosdevice) {\r\n      osVersion = getFirstMatch(/os (\\d+([_\\s]\\d+)*) like mac os x/i);\r\n      osVersion = osVersion.replace(/[_\\s]/g, '.');\r\n    } else if (android) {\r\n      osVersion = getFirstMatch(/android[ \\/-](\\d+(\\.\\d+)*)/i);\r\n    } else if (result.webos) {\r\n      osVersion = getFirstMatch(/(?:web|hpw)os\\/(\\d+(\\.\\d+)*)/i);\r\n    } else if (result.blackberry) {\r\n      osVersion = getFirstMatch(/rim\\stablet\\sos\\s(\\d+(\\.\\d+)*)/i);\r\n    } else if (result.bada) {\r\n      osVersion = getFirstMatch(/bada\\/(\\d+(\\.\\d+)*)/i);\r\n    } else if (result.tizen) {\r\n      osVersion = getFirstMatch(/tizen[\\/\\s](\\d+(\\.\\d+)*)/i);\r\n    }\r\n    if (osVersion) {\r\n      result.osversion = osVersion;\r\n    }\r\n\r\n    // device type extraction\r\n    var osMajorVersion = !result.windows && osVersion.split('.')[0];\r\n    if (\r\n         tablet\r\n      || nexusTablet\r\n      || iosdevice == 'ipad'\r\n      || (android && (osMajorVersion == 3 || (osMajorVersion >= 4 && !mobile)))\r\n      || result.silk\r\n    ) {\r\n      result.tablet = t\r\n    } else if (\r\n         mobile\r\n      || iosdevice == 'iphone'\r\n      || iosdevice == 'ipod'\r\n      || android\r\n      || nexusMobile\r\n      || result.blackberry\r\n      || result.webos\r\n      || result.bada\r\n    ) {\r\n      result.mobile = t\r\n    }\r\n\r\n    // Graded Browser Support\r\n    // http://developer.yahoo.com/yui/articles/gbs\r\n    if (result.msedge ||\r\n        (result.msie && result.version >= 10) ||\r\n        (result.yandexbrowser && result.version >= 15) ||\r\n\t\t    (result.vivaldi && result.version >= 1.0) ||\r\n        (result.chrome && result.version >= 20) ||\r\n        (result.samsungBrowser && result.version >= 4) ||\r\n        (result.whale && compareVersions([result.version, '1.0']) === 1) ||\r\n        (result.mzbrowser && compareVersions([result.version, '6.0']) === 1) ||\r\n        (result.focus && compareVersions([result.version, '1.0']) === 1) ||\r\n        (result.firefox && result.version >= 20.0) ||\r\n        (result.safari && result.version >= 6) ||\r\n        (result.opera && result.version >= 10.0) ||\r\n        (result.ios && result.osversion && result.osversion.split(\".\")[0] >= 6) ||\r\n        (result.blackberry && result.version >= 10.1)\r\n        || (result.chromium && result.version >= 20)\r\n        ) {\r\n      result.a = t;\r\n    }\r\n    else if ((result.msie && result.version < 10) ||\r\n        (result.chrome && result.version < 20) ||\r\n        (result.firefox && result.version < 20.0) ||\r\n        (result.safari && result.version < 6) ||\r\n        (result.opera && result.version < 10.0) ||\r\n        (result.ios && result.osversion && result.osversion.split(\".\")[0] < 6)\r\n        || (result.chromium && result.version < 20)\r\n        ) {\r\n      result.c = t\r\n    } else result.x = t\r\n\r\n    return result\r\n  }\r\n\r\n  var bowser = detect(typeof navigator !== 'undefined' ? navigator.userAgent || '' : '')\r\n\r\n  bowser.test = function (browserList) {\r\n    for (var i = 0; i < browserList.length; ++i) {\r\n      var browserItem = browserList[i];\r\n      if (typeof browserItem=== 'string') {\r\n        if (browserItem in bowser) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Get version precisions count\r\n   *\r\n   * @example\r\n   *   getVersionPrecision(\"1.10.3\") // 3\r\n   *\r\n   * @param  {string} version\r\n   * @return {number}\r\n   */\r\n  function getVersionPrecision(version) {\r\n    return version.split(\".\").length;\r\n  }\r\n\r\n  /**\r\n   * Array::map polyfill\r\n   *\r\n   * @param  {Array} arr\r\n   * @param  {Function} iterator\r\n   * @return {Array}\r\n   */\r\n  function map(arr, iterator) {\r\n    var result = [], i;\r\n    if (Array.prototype.map) {\r\n      return Array.prototype.map.call(arr, iterator);\r\n    }\r\n    for (i = 0; i < arr.length; i++) {\r\n      result.push(iterator(arr[i]));\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Calculate browser version weight\r\n   *\r\n   * @example\r\n   *   compareVersions(['1.10.2.1',  '1.8.2.1.90'])    // 1\r\n   *   compareVersions(['1.010.2.1', '1.09.2.1.90']);  // 1\r\n   *   compareVersions(['1.10.2.1',  '1.10.2.1']);     // 0\r\n   *   compareVersions(['1.10.2.1',  '1.0800.2']);     // -1\r\n   *\r\n   * @param  {Array<String>} versions versions to compare\r\n   * @return {Number} comparison result\r\n   */\r\n  function compareVersions(versions) {\r\n    // 1) get common precision for both versions, for example for \"10.0\" and \"9\" it should be 2\r\n    var precision = Math.max(getVersionPrecision(versions[0]), getVersionPrecision(versions[1]));\r\n    var chunks = map(versions, function (version) {\r\n      var delta = precision - getVersionPrecision(version);\r\n\r\n      // 2) \"9\" -> \"9.0\" (for precision = 2)\r\n      version = version + new Array(delta + 1).join(\".0\");\r\n\r\n      // 3) \"9.0\" -> [\"000000000\"\", \"000000009\"]\r\n      return map(version.split(\".\"), function (chunk) {\r\n        return new Array(20 - chunk.length).join(\"0\") + chunk;\r\n      }).reverse();\r\n    });\r\n\r\n    // iterate in reverse order by reversed chunks array\r\n    while (--precision >= 0) {\r\n      // 4) compare: \"000000009\" > \"000000010\" = false (but \"9\" > \"10\" = true)\r\n      if (chunks[0][precision] > chunks[1][precision]) {\r\n        return 1;\r\n      }\r\n      else if (chunks[0][precision] === chunks[1][precision]) {\r\n        if (precision === 0) {\r\n          // all version chunks are same\r\n          return 0;\r\n        }\r\n      }\r\n      else {\r\n        return -1;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check if browser is unsupported\r\n   *\r\n   * @example\r\n   *   bowser.isUnsupportedBrowser({\r\n   *     msie: \"10\",\r\n   *     firefox: \"23\",\r\n   *     chrome: \"29\",\r\n   *     safari: \"5.1\",\r\n   *     opera: \"16\",\r\n   *     phantom: \"534\"\r\n   *   });\r\n   *\r\n   * @param  {Object}  minVersions map of minimal version to browser\r\n   * @param  {Boolean} [strictMode = false] flag to return false if browser wasn't found in map\r\n   * @param  {String}  [ua] user agent string\r\n   * @return {Boolean}\r\n   */\r\n  function isUnsupportedBrowser(minVersions, strictMode, ua) {\r\n    var _bowser = bowser;\r\n\r\n    // make strictMode param optional with ua param usage\r\n    if (typeof strictMode === 'string') {\r\n      ua = strictMode;\r\n      strictMode = void(0);\r\n    }\r\n\r\n    if (strictMode === void(0)) {\r\n      strictMode = false;\r\n    }\r\n    if (ua) {\r\n      _bowser = detect(ua);\r\n    }\r\n\r\n    var version = \"\" + _bowser.version;\r\n    for (var browser in minVersions) {\r\n      if (minVersions.hasOwnProperty(browser)) {\r\n        if (_bowser[browser]) {\r\n          if (typeof minVersions[browser] !== 'string') {\r\n            throw new Error('Browser version in the minVersion map should be a string: ' + browser + ': ' + String(minVersions));\r\n          }\r\n\r\n          // browser version and min supported version.\r\n          return compareVersions([version, minVersions[browser]]) < 0;\r\n        }\r\n      }\r\n    }\r\n\r\n    return strictMode; // not found\r\n  }\r\n\r\n  /**\r\n   * Check if browser is supported\r\n   *\r\n   * @param  {Object} minVersions map of minimal version to browser\r\n   * @param  {Boolean} [strictMode = false] flag to return false if browser wasn't found in map\r\n   * @param  {String}  [ua] user agent string\r\n   * @return {Boolean}\r\n   */\r\n  function check(minVersions, strictMode, ua) {\r\n    return !isUnsupportedBrowser(minVersions, strictMode, ua);\r\n  }\r\n\r\n  bowser.isUnsupportedBrowser = isUnsupportedBrowser;\r\n  bowser.compareVersions = compareVersions;\r\n  bowser.check = check;\r\n\r\n  /*\r\n   * Set our detect method to the main bowser object so we can\r\n   * reuse it to test other user agents.\r\n   * This is needed to implement future tests.\r\n   */\r\n  bowser._detect = detect;\r\n\r\n  /*\r\n   * Set our detect public method to the main bowser object\r\n   * This is needed to implement bowser in server side\r\n   */\r\n  bowser.detect = detect;\r\n  return bowser\r\n});\r\n"]},"metadata":{},"sourceType":"script"}