{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/prana/OneDrive/Desktop/Misc/officialwebsite/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _createForOfIteratorHelper from \"C:/Users/prana/OneDrive/Desktop/Misc/officialwebsite/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _asyncToGenerator from \"C:/Users/prana/OneDrive/Desktop/Misc/officialwebsite/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"C:/Users/prana/OneDrive/Desktop/Misc/officialwebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/prana/OneDrive/Desktop/Misc/officialwebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/prana/OneDrive/Desktop/Misc/officialwebsite/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/prana/OneDrive/Desktop/Misc/officialwebsite/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { circleBounce, circleBounceDataFromParticle } from \"../../../Utils/Utils\";\nimport { clamp, getDistance } from \"../../../Utils/NumberUtils\";\nimport { ParticlesInteractorBase } from \"../../../Core/Utils/ParticlesInteractorBase\";\nfunction bounce(p1, p2) {\n  circleBounce(circleBounceDataFromParticle(p1), circleBounceDataFromParticle(p2));\n}\nfunction destroy(p1, p2) {\n  if (!p1.unbreakable && !p2.unbreakable) {\n    bounce(p1, p2);\n  }\n  if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n    p1.destroy();\n  } else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n    p2.destroy();\n  } else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n    if (p1.getRadius() >= p2.getRadius()) {\n      p2.destroy();\n    } else {\n      p1.destroy();\n    }\n  }\n}\nexport var Collider = /*#__PURE__*/function (_ParticlesInteractorB) {\n  _inherits(Collider, _ParticlesInteractorB);\n  var _super = _createSuper(Collider);\n  function Collider(container) {\n    _classCallCheck(this, Collider);\n    return _super.call(this, container);\n  }\n  _createClass(Collider, [{\n    key: \"isEnabled\",\n    value: function isEnabled(particle) {\n      return particle.options.collisions.enable;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {}\n  }, {\n    key: \"interact\",\n    value: function () {\n      var _interact = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(p1) {\n        var container, pos1, radius1, query, _iterator, _step, p2, pos2, dist, radius2, distP;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              container = this.container, pos1 = p1.getPosition(), radius1 = p1.getRadius(), query = container.particles.quadTree.queryCircle(pos1, radius1 * 2);\n              _iterator = _createForOfIteratorHelper(query);\n              _context.prev = 2;\n              _iterator.s();\n            case 4:\n              if ((_step = _iterator.n()).done) {\n                _context.next = 15;\n                break;\n              }\n              p2 = _step.value;\n              if (!(p1 === p2 || !p2.options.collisions.enable || p1.options.collisions.mode !== p2.options.collisions.mode || p2.destroyed || p2.spawning)) {\n                _context.next = 8;\n                break;\n              }\n              return _context.abrupt(\"continue\", 13);\n            case 8:\n              pos2 = p2.getPosition();\n              if (!(Math.round(pos1.z) !== Math.round(pos2.z))) {\n                _context.next = 11;\n                break;\n              }\n              return _context.abrupt(\"continue\", 13);\n            case 11:\n              dist = getDistance(pos1, pos2), radius2 = p2.getRadius(), distP = radius1 + radius2;\n              if (dist <= distP) {\n                this.resolveCollision(p1, p2);\n              }\n            case 13:\n              _context.next = 4;\n              break;\n            case 15:\n              _context.next = 20;\n              break;\n            case 17:\n              _context.prev = 17;\n              _context.t0 = _context[\"catch\"](2);\n              _iterator.e(_context.t0);\n            case 20:\n              _context.prev = 20;\n              _iterator.f();\n              return _context.finish(20);\n            case 23:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[2, 17, 20, 23]]);\n      }));\n      function interact(_x) {\n        return _interact.apply(this, arguments);\n      }\n      return interact;\n    }()\n  }, {\n    key: \"resolveCollision\",\n    value: function resolveCollision(p1, p2) {\n      switch (p1.options.collisions.mode) {\n        case \"absorb\":\n          this.absorb(p1, p2);\n          break;\n        case \"bounce\":\n          bounce(p1, p2);\n          break;\n        case \"destroy\":\n          destroy(p1, p2);\n          break;\n      }\n    }\n  }, {\n    key: \"absorb\",\n    value: function absorb(p1, p2) {\n      var container = this.container,\n        fps = container.fpsLimit / 1000;\n      if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n        p1.destroy();\n      } else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n        p2.destroy();\n      } else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n        if (p1.getRadius() >= p2.getRadius()) {\n          var factor = clamp(p1.getRadius() / p2.getRadius(), 0, p2.getRadius()) * fps;\n          p1.size.value += factor;\n          p2.size.value -= factor;\n          if (p2.getRadius() <= container.retina.pixelRatio) {\n            p2.size.value = 0;\n            p2.destroy();\n          }\n        } else {\n          var _factor = clamp(p2.getRadius() / p1.getRadius(), 0, p1.getRadius()) * fps;\n          p1.size.value -= _factor;\n          p2.size.value += _factor;\n          if (p1.getRadius() <= container.retina.pixelRatio) {\n            p1.size.value = 0;\n            p1.destroy();\n          }\n        }\n      }\n    }\n  }]);\n  return Collider;\n}(ParticlesInteractorBase);","map":{"version":3,"names":["circleBounce","circleBounceDataFromParticle","clamp","getDistance","ParticlesInteractorBase","bounce","p1","p2","destroy","unbreakable","getRadius","undefined","Collider","_ParticlesInteractorB","_inherits","_super","_createSuper","container","_classCallCheck","call","_createClass","key","value","isEnabled","particle","options","collisions","enable","reset","_interact","_asyncToGenerator","_regeneratorRuntime","mark","_callee","pos1","radius1","query","_iterator","_step","pos2","dist","radius2","distP","wrap","_callee$","_context","prev","next","getPosition","particles","quadTree","queryCircle","_createForOfIteratorHelper","s","n","done","mode","destroyed","spawning","abrupt","Math","round","z","resolveCollision","t0","e","f","finish","stop","interact","_x","apply","arguments","absorb","fps","fpsLimit","factor","size","retina","pixelRatio"],"sources":["C:/Users/prana/OneDrive/Desktop/Misc/officialwebsite/node_modules/tsparticles/esm/Interactions/Particles/Collisions/Collider.js"],"sourcesContent":["import { circleBounce, circleBounceDataFromParticle } from \"../../../Utils/Utils\";\nimport { clamp, getDistance } from \"../../../Utils/NumberUtils\";\nimport { ParticlesInteractorBase } from \"../../../Core/Utils/ParticlesInteractorBase\";\nfunction bounce(p1, p2) {\n    circleBounce(circleBounceDataFromParticle(p1), circleBounceDataFromParticle(p2));\n}\nfunction destroy(p1, p2) {\n    if (!p1.unbreakable && !p2.unbreakable) {\n        bounce(p1, p2);\n    }\n    if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n        p1.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n        p2.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n        if (p1.getRadius() >= p2.getRadius()) {\n            p2.destroy();\n        }\n        else {\n            p1.destroy();\n        }\n    }\n}\nexport class Collider extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    isEnabled(particle) {\n        return particle.options.collisions.enable;\n    }\n    reset() {\n    }\n    async interact(p1) {\n        const container = this.container, pos1 = p1.getPosition(), radius1 = p1.getRadius(), query = container.particles.quadTree.queryCircle(pos1, radius1 * 2);\n        for (const p2 of query) {\n            if (p1 === p2 ||\n                !p2.options.collisions.enable ||\n                p1.options.collisions.mode !== p2.options.collisions.mode ||\n                p2.destroyed ||\n                p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            if (Math.round(pos1.z) !== Math.round(pos2.z)) {\n                continue;\n            }\n            const dist = getDistance(pos1, pos2), radius2 = p2.getRadius(), distP = radius1 + radius2;\n            if (dist <= distP) {\n                this.resolveCollision(p1, p2);\n            }\n        }\n    }\n    resolveCollision(p1, p2) {\n        switch (p1.options.collisions.mode) {\n            case \"absorb\":\n                this.absorb(p1, p2);\n                break;\n            case \"bounce\":\n                bounce(p1, p2);\n                break;\n            case \"destroy\":\n                destroy(p1, p2);\n                break;\n        }\n    }\n    absorb(p1, p2) {\n        const container = this.container, fps = container.fpsLimit / 1000;\n        if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n            p1.destroy();\n        }\n        else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n            p2.destroy();\n        }\n        else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n            if (p1.getRadius() >= p2.getRadius()) {\n                const factor = clamp(p1.getRadius() / p2.getRadius(), 0, p2.getRadius()) * fps;\n                p1.size.value += factor;\n                p2.size.value -= factor;\n                if (p2.getRadius() <= container.retina.pixelRatio) {\n                    p2.size.value = 0;\n                    p2.destroy();\n                }\n            }\n            else {\n                const factor = clamp(p2.getRadius() / p1.getRadius(), 0, p1.getRadius()) * fps;\n                p1.size.value -= factor;\n                p2.size.value += factor;\n                if (p1.getRadius() <= container.retina.pixelRatio) {\n                    p1.size.value = 0;\n                    p1.destroy();\n                }\n            }\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}