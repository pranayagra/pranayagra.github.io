{"ast":null,"code":"import _classCallCheck from \"C:/Users/prana/OneDrive/Desktop/Misc/officialwebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/prana/OneDrive/Desktop/Misc/officialwebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { getRangeValue } from \"../Utils/NumberUtils\";\nimport { isSsr } from \"../Utils/Utils\";\nexport var Retina = /*#__PURE__*/function () {\n  function Retina(container) {\n    _classCallCheck(this, Retina);\n\n    this.container = container;\n  }\n\n  _createClass(Retina, [{\n    key: \"init\",\n    value: function init() {\n      var _this = this;\n\n      var container = this.container,\n          options = container.actualOptions;\n      this.pixelRatio = !options.detectRetina || isSsr() ? 1 : window.devicePixelRatio;\n      var motionOptions = this.container.actualOptions.motion;\n\n      if (motionOptions && (motionOptions.disable || motionOptions.reduce.value)) {\n        if (isSsr() || typeof matchMedia === \"undefined\" || !matchMedia) {\n          this.reduceFactor = 1;\n        } else {\n          var mediaQuery = matchMedia(\"(prefers-reduced-motion: reduce)\");\n\n          if (mediaQuery) {\n            this.handleMotionChange(mediaQuery);\n\n            var handleChange = function handleChange() {\n              _this.handleMotionChange(mediaQuery);\n\n              container.refresh().catch(function () {});\n            };\n\n            if (mediaQuery.addEventListener !== undefined) {\n              mediaQuery.addEventListener(\"change\", handleChange);\n            } else if (mediaQuery.addListener !== undefined) {\n              mediaQuery.addListener(handleChange);\n            }\n          }\n        }\n      } else {\n        this.reduceFactor = 1;\n      }\n\n      var ratio = this.pixelRatio;\n\n      if (container.canvas.element) {\n        var element = container.canvas.element;\n        container.canvas.size.width = element.offsetWidth * ratio;\n        container.canvas.size.height = element.offsetHeight * ratio;\n      }\n\n      var particles = options.particles;\n      this.attractDistance = getRangeValue(particles.move.attract.distance) * ratio;\n      this.linksDistance = particles.links.distance * ratio;\n      this.linksWidth = particles.links.width * ratio;\n      this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n      this.maxSpeed = getRangeValue(particles.move.gravity.maxSpeed) * ratio;\n      var modes = options.interactivity.modes;\n      this.connectModeDistance = modes.connect.distance * ratio;\n      this.connectModeRadius = modes.connect.radius * ratio;\n      this.grabModeDistance = modes.grab.distance * ratio;\n      this.repulseModeDistance = modes.repulse.distance * ratio;\n      this.bounceModeDistance = modes.bounce.distance * ratio;\n      this.attractModeDistance = modes.attract.distance * ratio;\n      this.slowModeRadius = modes.slow.radius * ratio;\n      this.bubbleModeDistance = modes.bubble.distance * ratio;\n\n      if (modes.bubble.size) {\n        this.bubbleModeSize = modes.bubble.size * ratio;\n      }\n    }\n  }, {\n    key: \"initParticle\",\n    value: function initParticle(particle) {\n      var options = particle.options,\n          ratio = this.pixelRatio,\n          moveDistance = options.move.distance,\n          props = particle.retina;\n      props.attractDistance = getRangeValue(options.move.attract.distance) * ratio;\n      props.linksDistance = options.links.distance * ratio;\n      props.linksWidth = options.links.width * ratio;\n      props.moveDrift = getRangeValue(options.move.drift) * ratio;\n      props.moveSpeed = getRangeValue(options.move.speed) * ratio;\n      props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n      var maxDistance = props.maxDistance;\n      maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n      maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n      props.maxSpeed = getRangeValue(options.move.gravity.maxSpeed) * ratio;\n    }\n  }, {\n    key: \"handleMotionChange\",\n    value: function handleMotionChange(mediaQuery) {\n      var options = this.container.actualOptions;\n\n      if (mediaQuery.matches) {\n        var motion = options.motion;\n        this.reduceFactor = motion.disable ? 0 : motion.reduce.value ? 1 / motion.reduce.factor : 1;\n      } else {\n        this.reduceFactor = 1;\n      }\n    }\n  }]);\n\n  return Retina;\n}();","map":{"version":3,"sources":["C:/Users/prana/OneDrive/Desktop/Misc/officialwebsite/node_modules/tsparticles/esm/Core/Retina.js"],"names":["getRangeValue","isSsr","Retina","container","options","actualOptions","pixelRatio","detectRetina","window","devicePixelRatio","motionOptions","motion","disable","reduce","value","matchMedia","reduceFactor","mediaQuery","handleMotionChange","handleChange","refresh","catch","addEventListener","undefined","addListener","ratio","canvas","element","size","width","offsetWidth","height","offsetHeight","particles","attractDistance","move","attract","distance","linksDistance","links","linksWidth","sizeAnimationSpeed","animation","speed","maxSpeed","gravity","modes","interactivity","connectModeDistance","connect","connectModeRadius","radius","grabModeDistance","grab","repulseModeDistance","repulse","bounceModeDistance","bounce","attractModeDistance","slowModeRadius","slow","bubbleModeDistance","bubble","bubbleModeSize","particle","moveDistance","props","retina","moveDrift","drift","moveSpeed","maxDistance","horizontal","vertical","matches","factor"],"mappings":"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","sourcesContent":["import { getRangeValue } from \"../Utils/NumberUtils\";\nimport { isSsr } from \"../Utils/Utils\";\nexport class Retina {\n    constructor(container) {\n        this.container = container;\n    }\n    init() {\n        const container = this.container, options = container.actualOptions;\n        this.pixelRatio = !options.detectRetina || isSsr() ? 1 : window.devicePixelRatio;\n        const motionOptions = this.container.actualOptions.motion;\n        if (motionOptions && (motionOptions.disable || motionOptions.reduce.value)) {\n            if (isSsr() || typeof matchMedia === \"undefined\" || !matchMedia) {\n                this.reduceFactor = 1;\n            }\n            else {\n                const mediaQuery = matchMedia(\"(prefers-reduced-motion: reduce)\");\n                if (mediaQuery) {\n                    this.handleMotionChange(mediaQuery);\n                    const handleChange = () => {\n                        this.handleMotionChange(mediaQuery);\n                        container.refresh().catch(() => {\n                        });\n                    };\n                    if (mediaQuery.addEventListener !== undefined) {\n                        mediaQuery.addEventListener(\"change\", handleChange);\n                    }\n                    else if (mediaQuery.addListener !== undefined) {\n                        mediaQuery.addListener(handleChange);\n                    }\n                }\n            }\n        }\n        else {\n            this.reduceFactor = 1;\n        }\n        const ratio = this.pixelRatio;\n        if (container.canvas.element) {\n            const element = container.canvas.element;\n            container.canvas.size.width = element.offsetWidth * ratio;\n            container.canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles;\n        this.attractDistance = getRangeValue(particles.move.attract.distance) * ratio;\n        this.linksDistance = particles.links.distance * ratio;\n        this.linksWidth = particles.links.width * ratio;\n        this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n        this.maxSpeed = getRangeValue(particles.move.gravity.maxSpeed) * ratio;\n        const modes = options.interactivity.modes;\n        this.connectModeDistance = modes.connect.distance * ratio;\n        this.connectModeRadius = modes.connect.radius * ratio;\n        this.grabModeDistance = modes.grab.distance * ratio;\n        this.repulseModeDistance = modes.repulse.distance * ratio;\n        this.bounceModeDistance = modes.bounce.distance * ratio;\n        this.attractModeDistance = modes.attract.distance * ratio;\n        this.slowModeRadius = modes.slow.radius * ratio;\n        this.bubbleModeDistance = modes.bubble.distance * ratio;\n        if (modes.bubble.size) {\n            this.bubbleModeSize = modes.bubble.size * ratio;\n        }\n    }\n    initParticle(particle) {\n        const options = particle.options, ratio = this.pixelRatio, moveDistance = options.move.distance, props = particle.retina;\n        props.attractDistance = getRangeValue(options.move.attract.distance) * ratio;\n        props.linksDistance = options.links.distance * ratio;\n        props.linksWidth = options.links.width * ratio;\n        props.moveDrift = getRangeValue(options.move.drift) * ratio;\n        props.moveSpeed = getRangeValue(options.move.speed) * ratio;\n        props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n        const maxDistance = props.maxDistance;\n        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n        props.maxSpeed = getRangeValue(options.move.gravity.maxSpeed) * ratio;\n    }\n    handleMotionChange(mediaQuery) {\n        const options = this.container.actualOptions;\n        if (mediaQuery.matches) {\n            const motion = options.motion;\n            this.reduceFactor = motion.disable ? 0 : motion.reduce.value ? 1 / motion.reduce.factor : 1;\n        }\n        else {\n            this.reduceFactor = 1;\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}